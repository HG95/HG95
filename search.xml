<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo博客Ayer主题自定义配置</title>
    <url>/posts/e20385d1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>Ayer主题，下面是我的部分配置，可以参考，希望能帮到你</strong></p>
<a id="more"></a>

<h1 id="主要命令说明"><a href="#主要命令说明" class="headerlink" title="主要命令说明"></a>主要命令说明</h1><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 初始化网站 </span>
$ cd myblog 
$ hexo init 

<span class="token comment" spellcheck="true"># 新建一篇文章 </span>
$ hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> &lt;title<span class="token punctuation">></span> 
$ hexo new post "article_name" <span class="token comment" spellcheck="true"># 新建文章 </span>
$ hexo new page "name" <span class="token comment" spellcheck="true"># 少用 </span>

<span class="token comment" spellcheck="true"># 生成静态文件,可简写为 hexo g </span>
$ hexo generate 
$ hexo g <span class="token comment" spellcheck="true">#</span>

生成草稿 
$ hexo putlish <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> &lt;filename<span class="token punctuation">></span> 

<span class="token comment" spellcheck="true"># 启动服务器 可以简写为 hexo s </span>
$ hexo server <span class="token comment" spellcheck="true"># 参数: -p:指定端口 </span>
<span class="token comment" spellcheck="true"># -s:只使用静态文件 </span>
<span class="token comment" spellcheck="true"># -i:指定ip地址 </span>

<span class="token comment" spellcheck="true"># 部署网站,可以简写为 hexo d </span>
$ hexo deploy 

<span class="token comment" spellcheck="true"># 清除缓存文件 db.json 和已经成成的静态文件 public </span>
$hexo clean 

<span class="token comment" spellcheck="true"># 查看版本 </span>
$ hexo version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h1><p>由于<code>Hex 自带的代码高亮主题显示不好看，所以主题中使用到了 [hexo-prism-plugin](https://github.com/ele828/hexo-prism-plugin) 的</code>Hexo插件来做代码高亮，安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后，修改 <code>Hexo </code>根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 44行 打开生成文件时同时生成文件夹 </span>
<span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">true </span>
<span class="token key atrule">highlight</span><span class="token punctuation">:</span> 
    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false </span>

<span class="token comment" spellcheck="true">#prismjs:</span>
<span class="token comment" spellcheck="true">#  enable: false</span>
<span class="token comment" spellcheck="true">#  preprocess: true</span>
<span class="token comment" spellcheck="true">#  line_number: true</span>
<span class="token comment" spellcheck="true">#  tab_replace: ''</span>

<span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span> 
    <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span> <span class="token comment" spellcheck="true"># realtime/preprocess </span>
    <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span> 
    <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># default false </span>
    custom_css<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h1><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>
 <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml
 <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h1><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p>
<p>安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span> 
    <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true </span>
    <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false </span>
    <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置文章字数统计为 true. </span>
    <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置站点文章总字数统计为 true. </span>
    <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读时长. </span>
    <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读次数.</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="EVANYOU三角彩带背景"><a href="#EVANYOU三角彩带背景" class="headerlink" title="EVANYOU三角彩带背景"></a>EVANYOU三角彩带背景</h1><h2 id="引入位置"><a href="#引入位置" class="headerlink" title="引入位置"></a>引入位置</h2><p>路径：【Hexo\themes\ayer\layout\layout.ejs】</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/head'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
<span class="token operator">&lt;</span>body<span class="token operator">></span>
  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"content on"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> body <span class="token operator">%</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/footer'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>cache<span class="token punctuation">:</span> <span class="token operator">!</span>config<span class="token punctuation">.</span>relative_link<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"float_btns"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/totop'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">></span>
    <span class="token operator">&lt;</span>aside <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sidebar on"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/sidebar'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>aside<span class="token operator">></span>
    <span class="token operator">&lt;</span>script<span class="token operator">></span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">"(max-width: 768px)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.content'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'on'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.sidebar'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'on'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/modal'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/after-footer'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>music<span class="token operator">&amp;&amp;</span>theme<span class="token punctuation">.</span>music<span class="token punctuation">.</span>enable<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/music'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 三角彩带背景 <span class="token operator">--</span><span class="token operator">></span>
  <span class="token operator">&lt;</span>canvas id<span class="token operator">=</span><span class="token string">"evanyou-canvas"</span> style<span class="token operator">=</span><span class="token string">"opacity: 0.3; position: fixed; top: 0px; left: 0px; z-index: -1; width: 100%; height: 100%; pointer-events: none;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>canvas<span class="token operator">></span>
  <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/gh/XXXZhy/Blog_Image/js/evanyou_canvas.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Valine评论框加背景"><a href="#Valine评论框加背景" class="headerlink" title="Valine评论框加背景"></a>Valine评论框加背景</h1><p>路径：【Hexo\themes\ayer\layout_partial\post\valine.ejs】</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(!index</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.leancloud</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.leancloud.enable){</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- valine评论 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vcomments-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vcomments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//cdn1.lncld.net/static/js/3.0.4/av-min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- &lt;script src='https://cdn.jsdelivr.net/npm/valine@1.3.10/dist/Valine.min.js'>&lt;/script> --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//unpkg.com/valine/dist/Valine.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 评论背景 --></span>                                                         
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
    <span class="token selector"><span class="token id">#veditor</span></span><span class="token punctuation">{</span><span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">10</span>rem<span class="token punctuation">;</span>
        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(https://gitee.com/cungudafa/source/raw/master/img/gif/katon/pinkcoolpig.gif)</span><span class="token punctuation">;</span>
        <span class="token property">background-size</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span>
        <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>
        <span class="token property">background-position</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token property">resize</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- Valine配置 --></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">
    <span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        el<span class="token punctuation">:</span> <span class="token string">'#vcomments'</span><span class="token punctuation">,</span>
        enableQQ<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        app_id<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.leancloud.app_id %>'</span><span class="token punctuation">,</span>
        app_key<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.leancloud.app_key %>'</span><span class="token punctuation">,</span>
        path<span class="token punctuation">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">,</span>
        <span class="token comment" spellcheck="true">//notify: '&lt;%- theme.valine.notify %>',</span>
        <span class="token comment" spellcheck="true">//verify: '&lt;%- theme.valine.verify %>',</span>
        avatar<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.avatar %>'</span><span class="token punctuation">,</span>
        placeholder<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.placeholder %>'</span><span class="token punctuation">,</span>
        recordIP<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>

        <span class="token comment" spellcheck="true">// 设置Bilibili表情包地址</span>
        emojiCDN<span class="token punctuation">:</span> <span class="token string">'https://cdn.jsdelivr.net/gh/XXXZhy/Blog_Image/valine_emoticon/'</span><span class="token punctuation">,</span> 
        <span class="token comment" spellcheck="true">// 表情title和图片映射</span>
        emojiMaps<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">"墙角滑稽"</span><span class="token punctuation">:</span> <span class="token string">"害怕滑稽.gif"</span><span class="token punctuation">,</span>
            <span class="token string">"仙女下凡"</span><span class="token punctuation">:</span> <span class="token string">"仙女下凡.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"听歌"</span><span class="token punctuation">:</span> <span class="token string">"听歌.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"嫌弃"</span><span class="token punctuation">:</span> <span class="token string">"嫌弃.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"害羞"</span><span class="token punctuation">:</span> <span class="token string">"害羞.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"彩虹滑稽"</span><span class="token punctuation">:</span> <span class="token string">"彩虹滑稽.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"快走"</span><span class="token punctuation">:</span> <span class="token string">"快走.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"扯脸"</span><span class="token punctuation">:</span> <span class="token string">"扯脸.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"摸脸"</span><span class="token punctuation">:</span> <span class="token string">"摸脸.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"流汗"</span><span class="token punctuation">:</span> <span class="token string">"流汗.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"滑滑板"</span><span class="token punctuation">:</span> <span class="token string">"滑滑板.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"点赞"</span><span class="token punctuation">:</span> <span class="token string">"点赞.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"转圈圈"</span><span class="token punctuation">:</span> <span class="token string">"转圈圈.webp"</span><span class="token punctuation">,</span>
            <span class="token comment" spellcheck="true">// ... 更多表情</span>
        <span class="token punctuation">}</span>     
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> infoEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#vcomments .info'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>infoEle <span class="token operator">&amp;&amp;</span> infoEle<span class="token punctuation">.</span>childNodes <span class="token operator">&amp;&amp;</span> infoEle<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        infoEle<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            item<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
    <span class="token selector"><span class="token id">#vcomments-box</span> </span><span class="token punctuation">{</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">30</span>px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
        <span class="token selector"><span class="token id">#vcomments-box</span> </span><span class="token punctuation">{</span>
            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">0</span>px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token selector"><span class="token id">#vcomments-box</span> <span class="token id">#vcomments</span> </span><span class="token punctuation">{</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector"><span class="token class">.v</span> <span class="token class">.vlist</span> <span class="token class">.vcard</span> <span class="token class">.vh</span> </span><span class="token punctuation">{</span>
        <span class="token property">padding-right</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector"><span class="token class">.v</span> <span class="token class">.vlist</span> <span class="token class">.vcard</span> </span><span class="token punctuation">{</span>
        <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="运行天数"><a href="#运行天数" class="headerlink" title="运行天数"></a>运行天数</h1><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><p>路径：【Hexo\themes\ayer\layout_partial\footer.ejs】加入</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 运行天数 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>runtime_span<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><p>路径：【Hexo\themes\ayer\layout_partial\footer.ejs】加入，在runtime_span标签后加</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>            
    <span class="token keyword">function</span> <span class="token function">show_runtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"show_runtime()"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        X <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"02/22/2020 22:22:22"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Y <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        T <span class="token operator">=</span> <span class="token punctuation">(</span>Y<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> X<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        M <span class="token operator">=</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
        a <span class="token operator">=</span> T <span class="token operator">/</span> M<span class="token punctuation">;</span>
        A <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        b <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">-</span> A<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">;</span>
        B <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        c <span class="token operator">=</span> <span class="token punctuation">(</span>b <span class="token operator">-</span> B<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>
        C <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">-</span> B<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        D <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">-</span> C<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        runtime_span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"小站在各种崩坏中坚持了: "</span> <span class="token operator">+</span> A <span class="token operator">+</span> <span class="token string">"天"</span> <span class="token operator">+</span> B <span class="token operator">+</span> <span class="token string">"小时"</span> <span class="token operator">+</span> C <span class="token operator">+</span> <span class="token string">"分"</span> <span class="token operator">+</span> D <span class="token operator">+</span> <span class="token string">"秒"</span>
    <span class="token punctuation">}</span>
    <span class="token function">show_runtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="自我介绍botui机器人"><a href="#自我介绍botui机器人" class="headerlink" title="自我介绍botui机器人"></a>自我介绍botui机器人</h1><p>路径：【FHexo\source\about\index.md】</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">--</span><span class="token operator">-</span>
title<span class="token punctuation">:</span> about
date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">09</span> <span class="token number">19</span><span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">:</span><span class="token number">38</span>
<span class="token operator">--</span><span class="token operator">-</span>

<span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"entry-content"</span><span class="token operator">></span>
  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"hello-mashiro"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"popcontainer"</span> style<span class="token operator">=</span><span class="token string">"min-height: 300px; padding: 2px 6px 4px; background-color: rgba(242, 242, 242, 0.5); border-radius: 10px;"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>center<span class="token operator">></span>
    <span class="token operator">&lt;</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span>h4<span class="token operator">></span>
    与<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span>ruby<span class="token operator">></span>
    XXXZhy<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span>rp<span class="token operator">></span>
    （<span class="token operator">&lt;</span><span class="token operator">/</span>rp<span class="token operator">></span>
    <span class="token operator">&lt;</span>rp<span class="token operator">></span>
    ）<span class="token operator">&lt;</span><span class="token operator">/</span>rp<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ruby<span class="token operator">></span>
    通话中：<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>
    <span class="token operator">&lt;</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>center<span class="token operator">></span>
    <span class="token operator">&lt;</span>bot<span class="token operator">-</span>ui<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>botui<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>


<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/gh/HG95/CDN/botui_hhg.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>

<span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/botui/0.3.9/botui-theme-default.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span>
<span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/botui/0.3.9/botui.min.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>将上面这个的botui_xxxzhy.js下载下来，里面最后的对话改成自己的，再引进便可以了。</p>
<h1 id="文章顶置"><a href="#文章顶置" class="headerlink" title="文章顶置"></a>文章顶置</h1><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> uninstall hexo-generator-index --save
$ <span class="token function">npm</span> <span class="token function">install</span> hexo-generator-index-pin-top --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">index_generator</span><span class="token punctuation">:</span>
  <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">''</span>
  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">10</span>
  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>要在文章的开始加入 <code>top:</code> 是否开启置顶</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> Hexo博客Ayer主题自定义配置
<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-09-13 19:12:26</span>
<span class="token key atrule">categories</span><span class="token punctuation">:</span> Hexo
tags<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="页内音乐播放器"><a href="#页内音乐播放器" class="headerlink" title="页内音乐播放器"></a>页内音乐播放器</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-tag-aplayer<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>公式</strong></p>
<pre class="line-numbers language-yaml"><code class="language-yaml">&lt;<span class="token tag">!--</span> 简单示例 (id<span class="token punctuation">,</span> server<span class="token punctuation">,</span> type)  <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span>
&lt;<span class="token tag">!--</span> 网易云音乐的歌单id <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span>
<span class="token punctuation">{</span>% meting "60198" "netease" "playlist" %<span class="token punctuation">}</span>

&lt;<span class="token tag">!--</span> 进阶示例 <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span>
<span class="token punctuation">{</span>% meting "60198" "netease" "playlist" "autoplay" "mutex<span class="token punctuation">:</span>false" "listmaxheight<span class="token punctuation">:</span>340px" "preload<span class="token punctuation">:</span>none" "theme<span class="token punctuation">:</span><span class="token comment" spellcheck="true">#ad7a86"%}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>配置_config.yml文件</strong></p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">aplayer</span><span class="token punctuation">:</span>
  <span class="token key atrule">meting</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h1 id="中文链接转拼音"><a href="#中文链接转拼音" class="headerlink" title="中文链接转拼音"></a>中文链接转拼音</h1><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p>
<p>安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="添加视频"><a href="#添加视频" class="headerlink" title="添加视频"></a>添加视频</h1><p>直接在<code>.md</code> 文件中引入代码：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding-bottom</span><span class="token punctuation">:</span><span class="token number">75%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//player.bilibili.com/player.html?aid<span class="token punctuation">=</span>884294177&amp;bvid<span class="token punctuation">=</span>BV1iK4y1Y7dE&amp;cid<span class="token punctuation">=</span>227370204&amp;page<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span> 
<span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span>  <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">  
<span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span></span><span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div style="position:relative; width:100%; height:0; padding-bottom:75%;">
<iframe src="//player.bilibili.com/player.html?aid=884294177&amp;bvid=BV1iK4y1Y7dE&amp;cid=227370204&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" style="position:absolute; width:100%; height:100%;  left:0; top:0"> </iframe>
</div>
这里是先获取嵌入式分享的代码：

<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200913221431.png" alt="image-20200913221305549" style="zoom: 67%;">

<p>提取嵌入代码里面的 src ，并复制到上面的代码中。</p>
<h1 id="hexo中插入pdf"><a href="#hexo中插入pdf" class="headerlink" title="hexo中插入pdf"></a>hexo中插入pdf</h1><h2 id="安装hexo-pdf插件"><a href="#安装hexo-pdf插件" class="headerlink" title="安装hexo-pdf插件"></a>安装hexo-pdf插件</h2><p>插件地址：<a href="https://links.jianshu.com/go?to=https://github.com/superalsrk/hexo-pdf">hexo-pdf</a></p>
<p><strong>Install</strong></p>
<pre><code>$ npm install --save hexo-pdf</code></pre>
<h2 id="利用html语法"><a href="#利用html语法" class="headerlink" title="利用html语法"></a>利用html语法</h2><p>首先修改<code>_config.yml</code>文件</p>
<p><strong>将_config.yml中的post_asset_folder选项置为true</strong></p>
<p>当您设置post_asset_folder为true参数后，在建立文件时，Hexo 会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。</p>
<h2 id="直接使用"><a href="#直接使用" class="headerlink" title="直接使用"></a>直接使用</h2><p>在\themes\next\source\目录下创建file文件夹，将pdf文件丢进去，文章中引用：</p>
<pre><code>{% pdf /file/pdf文件%}</code></pre>
<p>如果使用外接链接，使用如下：</p>
<pre><code>外部链接：
{% pdf http://7xov2f.com1.z0.glb.clouddn.com/bash_freshman.pdf %}</code></pre>
<h1 id="在-Hexo-中插入-ECharts-动态图表"><a href="#在-Hexo-中插入-ECharts-动态图表" class="headerlink" title="在 Hexo 中插入 ECharts 动态图表"></a>在 Hexo 中插入 ECharts 动态图表</h1><h2 id="Hexo-中的-ECharts"><a href="#Hexo-中的-ECharts" class="headerlink" title="Hexo 中的 ECharts"></a>Hexo 中的 ECharts</h2><p>Hexo 的 <a href="https://github.com/quentin-chen/hexo-tag-echarts3">ECharts 插件</a>是我根据周旅军的原型插件[<a href="https://kchen.cc/2016/11/05/echarts-in-hexo/#fn:1">1]</a>开发的，已收录于 Hexo <a href="https://hexo.io/plugins/">官方插件页</a>。插件的安装和使用非常的简单，只需要进入博客目录，然后安装</p>
<pre><code>npm install hexo-tag-echarts3 --save</code></pre>
<p>之后在文章内使用 ECharts 的 <code>tag</code> 就可以了：</p>
<pre><code>{% echarts 400 '85%' %}
\\TODO option goes here
{% endecharts %}</code></pre>
<p>其中 <code>echarts</code> 是标签名，不需要更改，<code>400</code> 是图表容器的高度，<code>85%</code> 是图表容器的相对宽度。而在 <code>tag</code> 之间的部分，则是需要自己填充的图表数据了。</p>
<h1 id="利用Hexo-abbrlink插件生成唯一文章链接"><a href="#利用Hexo-abbrlink插件生成唯一文章链接" class="headerlink" title="利用Hexo-abbrlink插件生成唯一文章链接"></a>利用Hexo-abbrlink插件生成唯一文章链接</h1><p>安装</p>
<pre><code>npm install hexo-abbrlink --save</code></pre>
<p>修改 <code>_config.yml</code> 文件</p>
<pre><code>permalink: posts/:abbrlink/
# abbrlink config
abbrlink:
  alg: crc32      #support crc16(default) and crc32
  rep: hex        #support dec(default) and hex</code></pre>
<h1 id="日志的自动分类插件-hexo-auto-category"><a href="#日志的自动分类插件-hexo-auto-category" class="headerlink" title="日志的自动分类插件 hexo-auto-category"></a>日志的自动分类插件 hexo-auto-category</h1><p>安装</p>
<pre><code>$ npm install hexo-auto-category --save</code></pre>
<p>配置</p>
<p>在站点根目录下的<code>_config.yml</code>添加：</p>
<pre><code># Generate categories from directory-tree
# Dependencies: https://github.com/xu-song/hexo-auto-category
# depth: the depth of directory-tree you want to generate, should &gt; 0
auto_category:
 enable: true
 depth:</code></pre>
<h1 id="在Hexo博客中加入豆瓣读书页面"><a href="#在Hexo博客中加入豆瓣读书页面" class="headerlink" title="在Hexo博客中加入豆瓣读书页面"></a>在Hexo博客中加入豆瓣读书页面</h1><p><a href="https://bestzuo.cn/posts/hexo-douban.html">https://bestzuo.cn/posts/hexo-douban.html</a></p>
<h1 id="部署到github上"><a href="#部署到github上" class="headerlink" title="部署到github上"></a>部署到github上</h1><p><strong>安装插件：</strong></p>
<pre><code>npm install hexo-deployer-git --save</code></pre>
<p><strong>修改网站配置文件_config.yml,添加deploy信息：</strong></p>
<pre><code>deploy:
  type: git
  repository: https://github.com/HG95/HG95.github.io.git
  branch: master</code></pre>
<p>上面的repo的配置信息，替换成自己的项目名字</p>
<p><strong>生成SSH key:</strong></p>
<pre><code>$ ssh-agent bash</code></pre>
<p>以上命令回车，启动进程，后再输入命令：</p>
<pre><code>$ ssh-add ~/.ssh/id_rsa</code></pre>
<p>按照提示操作输入密码，</p>
<p>这样就在c盘对应位置生成了ssh-key；</p>
<p>配置github账户的ssh-key<br>打开id_rsa.pub文件将一整串公钥拷贝下来</p>
<p>进入你的github账户设置，在ssh and GPG keys中新增一个ssh key，如下</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201118202717.png" alt="image-20201118202440512" style="zoom: 33%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20201118202726.png" alt="image-20201118202520067" style="zoom:33%;">

<p>title随意，key填id_rsa.pub文件中内容，保存即可；</p>
<p>验证是否连接成功：</p>
<pre><code>$ ssh -T git@github.com</code></pre>
<p>出现下面的语句说明你的ssh key已经配置好了</p>
<pre><code>Hi wispyoureyes! You've successfully authenticated, but GitHub does not provide shell access.</code></pre>
<p>ok,到了这一步，本地跟远程github的连接已经建立，在项目中，直接生成静态文件，上传就可以了：</p>
<pre><code>$ hexo clean  //清除缓存文件db.json和已生成的静态文件public
$ hexo g   //生成网站静态文件到默认设置的public文件夹
$ hexo d   //部署网站到设定的仓库</code></pre>
<pre><code>hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo s

hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo deploy</code></pre>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.xxxzhy.com/2020/04/28/Hexo%E5%8D%9A%E5%AE%A2Ayer%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE/" target="_blank">Hexo博客Ayer主题自定义配置</a></li>
<li><a href="https://wenyan.online/2020/08/09/hexo-bo-ke-da-jian/" target="_blank">hexo博客搭建</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/76951130" target="_blank">免费CDN：jsDelivr+Github 使用方法</a></li>
<li><a href="https://jankin987.github.io/2018/09/19/02.Hexo/03.hexo%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%92%8Cpdf/" target="_blank">hexo配置本地图片和pdf</a>  </li>
<li><a href="https://segmentfault.com/a/1190000018250408" target="_blank">使用Hexo框架搭建博客，并部署到github上</a> </li>
<li><a href="https://kchen.cc/2016/11/05/echarts-in-hexo/" target="_blank">在 Hexo 中插入 ECharts 动态图表</a>  </li>
<li><a href="https://www.tony-bro.com/posts/2249267013/" target="_blank">Hexo插件推荐</a>   </li>
<li><a href="https://zhuanlan.zhihu.com/p/112318081" target="_blank">利用Hexo-abbrlink插件生成唯一文章链接</a>   </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>『Arcpy』 像元统计 (Spatial Analyst)</title>
    <url>/posts/2c5ccb85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>根据多个栅格数据计算每个像元的统计数据。</p>
<p>可用的统计数据有：众数、最大值、均值、中位数、最小值、少数、范围、标准差、总和及变异度。</p>
<a id="more"></a>

<h1 id="插图"><a href="#插图" class="headerlink" title="插图"></a>插图</h1><img src="https://gitee.com/HHG1092090447/img/raw/master/20210104142724.png" alt="GUID-D8BD897C-B7A2-46A5-93DC-121409FF4C0D-web">

<p><em>OutRas = CellStatistics([InRas1, InRas2, InRas3], “SUM”, “NODATA”, “SINGLE_BAND”)</em></p>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><ul>
<li><p>使用此工具时输入栅格的顺序不重要。</p>
</li>
<li><p>对于最大值、最小值、均值、中位数、众数、少数及总和统计数据类型，如果将单个栅格数据用作输入，则输出像元值将与输入像元值相同。对于范围和标准偏差，输出像元值将全部为 0。对于 Variety，它将是 1。</p>
</li>
<li><p>如果未选中<strong>以多波段方式处理</strong>参数（在 Python 中，process_as_multiband 设置为 SINGLE_BAND），则来自多波段栅格输入的每个波段都将分别作为单波段栅格进行处理，且输出将是单波段栅格。</p>
<img src="https://gitee.com/HHG1092090447/img/raw/master/20210104142811.png" alt="GUID-65E29EE7-3679-4CE0-833A-E3F29F1EB319-web">

<p><em>当作为 SINGLE_BAND 进行处理时，像元统计工具将创建单波段输出。</em></p>
</li>
<li><p>如果选中<strong>以多波段方式处理</strong>参数（在 Python 中，process_as_multiband 设定为 MULTI_BAND），每个多波段栅格输入都将被作为多波段栅格进行处理，而输出将是多波段栅格。如果输入是多波段栅格和常量的组合，则输出栅格也将是多波段。每个多波段输入中的波段数必须相同。</p>
<p>该工具将使用另一个输入的相应波段对一个输入的每个波段执行操作。如果输入之一是多波段栅格，而另一个输入是常量，则该工具将使用多波段输入中每个波段的常量值执行操作。</p>
<img src="https://gitee.com/HHG1092090447/img/raw/master/20210104142825.png" alt="GUID-E2051A7D-8304-4CC0-B57F-EF9F68690906-web">

<p><em>当作为 MULTI_BAND 进行处理时，像元统计工具将创建多波段输出。</em></p>
</li>
</ul>
<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><pre class="line-numbers language-python"><code class="language-python">CellStatistics<span class="token punctuation">(</span>in_rasters_or_constants<span class="token punctuation">,</span> <span class="token punctuation">{</span>statistics_type<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>ignore_nodata<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>process_as_multiband<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><table>
<thead>
<tr>
<th>参数</th>
<th align="left">说明</th>
<th>数据类型</th>
</tr>
</thead>
<tbody><tr>
<td>in_rasters_or_constants<br>[in_raster_or_constant,…]</td>
<td align="left">输入栅格列表，将为其中的输入栅格计算“分析”窗口中各个像元的统计数据。可使用一个数字作为输入；但是，像元大小和范围必须先在环境中进行设置。如果将 processing_as_multiband 参数设置为 MULTI_BAND，则所有多波段输入应具有相等数量的波段。</td>
<td>Raster Layer; Constant</td>
</tr>
<tr>
<td>statistics_type（可选）</td>
<td align="left">指定要计算的统计数据类型。MEAN —将计算输入的平均值。MAJORITY —将计算输入的众数（出现次数最多的值）。MAXIMUM —将计算输入的最大值。MEDIAN —将计算输入的中值。MINIMUM —将计算输入的最小值。MINORITY —将计算输入的少数（出现次数最少的值）。RANGE —将计算输入的范围（最大值和最小值之差）。STD —将计算输入的标准偏差。SUM —将计算输入的总和（所有值的总和）。VARIETY —将计算输入的变异度（唯一值的数量）。默认统计类型为平均值。</td>
<td>String</td>
</tr>
<tr>
<td>ignore_nodata（可选）</td>
<td align="left">指定在进行统计计算时是否将忽略 NoData 值。DATA —在处理像元位置处，如果任意输入栅格具有 NoData，将忽略该 NoData 值。仅考虑具有有效数据的像元来计算统计数据。这是默认设置。NODATA —如果任意输入栅格的处理像元位置为 NoData，该像元的输出将为 NoData。</td>
<td>Boolean</td>
</tr>
<tr>
<td>process_as_multiband（可选）</td>
<td align="left">指定如何处理输入多波段栅格波段。SINGLE_BAND —来自多波段栅格输入的每个波段将被单独处理为单波段栅格。这是默认设置。MULTI_BAND —每个多波段栅格输入都将作为多波段栅格进行处理。将使用其他输入的相应波段数对一个输入的每个波段执行操作。</td>
<td>Boolean</td>
</tr>
</tbody></table>
<h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
<th>数据类型</th>
</tr>
</thead>
<tbody><tr>
<td>out_raster</td>
<td>输出栅格。对于各个像元，可通过将指定统计数据类型应用到该位置处的输入栅格来确定该值。</td>
<td>Raster</td>
</tr>
</tbody></table>
<h1 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h1><p>CellStatistics 示例 1（Python 窗口）</p>
<p>在本示例中，将针对多个输入 Grid 栅格中的每个像元计算标准差，并将结果输出为 IMG 栅格。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
<span class="token keyword">from</span> arcpy <span class="token keyword">import</span> env
<span class="token keyword">from</span> arcpy<span class="token punctuation">.</span>sa <span class="token keyword">import</span> <span class="token operator">*</span>
env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> <span class="token string">"C:/sapyexamples/data"</span>
outCellStats <span class="token operator">=</span> CellStatistics<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"degs"</span><span class="token punctuation">,</span> <span class="token string">"negs"</span><span class="token punctuation">,</span> <span class="token string">"cost"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"STD"</span><span class="token punctuation">,</span> <span class="token string">"DATA"</span><span class="token punctuation">)</span>
outCellStats<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">"C:/sapyexamples/output/outcellstats.img"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在自己使用的过程中发现需要将计算的影像放到同一个文件夹下，才能正确的运行程序，</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span>


<span class="token keyword">import</span> arcpy
<span class="token keyword">from</span> arcpy <span class="token keyword">import</span> env
<span class="token keyword">from</span> arcpy<span class="token punctuation">.</span>sa <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> os
<span class="token keyword">import</span> shutil


arcpy<span class="token punctuation">.</span>CheckOutExtension<span class="token punctuation">(</span><span class="token string">"ImageAnalyst"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 检查许可</span>
arcpy<span class="token punctuation">.</span>CheckOutExtension<span class="token punctuation">(</span><span class="token string">"spatial"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 检查许可</span>


<span class="token keyword">def</span> <span class="token function">mean_tif</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> o_tif<span class="token punctuation">)</span><span class="token punctuation">:</span>
    arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> t
    Rasters <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListRasters<span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token string">'tif'</span><span class="token punctuation">)</span>
    outCellStatistics <span class="token operator">=</span> CellStatistics<span class="token punctuation">(</span>Rasters<span class="token punctuation">,</span> <span class="token string">"MEAN"</span><span class="token punctuation">)</span>
    outCellStatistics<span class="token punctuation">.</span>save<span class="token punctuation">(</span>o_tif<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">del_file</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    paths <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span> file<span class="token punctuation">)</span> <span class="token keyword">for</span> file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> file <span class="token keyword">in</span> paths<span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>file<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">parse_tif</span><span class="token punctuation">(</span>day<span class="token punctuation">,</span> night<span class="token punctuation">,</span> temporary_file<span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>temporary_file<span class="token punctuation">)</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>te<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>out<span class="token punctuation">)</span>

    days <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>day<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">for</span> name <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>day<span class="token punctuation">)</span><span class="token punctuation">]</span>
    nights <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>night<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">for</span> name <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>night<span class="token punctuation">)</span><span class="token punctuation">]</span>
    outs <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>out<span class="token punctuation">,</span> name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'LST_Day_1km'</span><span class="token punctuation">,</span> <span class="token string">'mean'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> name <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>day<span class="token punctuation">)</span><span class="token punctuation">]</span>

    <span class="token keyword">for</span> d_tif<span class="token punctuation">,</span> n_tif<span class="token punctuation">,</span> o_tif <span class="token keyword">in</span> zip<span class="token punctuation">(</span>days<span class="token punctuation">,</span> nights<span class="token punctuation">,</span> outs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>d_tif<span class="token punctuation">,</span> temporary_file<span class="token punctuation">)</span>
        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>n_tif<span class="token punctuation">,</span> temporary_file<span class="token punctuation">)</span>
        mean_tif<span class="token punctuation">(</span>temporary_file<span class="token punctuation">,</span> o_tif<span class="token punctuation">)</span>
        <span class="token keyword">print</span> d_tif<span class="token punctuation">,</span> n_tif
        del_file<span class="token punctuation">(</span>temporary_file<span class="token punctuation">)</span>

    shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>temporary_file<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    day <span class="token operator">=</span> r<span class="token string">'F:\CodeFile\d'</span>
    night <span class="token operator">=</span> r<span class="token string">'F:\CodeFile\n'</span>
    <span class="token comment" spellcheck="true"># 临时文件夹,如何不存在,会自动建立,程序运行完会自动删除</span>
    te <span class="token operator">=</span> r<span class="token string">'F:\CodeFile\means'</span>
    <span class="token comment" spellcheck="true"># 文件输出,如何不存在,会自动建立</span>
    out_file <span class="token operator">=</span> r<span class="token string">'F:\CodeFile\mean'</span>

    parse_tif<span class="token punctuation">(</span>day<span class="token punctuation">,</span> night<span class="token punctuation">,</span> te<span class="token punctuation">,</span> out_file<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/spatial-analyst/cell-statistics.htm">像元统计 (Spatial Analyst)</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Arcpy</category>
      </categories>
      <tags>
        <tag>Arcpy</tag>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 多元拟合分析</title>
    <url>/posts/5f339216/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>多元回归分析</p>
<a id="more"></a>

<p>加载excel数据，将excel拖入origin，选择第一行将其转为长名称：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215552.png" alt="image-20210103214203462" style="zoom:80%;">

<h1 id="多元回归分析——带截距"><a href="#多元回归分析——带截距" class="headerlink" title="多元回归分析——带截距"></a>多元回归分析——带截距</h1><p>上方菜单栏：<code>Analysis</code>-&gt;<code>Fitting</code>-&gt;<code>Multiple Linear Regression</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215559.png" alt="image-20210103214535901" style="zoom:80%;">

<p>数据选择：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215604.png" alt="image-20210103214738950" style="zoom: 80%;">

<p>其它参数默认即可，点击🆗，得到拟合的结果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215609.png" alt="image-20210103214904529" style="zoom: 67%;">

<h1 id="多元回归分析——自定义截距"><a href="#多元回归分析——自定义截距" class="headerlink" title="多元回归分析——自定义截距"></a>多元回归分析——自定义截距</h1><p>打开多元回归分析的对话框，数据选择后，切换到<code>Fit Control</code>,如图所示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215619.png" alt="image-20210103215212812" style="zoom:80%;">

<p>点击🆗，和上面的结果相比可以看到截距为0：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215628.png" alt="image-20210103215424336" style="zoom:67%;">

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.bilibili.com/video/BV1jK411g7gq">回归拟合分析</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
        <tag>多元拟合分析</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』  柱状图</title>
    <url>/posts/c093d808/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><img src="https://raw.githubusercontent.com/HG95/image/master/20210101120601.png" alt="主要内容" style="zoom:150%;">





<a id="more"></a>

<h1 id="一、单一柱状图"><a href="#一、单一柱状图" class="headerlink" title="一、单一柱状图"></a>一、单一柱状图</h1><ul>
<li><p>数据整理<br>将柱状图的状态名称作为x轴（A列），各个状态的指标（COD）作为Y轴（B列）</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120115.png" alt="image-20201212225711708" style="zoom:67%;">
</li>
<li><p>选中A、B两列，【Plot】-【column/bar/pie】-【coloumn】</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120119.png" alt="image-20201212225815713" style="zoom: 67%;">
</li>
<li><p>生成图像如下：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120124.png" alt="image-20201212225952205" style="zoom: 33%;">
</li>
<li><p>如果希望各色柱颜色变化，双击色柱图，将border、fill的颜色分别设为【color】-【increment】-【starting color】</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120128.png" alt="image-20201212230525831" style="zoom: 67%;">

<p>也可以根据提示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120133.png" alt="image-20201212230428175" style="zoom: 50%;">

</li>
</ul>
<h1 id="二、柱状组图"><a href="#二、柱状组图" class="headerlink" title="二、柱状组图"></a>二、柱状组图</h1><p>如果每个状态下都有多个指标需要比较，那么宜采用柱状组图。</p>
<ul>
<li><p>多个指标（COD、TOC）的数据组织形式如下，两种指标分别作为B、C列</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120138.png" alt="image-20201212231044048" style="zoom: 67%;">
</li>
<li><p>绘图操作同上，选中A、B、C列，【Plot】-【column/bar/pie】-【coloumn】</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120142.png" alt="image-20201212225815713" style="zoom:50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120148.png" alt="image-20201212231240130" style="zoom: 33%;">
</li>
<li><p>添加数据标签</p>
<p>绘图时，如果选用【column+label】可以显示数据标签：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120153.png" alt="image-20201212231346010" style="zoom:50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120158.png" alt="image-20201212231441398" style="zoom: 33%;">

</li>
</ul>
<h1 id="三、分组柱状图"><a href="#三、分组柱状图" class="headerlink" title="三、分组柱状图"></a>三、分组柱状图</h1><ul>
<li><p>数据格式</p>
<p>采用<code>XX YyEr YyEr</code>类型的数据格式</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120203.png" alt="image-20201215164925349" style="zoom:50%;">

<p>第一个<code>X</code>为分组信息，第二各<code>X</code>为点信息，后面的分别为柱形图和散点图及对应误差棒的数据。</p>
<p>选中<code>yEr</code>数据，右击，<code>Set as-&gt;Y Error</code>。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120209.png" alt="image-20201215165001229" style="zoom:50%;">



</li>
</ul>
<p>绘制图形</p>
<ul>
<li><p>选中后面的<code>YyEr YyEr</code>数据，右键选择<code>Grouped Columns - Indexed Data</code>模板</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120214.png" alt="image-20201215165125888" style="zoom: 67%;">
</li>
<li><p>在弹出的对话框中选择<strong>分组信息</strong>，此处选中A和B列</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120219.png" alt="image-20201215165215768" style="zoom:67%;">

<p>点击<code>OK</code>，完成基本图形的绘制。</p>
</li>
</ul>
<p>格式设置</p>
<ul>
<li><p>在右侧<code>Object Manager</code>里选中<code>g1</code>，右击，选择<code>Ungroup</code>，取消组合。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120224.png" alt="image-20201215165314779" style="zoom:67%;">
</li>
<li><p>在<code>Object Manager</code>中双击<code>Scatter</code>，打开<code>Plot Properties</code>页面进行格式设置。选中<strong>散点图</strong>所对应的数据，将<code>Plot Type</code>改为<code>Scatter</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120229.png" alt="image-20201215165457368" style="zoom: 50%;">
</li>
<li><p>点击<code>Apply</code>后，图形的基本形状就有了，后续进行颜色等设置。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120233.png" alt="image-20201215165622052" style="zoom: 50%;">
</li>
<li><p>接下来对横坐标的格式进行设置。双击坐标轴打开<code>Axis Properties</code>页面，设置<code>Table</code>的格式。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120238.png" alt="image-20201215165714951" style="zoom: 50%;">

<p>最后效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120244.png" alt="image-20201215165813688" style="zoom: 50%;">

</li>
</ul>
<h1 id="四、分组双Y轴柱状图（一）"><a href="#四、分组双Y轴柱状图（一）" class="headerlink" title="四、分组双Y轴柱状图（一）"></a>四、分组双Y轴柱状图（一）</h1><ul>
<li><p>之所以选用<strong>双Y轴</strong>图形，是因为右侧的<code>Group3</code>的数值较小，如果只用一个Y轴，则不能很好的显示该组数据。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120249.png" alt="image-20210101110442994" style="zoom:50%;">
</li>
<li><p>数据格式：</p>
<p>将<code>GroupA</code>和<code>GroupB</code>的数据放置在一列，<code>GroupC</code>的数据单独放置。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120253.png" alt="image-20210101110538181" style="zoom:50%;">

<p>注意<code>GroupC</code>的数据的量纲变化。</p>
</li>
<li><p>图形绘制</p>
</li>
<li><p>选中<code>J-M</code>列数据，绘制<a href="https://mp.weixin.qq.com/s?__biz=MzIzMjA1MjAyOA==&amp;mid=2651734006&amp;idx=1&amp;sn=ec45a1e7dd990ff47ff67ef2a384b7b9&amp;chksm=f3605ba5c417d2b3ec27f1555d8b71ed64758796b8a40cd20f2ab1f9a03e86d438653132a84b&amp;token=108488943&amp;lang=zh_CN&amp;scene=21#wechat_redirect">分组柱形图叠加分组散点图</a></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120259.png" alt="image-20210101110726495" style="zoom:33%;">



</li>
</ul>
<ul>
<li><p>选中<code>P-S</code>列数据，同样方法绘制<a href="https://mp.weixin.qq.com/s?__biz=MzIzMjA1MjAyOA==&amp;mid=2651734006&amp;idx=1&amp;sn=ec45a1e7dd990ff47ff67ef2a384b7b9&amp;chksm=f3605ba5c417d2b3ec27f1555d8b71ed64758796b8a40cd20f2ab1f9a03e86d438653132a84b&amp;token=108488943&amp;lang=zh_CN&amp;scene=21#wechat_redirect">分组柱形图叠加分组散点图</a></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120303.png" alt="image-20210101110759473" style="zoom: 33%;">
</li>
<li><p>点击右侧工具栏上的<code>Merge</code>按钮，打开合并图形对话框</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120308.png" alt="image-20210101110853804" style="zoom:50%;">

<p>选中上面绘制的两个图形，<code>在Arrange Setings</code>里设为<strong>1行2列</strong>，点击<code>OK</code>完成图形的合并</p>
</li>
</ul>
<p>格式设置</p>
<ul>
<li><p>将右侧图形的坐标轴标签改到右侧显示</p>
</li>
<li><p>双击图形打开<code>Layer Properties</code>对话框，激活<code>Layer2</code>，切换到<code>Link Axes Scales</code>页面，将<code>Link to</code>选为<code>Layer1</code>，即与图层1关联</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120313.png" alt="image-20210101111151394" style="zoom:50%;">
</li>
<li><p>切换到<code>Size</code>页面，将<code>Units</code>选为<code>% of Linked Layer</code>，<code>Left</code>设为<strong>100</strong>，<code>Width</code>设为<strong>50</strong>，即宽度为左侧图形的一半</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120318.png" alt="image-20210101111224527" style="zoom:67%;">
</li>
<li><p>调整图层的尺寸，使之大小合适：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120323.png" alt="image-20210101111347942" style="zoom:67%;">



</li>
</ul>
<h1 id="五、双Y轴堆积状图（二）"><a href="#五、双Y轴堆积状图（二）" class="headerlink" title="五、双Y轴堆积状图（二）"></a>五、双Y轴堆积状图（二）</h1><ul>
<li><p>数据：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120328.png" alt="image-20201215213457464" style="zoom:50%;">

<p>B、C 列数据大小相似，D列明显小了很多，此时可以选择双Y轴</p>
</li>
<li><p>选中B和D列数据，选取绘图模板：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120333.png" alt="image-20201215215246709" style="zoom:80%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120339.png" alt="image-20201215215407861" style="zoom: 50%;">
</li>
<li><p>将C列添加到第一图层里面：双击左上角的<code>1</code> ,将其添加到图层<code>1</code>，显示为柱状图:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120343.png" alt="image-20201215215546097" style="zoom:67%;">
</li>
<li><p>将右侧两个数据成组：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120349.png" alt="image-20201215215722233" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120353.png" alt="image-20201215215815714" style="zoom: 50%;">
</li>
<li><p>颜色调整：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120359.png" alt="image-20201215220000535" style="zoom:67%;">

<p>最终效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120403.png" alt="image-20201215220107139" style="zoom: 50%;">

<p>此时双Y轴的图已经绘制好，下面将其改编为堆积柱状图</p>
</li>
<li><p>上面的图绘制好后复制一份：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120408.png" alt="image-20201215220230685" style="zoom: 80%;">
</li>
<li><p>打开绘图细节对话框，选择图层1：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120411.png" alt="image-20201215220420463" style="zoom: 67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120416.png" alt="image-20201215220455972" style="zoom: 50%;">
</li>
<li><p>部分柱体显示不完全，选取右侧的重新设置Y轴范围按钮：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120422.png" alt="image-20201215220641184" style="zoom:67%;">

<p>就可以显示全部的柱体了，最后的效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120426.png" alt="image-20201215220728678" style="zoom: 50%;">

</li>
</ul>
<h1 id="六、堆积柱状图"><a href="#六、堆积柱状图" class="headerlink" title="六、堆积柱状图"></a>六、堆积柱状图</h1><h2 id="百分比堆积柱状图"><a href="#百分比堆积柱状图" class="headerlink" title="百分比堆积柱状图"></a>百分比堆积柱状图</h2><p>百分比堆积柱状图是一个很好的展现各个指标或者物种之间比例的图谱</p>
<ul>
<li><p>数据</p>
<p>一组数据，分别是左侧的四个组别(正常对照组，模型组，阳性药组，实验组)，每个组别分别测量5个指标(Factor 1，Factor 2， Factor 3， Factor 4， Factor 5)。我们想要显示出在每个组中，每个指标的相对丰度。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120432.png" alt="image-20201212234911658" style="zoom:67%;">
</li>
<li><p>选中数据，选择百分比堆积柱状图。Origin里面提供了两个模板绘制百分比堆积柱状图(横向或者竖向)，我们选择竖着的堆积柱状图。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120436.png" alt="image-20201212235101144" style="zoom:67%;">

<p>基本图形就出来了：一幅带有标签的百分比堆积柱状图。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120446.png" alt="image-20201212235123495" style="zoom:67%;">

</li>
</ul>
<p>格式调整：</p>
<ul>
<li><p>双击柱子，调整颜色。使用从属，用颜色系进行填充，可以将填充色和边框色设置成一样的，比较好看。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120452.png" alt="image-20201213000238440" style="zoom:50%;">
</li>
<li><p>设置中间的连线为白色，这样就不用显示了</p>
<img src="C:\Users\Hu\AppData\Roaming\Typora\typora-user-images\image-20201212235555276.png" alt="image-20201212235555276" style="zoom:67%;">
</li>
<li><p>设置一个合适的间距</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120456.png" alt="image-20201212235637962" style="zoom:67%;">

<p>如果你觉得显示的图例不合适，你可以显示成数据表中各个指标的数字：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120500.png" alt="image-20201212235919161" style="zoom:50%;">

<p>最后将图中的标签更改一下：</p>
<ul>
<li>删除Y轴标签，重新填写；</li>
<li>将图例右击放成水平；</li>
<li>X，Y轴次坐标取消，字体新罗马加粗；</li>
</ul>
<p>最后得效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120506.png" alt="image-20201213000304867" style="zoom:50%;">

</li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『Graphics』 绘制二维数据集的置信椭圆</title>
    <url>/posts/3b0a2e38/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>如何绘制二维正态分布数据的误差椭圆，又名置信椭圆。</p>
<a id="more"></a>

<p>在二维或者更高维的空间里，数据的聚类往往需要添加一个“置信区间”。仿照一维空间的数据，置信区间往往相对于点估计而来的，在统计学中，一个概率样本的置信区间（Confidence interval）是对这个样本的某个总体参数的区间估计。置信区间展现的是这个参数的真实值有一定概率落在测量结果的周围的程度，其给出的是被测量参数的测量值的可信程度，一般我们用95%置信区间来表示。<br> 那么二维空间的数据也是如此，二维空间的置信区间往往利用置信椭圆来描述，展现真实值的可信程度，一般我们用95%置信椭圆来表示。<br> 为什么是置信椭圆呢，<strong>往往是因为我们的而数据分布形似椭圆</strong></p>
<h1 id="置信椭圆绘制原理"><a href="#置信椭圆绘制原理" class="headerlink" title="置信椭圆绘制原理"></a>置信椭圆绘制原理</h1><h2 id="一、数据中心在原点且轴对齐型"><a href="#一、数据中心在原点且轴对齐型" class="headerlink" title="一、数据中心在原点且轴对齐型"></a>一、数据中心在原点且轴对齐型</h2><p>先看最简单的，轴对齐型的，比方说椭圆长轴平行于x轴</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164412.webp" alt="19396348-3efc6f55365e4510" style="zoom:67%;">

<p>假设我有两列随机变量 x 和 y<br>对于该二维数据，x和y，我们不妨计算下x和y的协方差矩阵：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164425.webp" alt="19396348-ee85a1eb300b094e" style="zoom:50%;">

<p>由于我们的数据，形似椭圆，并且椭圆长轴平行于x轴，那么<strong>协方差矩阵中x轴方向的方差为8.4213，y轴方向的方差为0.9387。</strong>由于x方向与y方向正交，所以x和y这两个随机变量的协方差为0，也可以理解为相关性为0。</p>
<p><strong>由于我们的数据点分布形似椭圆，所以我们定义置信区间就把它定义为椭圆</strong>，我们知道椭圆的标准方程为：<br>$$<br>\left(\frac{x}{a}\right)^{2}+\left(\frac{y}{b}\right)^{2}=1<br>$$<br>那么我们不妨将椭圆的半长轴a定义为σx，半短轴b定义为σy，那么有：<br>$$<br>\left(\frac{x}{\sigma_{x}}\right)^{2}+\left(\frac{y}{\sigma_{y}}\right)^{2}=s<br>$$<br>σ_x与σ_y分别代表x和y的标准差，s与置信度有关。</p>
<p>显然，该椭圆的数据中心为(0,0)。<br>其中s定义椭圆的规模，可以是任意的数（例如，s=1）。现在的问题是如何选择s，使得所得到的椭圆规模代表我们所选择的置信水平（例如，95％的置信水平对应于s =5.991）。(不太明白这个椭圆的规模是什么意思)<br> 这个s=5.991可以通过卡方分布（随机变量平方和）进行计算（假设随机变量x和y服从高斯分布），并且自由度为2.<br>$$<br>\left(\frac{x}{\sigma_{x}}\right)^{2}+\left(\frac{y}{\sigma_{y}}\right)^{2}=s<br>$$</p>
<p>联想到<strong>卡方分布</strong>，上式左侧可以看作为随机变量的平方和，通过查询卡方表，有：<br>$$<br>P(s&lt;5.991)=1-0.05=0.95<br>$$<br>我们知道当 s = 5.991 时，<strong>P(s &lt; 5.991) = 0.95</strong>，也就是说，我们要寻找一个在椭圆上的点，使得 s = 5.991，那么将 s = 5.991 带入椭圆方程：<br>$$<br>\left(\frac{x}{\sigma_{x}}\right)^{2}+\left(\frac{y}{\sigma_{y}}\right)^{2}&lt;5.991<br>$$<br>这个等式表明数据点小于5.991的概率为95%（在椭圆内表示数据点小于5.991）。<br> 那么，s=5.991即为95%置信区间，表示有一组数据，其x方向方差为σx，y方向方差为σy时，如果s=5.991，那么95%的数据点在该椭圆内。<br> 那么置信椭圆的长轴2a：<br>$$<br>2 \sigma_{x} \sqrt{5.991}<br>$$<br>置信椭圆的短轴2b：<br>$$<br>2 \sigma_{y} \sqrt{5.991}<br>$$</p>
<h2 id="二、数据中心在原点且任意方向的置信椭圆"><a href="#二、数据中心在原点且任意方向的置信椭圆" class="headerlink" title="二、数据中心在原点且任意方向的置信椭圆"></a>二、数据中心在原点且任意方向的置信椭圆</h2><p>在数据是相关的情况下，例如存在协方差，所产生的误差椭圆不会是轴对齐的。在这种情况下，如果我们暂时定义一个新的坐标系，使得所述椭圆变为轴对齐，然后旋转所产生的椭圆，那么上面的结论依然有效。</p>
<p>换句话说，之前我们计算平行于x轴和y轴的方差，现在我们计算平行于置信椭圆长轴和短轴的方差，需要计算的方差方向由图1粉红和绿色箭头表示出来。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164446.webp" alt="19396348-d91cc601dd29d79b" style="zoom:67%;">

<p>首先计算随机变量x和y的协方差矩阵，根据协方差矩阵计算该矩阵的特征向量（上图绿色为椭圆短轴方向的特征向量；粉红色为椭圆长轴方向的特征向量），我们定义椭圆长轴方向的特征向量为v1，椭圆短轴方向的特征向量为v2；而特征向量大小为特征值，我们定义椭圆长轴方向的特征值为λ1，椭圆短轴方向的特征值为λ2。<br> 此时椭圆的长轴为：<br>$$<br>2 \sqrt{5.991\lambda_1}<br>$$<br>椭圆的短轴为：<br>$$<br>2 \sqrt{5.991\lambda_2}<br>$$<br>并且定义椭圆长轴与x轴正方向夹角为α：(为了获得椭圆的方向，我们简单地计算最大特征向量的角度)</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164452.webp" alt="19396348-d21ad76a3d39336c" style="zoom:67%;">
$$
\alpha=\arctan \frac{\mathbf{v}_{1}(y)}{\mathbf{v}_{1}(x)}
$$
那么，我们就可以根据角度来对置信椭圆进行“旋转”。

<h2 id="三、任意位置置信椭圆"><a href="#三、任意位置置信椭圆" class="headerlink" title="三、任意位置置信椭圆"></a>三、任意位置置信椭圆</h2><p>有了上面的介绍，那么任意位置的椭圆无非是满足数据中心不在原点，且椭圆长轴与x轴正方向夹角为任意角α。并以此来建立椭圆方程，画出置信椭圆（可见数据中心化可以简便很多计算）</p>
<h1 id="python-绘制置信椭圆"><a href="#python-绘制置信椭圆" class="headerlink" title="python 绘制置信椭圆"></a>python 绘制置信椭圆</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- encoding: utf-8 -*-</span>
<span class="token triple-quoted-string string">"""
@software: PyCharm
@file : 112.py
@time : 2020/12/31 
"""</span>
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>patches <span class="token keyword">import</span> Ellipse
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>transforms <span class="token keyword">as</span> transforms
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd


<span class="token keyword">def</span> <span class="token function">confidence_ellipse</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ax<span class="token punctuation">,</span> n_std<span class="token operator">=</span><span class="token number">3.0</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> x<span class="token punctuation">.</span>size <span class="token operator">!=</span> y<span class="token punctuation">.</span>size<span class="token punctuation">:</span>
        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">"x and y must be the same size"</span><span class="token punctuation">)</span>

    cov <span class="token operator">=</span> np<span class="token punctuation">.</span>cov<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    lambda_<span class="token punctuation">,</span> v <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>eig<span class="token punctuation">(</span>cov<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 计算特征值和特征向量</span>
    angle <span class="token operator">=</span> np<span class="token punctuation">.</span>rad2deg<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arccos<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 计算旋转角度</span>

    ell_radius_x <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>n_std<span class="token operator">*</span>lambda_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    ell_radius_y <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>n_std<span class="token operator">*</span>lambda_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># 默认椭圆中心为原点</span>
    mean_x<span class="token punctuation">,</span>mean_y <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>y<span class="token punctuation">)</span>
    ellipse <span class="token operator">=</span> Ellipse<span class="token punctuation">(</span><span class="token punctuation">(</span>mean_x<span class="token punctuation">,</span>mean_y<span class="token punctuation">)</span><span class="token punctuation">,</span>
                      width<span class="token operator">=</span>ell_radius_x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>
                      height<span class="token operator">=</span>ell_radius_y <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>
                      facecolor<span class="token operator">=</span>facecolor<span class="token punctuation">,</span>
                      angle<span class="token operator">=</span>angle<span class="token punctuation">,</span>
                      <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>

    <span class="token keyword">return</span> ax<span class="token punctuation">.</span>add_patch<span class="token punctuation">(</span>ellipse<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">'data.xlsx'</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span>None<span class="token punctuation">)</span>
    x <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span>
    y <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span>

    <span class="token comment" spellcheck="true"># 卡方值， 95％的置信水平对应于s =5.991</span>
    ss <span class="token operator">=</span> <span class="token number">5.991</span>

    fig<span class="token punctuation">,</span> ax_kwargs <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># ax_kwargs.axvline(c='grey', lw=1)</span>
    <span class="token comment" spellcheck="true"># ax_kwargs.axhline(c='grey', lw=1)</span>


    confidence_ellipse<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ax_kwargs<span class="token punctuation">,</span>n_std<span class="token operator">=</span>ss<span class="token punctuation">,</span>
                       alpha<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>  edgecolor<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> zorder<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    ax_kwargs<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
    ax_kwargs<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Origin-绘制置信椭圆"><a href="#Origin-绘制置信椭圆" class="headerlink" title="Origin 绘制置信椭圆"></a>Origin 绘制置信椭圆</h1><p>在 Apps 里面添加 <code>2D Confidence Ellipse</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164501.png" alt="image-20201231161309391" style="zoom:67%;">

<p>首先激活要绘制置信椭圆的散点图图层：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164506.png" alt="image-20201231161602870" style="zoom: 67%;">

<p>选择右边Apps 里面的 <code>2D Confidence Ellipse</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164511.png" alt="image-20201231161654625" style="zoom:80%;">

<p>此时会弹出对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164516.png" alt="image-20201231162046509" style="zoom:67%;">

<p>效果图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164521.png" alt="image-20201231162156951" style="zoom:67%;">







<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.jianshu.com/p/c3caf3524705">置信椭圆</a></li>
<li><a href="https://blog.csdn.net/qq_36097393/article/details/87605173">从从协方差的误差椭圆到PCA从从协方差的误差椭圆到PCA</a></li>
<li><a href="https://www.osgeo.cn/matplotlib/gallery/statistics/confidence_ellipse.html">matplotlib:绘制二维数据集的置信椭圆</a></li>
<li><a href="https://www.coder.work/article/96588">python - 使用matplotlib在散点图中创建置信椭圆</a></li>
<li><a href="https://www.geek-share.com/detail/2792936587.html">置信椭圆-python</a> </li>
<li><a href="https://www.originlab.com/FileExchange/details.aspx?v=0&amp;fid=365">OriginLab:2D Confidence Ellipse </a></li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Origin</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』如何设置图形X轴为时间序列</title>
    <url>/posts/d2ee1474/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>origin2021 如何设置图形 X 轴为时间序列</p>
<a id="more"></a>

<p>未处理的数据，A 为普通的数据格式，为2012年每天的数据，想要X轴显示<code>年月</code>的形式:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152753.png" alt="image-20201218145422242" style="zoom:67%;">

<p>选择要处理的数据列：<code>Format</code> -&gt;<code>Column Properties</code> :</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152801.png" alt="image-20201218150346432" style="zoom:67%;">

<p>这里选择的显示格式，只是在数据表中的显示格式。</p>
<p>选中两列数据绘制折线图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152820.png" alt="image-20201218152458838" style="zoom:80%;">

<p>这里看到X轴显示的不是期望的 <code>年月</code> 形式的。</p>
<p>双击X轴，打开对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152840.png" alt="image-20201218151502016" style="zoom: 50%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152858.png" alt="image-20201218152322706" style="zoom: 50%;">

<p>最后显示的效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152908.png" alt="image-20201218152429611" style="zoom:80%;">

<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 图形合并-组合图绘制</title>
    <url>/posts/4337443a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>图形合并-组合图绘制</p>
<a id="more"></a>

<p>效果图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152602.png" alt="image-20201215233618245" style="zoom:67%;">

<p>数据：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152609.png" alt="image-20201215233736588" style="zoom:80%;">

<p>有三个工作簿，各有两个表，分别是散点数据和拟合数据：</p>
<h2 id="图形绘制"><a href="#图形绘制" class="headerlink" title="图形绘制"></a>图形绘制</h2><ul>
<li><p>选中第一个表绘制散点数据：</p>
<p>初步调整的结果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152615.png" alt="image-20201215234103013" style="zoom: 50%;">
</li>
<li><p>选择拟合数据：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152619.png" alt="image-20201215234240328" style="zoom: 50%;">

<p>鼠标放到右侧边框处，显示小图片时，拖到左侧的图中并调整为线：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152624.png" alt="image-20201215234430893" style="zoom: 50%;">



</li>
</ul>
<p>  效果：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152630.png" alt="image-20201215234600324" style="zoom: 50%;">

<p>  调整图层顺序：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152635.png" alt="image-20201215234748473" style="zoom:67%;">

<p>  此时发现轴标题变了：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152642.png" alt="image-20201215234832994" style="zoom:67%;">

<p>  如何变回原来的呐？打开绘图设置对话框：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152648.png" alt="image-20201215234943957" style="zoom: 50%;">

<p>  就可以了。</p>
<ul>
<li><p>增加断点，双击轴打开设置对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152653.png" alt="image-20201215235306523" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152658.png" alt="image-20201215235337790" style="zoom:67%;">
</li>
<li><p>设置局部方法效果，激活图层，右侧单继带数据的放大图按钮：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152703.png" alt="image-20201215235448488" style="zoom:80%;">

<p>效果</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152709.png" alt="image-20201215235534609" style="zoom:67%;">
</li>
<li><p>对子图进行修改：</p>
<p>包括修改x轴的坐标范围，重新调整Y轴的缩放比例</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152713.png" alt="image-20201215235720437" style="zoom:67%;">
</li>
<li><p>为子图添加竖直线：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152719.png" alt="image-20201215235843232" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152725.png" alt="image-20201216000403676" style="zoom:67%;">
</li>
<li><p>利用批量绘图（要求数据结构一样），绘制另外两个图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152729.png" alt="image-20201216000801473" style="zoom:67%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152736.png" alt="image-20201216000949444" style="zoom:67%;">

<p>此时另外两个图也绘制好了。</p>
</li>
</ul>
<h2 id="图形合并"><a href="#图形合并" class="headerlink" title="图形合并"></a>图形合并</h2><p>合并图，打开<code>Graph</code>-&gt;<code>Merge Graph Window</code> :</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152741.png" alt="image-20201216001225681" style="zoom:67%;">

<p>同时也可以固定缩放比例：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152747.png" alt="image-20201216002738104" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152754.png" alt="image-20201216001305890" style="zoom: 50%;">

<p>删除重复的元素，并对子图进行调整：</p>
<p>首先调整第一个小图的大小和位置，右键：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152801.png" alt="image-20201216001611865" style="zoom:67%;">

<p>复制格式，然后对其它子图粘贴格式：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152806.png" alt="image-20201216001716220" style="zoom:67%;">

<p>统一调整子图的刻度标签，打开绘图设置：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152810.png" alt="image-20201216002051648" style="zoom:67%;">

<p>此时调整一个图的时候，其它两个图会做出相应的变化：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152815.png" alt="image-20201216002158033" style="zoom: 50%;">

<p>图形已基本绘制好。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 多轴图绘制</title>
    <url>/posts/43744913/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>多轴图绘制</p>
<a id="more"></a>

<h1 id="多轴图绘制一"><a href="#多轴图绘制一" class="headerlink" title="多轴图绘制一"></a>多轴图绘制一</h1><ul>
<li>直接在绘图菜单中选择所需要的模板绘图  </li>
<li>画图之后修改绘图类型  </li>
<li>往图层中添加数据  </li>
</ul>
<p>数据</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150304.png" alt="image-20201215213457464" style="zoom:50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150310.png" alt="image-20201215213729865" style="zoom:80%;">

<h2 id="三Y轴图"><a href="#三Y轴图" class="headerlink" title="三Y轴图"></a>三Y轴图</h2><p>选取后三列数据，选择绘图模板</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150316.png" alt="image-20201215213848804" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150323.png" alt="image-20201215213933580" style="zoom: 50%;">

<ul>
<li><p>调整前两个数据的显示格式：调为柱状图</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150331.png" alt="image-20201215214023049" style="zoom: 50%;">
</li>
<li><p>效果：（此时两个柱体是重合的）</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150339.png" alt="image-20201215214120870" style="zoom: 50%;">

<p>打开绘图设置对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150343.png" alt="image-20201215214327065" style="zoom: 50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150349.png" alt="image-20201215214407314" style="zoom: 50%;">

<p>由于 1，2轴的数据是接近的，将图层2 的y轴与图层1 的y轴进行1 to 1 关联：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150355.png" alt="image-20201215214637013" style="zoom: 50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150401.png" alt="image-20201215214702143" style="zoom: 50%;">

<p>最后修改刻度范围，颜色就可以了。最终效果图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150407.png" alt="image-20201215214920547" style="zoom: 50%;">



</li>
</ul>
<h2 id="双Y轴图"><a href="#双Y轴图" class="headerlink" title="双Y轴图"></a>双Y轴图</h2><p>第二个图，由于第一列数据与第二列数据是相近的，没必要用3y 轴图，可以用双Y轴图。</p>
<ul>
<li><p>选中B和D列数据，选取绘图模板：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150415.png" alt="image-20201215215246709" style="zoom:80%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150420.png" alt="image-20201215215407861" style="zoom: 50%;">
</li>
<li><p>将C列添加到第一图层里面：双击左上角的<code>1</code> ,将其添加到图层1，显示为柱状图:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150425.png" alt="image-20201215215546097" style="zoom:67%;">

<p>将右侧两个数据成组：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150429.png" alt="image-20201215215722233" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150435.png" alt="image-20201215215815714" style="zoom: 50%;">
</li>
<li><p>颜色调整：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150440.png" alt="image-20201215220000535" style="zoom:67%;">

<p>最终效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150445.png" alt="image-20201215220107139" style="zoom: 50%;">

<h2 id="多轴堆叠柱状图"><a href="#多轴堆叠柱状图" class="headerlink" title="多轴堆叠柱状图"></a>多轴堆叠柱状图</h2><p>上面的图绘制好后复制一份：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150452.png" alt="image-20201215220230685" style="zoom:80%;">

<p>打开绘图细节对话框，选择图层1：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150459.png" alt="image-20201215220420463" style="zoom: 50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150507.png" alt="image-20201215220455972" style="zoom: 50%;">

<p>部分柱体显示不完全，选取右侧的重新设置Y轴范围按钮：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150520.png" alt="image-20201215220641184" style="zoom:67%;">



</li>
</ul>
<p>  就可以显示全部的柱体了，最后的效果：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101150514.png" alt="image-20201215220728678" style="zoom: 50%;">

<h1 id="多轴图绘制二"><a href="#多轴图绘制二" class="headerlink" title="多轴图绘制二"></a>多轴图绘制二</h1><ul>
<li>工具栏或者菜单添加图层  </li>
<li>(按需) 往图层中添加数据  </li>
</ul>
<h2 id="顶轴刻度与下轴刻度关联"><a href="#顶轴刻度与下轴刻度关联" class="headerlink" title="顶轴刻度与下轴刻度关联"></a>顶轴刻度与下轴刻度关联</h2><ul>
<li><p>首先绘制一个图（我也不知道怎么画的）：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150526.png" alt="image-20201215222217852" style="zoom: 50%;">
</li>
<li><p>右侧，点击右侧添加顶轴按钮</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150532.png" alt="image-20201215222329595" style="zoom:67%;">



</li>
</ul>
<p>  此时添加了一个新的图层。</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101150540.png" alt="image-20201215222408650" style="zoom: 50%;">

<ul>
<li><p>打开绘图设置对话框，选择TopX：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150544.png" alt="image-20201215222654596" style="zoom:67%;">

<p>分别设置坐标轴的开始和结束的对应关系</p>
<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150551.png" alt="image-20201215223102966" style="zoom: 50%;">

</li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>draw.io、Origin和Visio等导出在word显示无损高清图</title>
    <url>/posts/2fca8b56/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>draw.io、Origin和Visio等导出在word显示无损高清图。</p>
<p>如何在visio的框图中插入公式 visio如何插入word中的数学公式。</p>
<a id="more"></a>

<h1 id="draw-io"><a href="#draw-io" class="headerlink" title="draw.io"></a>draw.io</h1><p>draw.io和Visio 都可以制作流程图等，但draw.io 操作更为便捷。Visio制作的图虽然可以直接插入到word中，但有时候会存在各种问题。</p>
<p>draw.io 可以导出的图片格式如图所示，</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208224122.png" alt="Snipaste_2020-12-08_22-35-58" style="zoom:80%;">

<p>但是导出的图片都不能在word实现无损方法的效果，最近发现可以导出VSDX格式的文件(该文件可以在Visio打开)，Visio 打开该文件后，再将文件保存为 <code>.emf</code> 格式的文件。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208224556.png" alt="image-20201208224546836" style="zoom:80%;">

<p>导出后的文件可以直接导入word,下图是放大1600%的效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208224812.png" alt="image-20201208224721619" style="zoom: 50%;">

<h1 id="怎样在word中得到无损放大的origin组合图"><a href="#怎样在word中得到无损放大的origin组合图" class="headerlink" title="怎样在word中得到无损放大的origin组合图"></a>怎样在word中得到无损放大的origin组合图</h1><p>在 origin 中绘好图之后，复制</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208225519.png" alt="image-20201208225502184" style="zoom:80%;">

<p>新建一页空白 PPT 文档，将复制的图粘贴到空白文档里：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208225656.png" alt="image-20201208225647370" style="zoom:80%;">

<p>然后选择图片，将其另存为<code>.emf</code> 格式的文件。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208225848.png" alt="image-20201208225818944" style="zoom:80%;">

<p>再将文件导入word 后，就实现了无损方法的效果。</p>
<h1 id="Visio-中如何插入数学公式"><a href="#Visio-中如何插入数学公式" class="headerlink" title="Visio 中如何插入数学公式"></a>Visio 中如何插入数学公式</h1><p>先在<a href="https://www.office26.com/word/">word</a>中用自带的公式编辑器将公式写好，如下图</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208230221.png" alt="image-20201208230209424" style="zoom:50%;">

<p>此时选中公式，复制或者Ctrl+C</p>
<p>到<a href="https://www.office26.com/visio/">visio</a>的空白的地方，鼠标右键，点击选择性粘贴，选择Microsoft <a href="https://www.office26.com/word/">Word </a>文档，点击确定后，即可实现公式的粘贴</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208230628.png" alt="image-20201208230331223" style="zoom:50%;">

<p>将公式拖动到合适的位置即可。</p>
<p>最后还可使用Ctrl+G将框图和公式组合到一起，这样移动时两个一起移动，更方便些。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.bilibili.com/video/BV1wp4y1e7oW?from=search&amp;seid=4078241403795458791">怎样在word中得到无损放大的origin组合图</a></li>
<li><a href="https://www.office26.com/visio/visio_14931.html">如何在visio的框图中插入公式 visio如何插入word中的数学公式</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Origin</tag>
        <tag>draw.io</tag>
        <tag>Viso</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 如何美化科学计数法的坐标轴？</title>
    <url>/posts/1d83386a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/HG95/image/master/20210103141944.png" alt="image-20210103141324610" style="zoom: 80%;"></h1><a id="more"></a>

<p>当坐标轴数值比较大时，无论是以10进制显示坐标轴数值（如图1）还是科学计数法显示坐标轴数值（如图2）都不太美观。如何美化科学计数法的坐标轴（如图3）呢？</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103141951.png" alt="image-20201214110821637" style="zoom: 80%;">

<p>A：用户可执行：</p>
<ol>
<li><p>双击坐标轴打开Axis对话框，选择Tick Label:Display选项卡</p>
</li>
<li><p>在Divide by Factor键入需要省略的“10的n次幂”</p>
</li>
<li><p>勾选Set Decimal Places为设置小数点位数，在Decimal Number中可键入需要显示的小数点位数</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103141958.png" alt="image-20201214110931916" style="zoom:67%;">
</li>
<li><p>选择Special Ticks选项卡，在坐标轴最末端的位置新增一个Tick，显示为末端值*10的n次幂（<code>LastNum x 10\+(n)</code>）</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142003.png" alt="image-20201214111025976" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142010.png" alt="image-20210103141607951" style="zoom:80%;"></li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 坐标轴显示部分刻度</title>
    <url>/posts/2f51bfdc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/HG95/image/master/20210103142356.png" alt="image-20210103142250338" style="zoom:80%;"></h1><a id="more"></a>

<p>正常的坐标轴显示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142401.png" alt="image-20201219161606893" style="zoom:80%;">

<p>想要只显示一部分刻度，例如3，4，5</p>
<p>双击坐标轴：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142405.png" alt="image-20201219161837679" style="zoom:80%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142412.png" alt="image-20201219161906316" style="zoom:80%;"><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>sdws</title>
    <url>/posts/be627c25/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a>

<div id="echarts7022" style="width: 85%;height: 400px;margin: 0 auto"></div>
<script src="https://cdn.bootcss.com/echarts/3.8.0/echarts.common.min.js"></script>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts7022'));
        // 指定图表的配置项和数据
        var option = {
    tooltip : {
        trigger: 'axis',
        axisPointer : {            // 坐标轴指示器，坐标轴触发有效
            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
        }
    },
    legend: {
        data:['利润', '支出', '收入']
    },
    grid: {
        left: '3%',
        right: '4%',
        bottom: '3%',
        containLabel: true
    },
    xAxis : [
        {
            type : 'value'
        }
    ],
    yAxis : [
        {
            type : 'category',
            axisTick : {show: false},
            data : ['周一','周二','周三','周四','周五','周六','周日']
        }
    ],
    series : [
        {
            name:'利润',
            type:'bar',
            itemStyle : {
                normal: {
                    label: {show: true, position: 'inside'}
                }
            },
            data:[200, 170, 240, 244, 200, 220, 210]
        },
        {
            name:'收入',
            type:'bar',
            stack: '总量',
            itemStyle: {
                normal: {
                    label : {show: true}
                }
            },
            data:[320, 302, 341, 374, 390, 450, 420]
        },
        {
            name:'支出',
            type:'bar',
            stack: '总量',
            itemStyle: {normal: {
                label : {show: true, position: 'left'}
            }},
            data:[-120, -132, -101, -134, -190, -230, -210]
        }
    ]
};
        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>









<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>利用 Python 批量合并 Excel 文件</title>
    <url>/posts/eebdf3f9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>利用 Python 批量合并 Excel 文件</p>
<a id="more"></a>

<h1 id="一、导入库"><a href="#一、导入库" class="headerlink" title="一、导入库"></a>一、导入库</h1><p>这里会使用 <code>os</code> ，<code>xlrd</code>，<code>pandas</code>，<code>pathlib</code> 四个库。</p>
<p><code>xlrd</code> 是用来读取 xls 文件的，<code>pandas</code> 是用来合并数据和写文件的。</p>
<p><code>pathlib</code> 是用来兼容windows和unix平台（linux or macos）的文件路径的</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> xlrd
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="二、遍历要合并的文件"><a href="#二、遍历要合并的文件" class="headerlink" title="二、遍历要合并的文件"></a>二、遍历要合并的文件</h1><p>给一个目标文件夹，将这里面全部的文件都生成文件路径。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">file_name</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xls'</span> <span class="token operator">or</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xlsx'</span><span class="token punctuation">:</span>
            list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="三、合并输出文件"><a href="#三、合并输出文件" class="headerlink" title="三、合并输出文件"></a>三、合并输出文件</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">merge_xlsx</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>sheet_num<span class="token punctuation">,</span>output_filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true">#定义一个空list</span>
    title <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    path_folder <span class="token operator">=</span> Path<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>filenames<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        read_xlsx <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span>path_folder <span class="token operator">/</span> filenames<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        sheet_num_data <span class="token operator">=</span> read_xlsx<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>sheet_num<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#查看指定sheet_num的数据</span>
        title <span class="token operator">=</span> sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#表头, 0也就是第一行</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>sheet_num_data<span class="token punctuation">.</span>nrows<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#逐行打印,1也就是第二行的内容</span>
            data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
    content<span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">#修改表头</span>
    content<span class="token punctuation">.</span>columns <span class="token operator">=</span> title
    <span class="token comment" spellcheck="true">#写入excel文件</span>
    output_path <span class="token operator">=</span> path_folder <span class="token operator">/</span> <span class="token string">'output'</span>
    output_filename_xlsx <span class="token operator">=</span> output_filename <span class="token operator">+</span> <span class="token string">'.xlsx'</span>
    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"output folder not exist, create it"</span><span class="token punctuation">)</span>
        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span>
    content<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token punctuation">(</span>output_path <span class="token operator">/</span> output_filename_xlsx<span class="token punctuation">)</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"merge success"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="四、写入变量并运行"><a href="#四、写入变量并运行" class="headerlink" title="四、写入变量并运行"></a>四、写入变量并运行</h1><p>完整的代码：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> xlrd
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path

<span class="token keyword">def</span> <span class="token function">get_filename</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xls'</span> <span class="token operator">or</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xlsx'</span><span class="token punctuation">:</span>
            list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> list

<span class="token keyword">def</span> <span class="token function">merge_xlsx</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>sheet_num<span class="token punctuation">,</span>output_filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true">#定义一个空list</span>
    title <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    path_folder <span class="token operator">=</span> Path<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>filenames<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        read_xlsx <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span>path_folder <span class="token operator">/</span> filenames<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        sheet_num_data <span class="token operator">=</span> read_xlsx<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>sheet_num<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#查看指定sheet_num的数据</span>
        title <span class="token operator">=</span> sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#表头</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>sheet_num_data<span class="token punctuation">.</span>nrows<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#逐行打印</span>
            data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
    content<span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">#修改表头</span>
    content<span class="token punctuation">.</span>columns <span class="token operator">=</span> title
    <span class="token comment" spellcheck="true">#写入excel文件</span>
    output_path <span class="token operator">=</span> path_folder <span class="token operator">/</span> <span class="token string">'output'</span>
    output_filename_xlsx <span class="token operator">=</span> output_filename <span class="token operator">+</span> <span class="token string">'.xlsx'</span>
    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"output folder not exist, create it"</span><span class="token punctuation">)</span>
        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span>
    content<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token punctuation">(</span>output_path <span class="token operator">/</span> output_filename_xlsx<span class="token punctuation">)</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"merge success"</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    path <span class="token operator">=</span> r<span class="token string">'/Your/Path'</span> <span class="token comment" spellcheck="true">#这里无论什么平台都按照unix风格来输入文件路径</span>
    filenames <span class="token operator">=</span> get_filename<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    merge_xlsx<span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#合并文件中第一个表的数据，输出到 output/sheet1.xlsx中</span>
    merge_xlsx<span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#合并文件中第二个表的数据，输出到 output/sheet2.xlsx中</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="多个excel的多个sheet进行合并"><a href="#多个excel的多个sheet进行合并" class="headerlink" title="多个excel的多个sheet进行合并"></a>多个excel的多个sheet进行合并</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> xlrd
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd


<span class="token keyword">def</span> <span class="token function">get_filename</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xls'</span> <span class="token operator">or</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xlsx'</span><span class="token punctuation">:</span>
            list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> list

<span class="token comment" spellcheck="true"># 打开一个excel文件</span>
<span class="token keyword">def</span> <span class="token function">open_xls</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">:</span>
    fh <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> fh

<span class="token comment" spellcheck="true"># 获取excel中所有的sheet表</span>
<span class="token keyword">def</span> <span class="token function">getsheet</span><span class="token punctuation">(</span>fh<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> fh<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true"># 获取sheet表的行数</span>
<span class="token keyword">def</span> <span class="token function">getnrows</span><span class="token punctuation">(</span>fh<span class="token punctuation">,</span> sheet<span class="token punctuation">)</span><span class="token punctuation">:</span>
    table <span class="token operator">=</span> fh<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>sheet<span class="token punctuation">]</span>
    <span class="token keyword">return</span> table<span class="token punctuation">.</span>nrows

<span class="token comment" spellcheck="true"># 读取文件内容并返回行内容</span>
<span class="token keyword">def</span> <span class="token function">getFilect</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> shnum<span class="token punctuation">,</span>datavalue<span class="token punctuation">)</span><span class="token punctuation">:</span>
    fh <span class="token operator">=</span> open_xls<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    table <span class="token operator">=</span> fh<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>shnum<span class="token punctuation">]</span>
    num <span class="token operator">=</span> table<span class="token punctuation">.</span>nrows
    title <span class="token operator">=</span> table<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> row <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
        rdata <span class="token operator">=</span> table<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span>row<span class="token punctuation">)</span>
        datavalue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>rdata<span class="token punctuation">)</span>
    <span class="token keyword">return</span> title

<span class="token comment" spellcheck="true"># 获取sheet表的个数</span>
<span class="token keyword">def</span> <span class="token function">getshnum</span><span class="token punctuation">(</span>fh<span class="token punctuation">)</span><span class="token punctuation">:</span>
    x <span class="token operator">=</span> <span class="token number">0</span>
    sh <span class="token operator">=</span> getsheet<span class="token punctuation">(</span>fh<span class="token punctuation">)</span>
    <span class="token keyword">for</span> sheet <span class="token keyword">in</span> sh<span class="token punctuation">:</span>
        x <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">return</span> x

<span class="token keyword">def</span> <span class="token function">merge_xlsx</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true"># 存储所有读取的结果</span>
    datavalue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    title <span class="token operator">=</span> <span class="token string">""</span>
    <span class="token keyword">for</span> fll <span class="token keyword">in</span> filenames<span class="token punctuation">:</span>
        fl <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span>fll<span class="token punctuation">)</span>
        fh <span class="token operator">=</span> open_xls<span class="token punctuation">(</span>fl<span class="token punctuation">)</span>
        x <span class="token operator">=</span> getshnum<span class="token punctuation">(</span>fh<span class="token punctuation">)</span>
        <span class="token keyword">for</span> shnum <span class="token keyword">in</span> range<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"正在读取文件："</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>fl<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"的第"</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>shnum<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"个sheet表的内容..."</span><span class="token punctuation">)</span>
            title <span class="token operator">=</span> getFilect<span class="token punctuation">(</span>fl<span class="token punctuation">,</span> shnum<span class="token punctuation">,</span>datavalue<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># 定义最终合并后生成的新文件</span>
    content <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>datavalue<span class="token punctuation">)</span>
    content<span class="token punctuation">.</span>columns <span class="token operator">=</span> title
    content<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"文件合并完成"</span><span class="token punctuation">)</span>




<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true"># 定义要合并的excel文件列表</span>
    path <span class="token operator">=</span> r<span class="token string">'C:\Users\Hu\Desktop\新建文件夹'</span>
    filenames <span class="token operator">=</span> get_filename<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    save_path <span class="token operator">=</span> <span class="token string">'sss12.xlsx'</span>
    merge_xlsx<span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://wocai.de/post/2020/01/%E5%88%A9%E7%94%A8-python-%E6%89%B9%E9%87%8F%E5%90%88%E5%B9%B6-excel-%E6%96%87%E4%BB%B6/">批量合并 Excel 文件</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Applets</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>Zotero+Word2016参考文献中英文混排，解决et al和等的问题</title>
    <url>/posts/590781cc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>[Zotero+Word]Zotero+Word2016参考文献中英文混排，解决et al和等的问题</p>
<a id="more"></a>

<h1 id="Zotero-参考文献中英文混排"><a href="#Zotero-参考文献中英文混排" class="headerlink" title="Zotero 参考文献中英文混排"></a>Zotero 参考文献中英文混排</h1><p>由于现在的csl不支持多语言，在用chinese-gb7714-1987-numeric或chinese-gb7714-2005-numeric的csl生成的参考文献英文作者超过3个后面也是“等”（正确的应该是et al），如图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930140951.jpg" alt="v2-b48002efe470182914ac230815b339d7_r" style="zoom: 67%;">

<p>下面的方法可以实现将英文作者后面的“等”替换为“et al”，而中文作者后面保持不变。</p>
<ol>
<li><p>在word 2016中依次点击开发工具-宏（如果没有开发工具，也可在视图中找到“宏”），在宏名下面的文本框中随便输入一个名称（如abc），点击“创建”。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141100.jpg" alt="v2-e42a584fa8b1d42ed7f9b60dab90d641_720w" style="zoom:80%;">
</li>
<li><p>将Sub abc到End Sub全部删除，用下面的代码替换，</p>
<pre><code>Sub deng2etal()
'
' deng2etal macro
' English等 -&gt; english, et al
'
    With Selection.Find
        .Forward = True
        .ClearFormatting
        .Text = "(&lt;[A-z]@, )等"
        With .Replacement
            .ClearFormatting
            .Text = "\1et al"
        End With
        .Wrap = wdFindStop
        .Execute Replace:=wdReplaceAll, MatchWildcards:=True
    End With
End Sub</code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141055.png" alt="v2-0e3c9f3e43300d7752daa78a3d6968a7_720w" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141050.jpg" alt="v2-213c002c0fe09b9f454447a54b93a31c_720w" style="zoom:80%;">
</li>
<li><p>然后关闭宏编辑窗口。</p>
</li>
<li><p>依次点击开发工具-宏（如果没有开发工具，也可在视图中找到“宏”），点击deng2etal，再点击“运行”，效果如图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141045.jpg" alt="v2-e2a6772979e68ab6fbe091d8def6e241_720w" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141125.jpg" alt="v2-e8733afc8f057fe91c71784dd8c87287_720w" style="zoom:80%;">



</li>
</ol>
<ol start="5">
<li><p>当然也可以为这个宏分配一个按钮，点击快速访问工具栏最后的向下箭头，选择“其他命令(M)…”，</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141108.jpg" alt="v2-5f7f465487af11498b6f958f1268f9ad_720w" style="zoom:80%;">



</li>
</ol>
<ol start="6">
<li><p>然后在“从下列位置选择命令（C)”处点击 “宏”，找到刚才创建的宏，点击“添加”，再点“确定”返回。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141112.jpg" alt="v2-ab6f9d13f65e272659dca736d1d5980c_720w" style="zoom:80%;">
</li>
<li><p>在此步骤也可以为宏设置其他按钮形状，添加后，选中这个宏，再点“修改”，选择喜欢的按钮形状，然后点“确定”返回即可。此时快速访问工具栏上就会有这个宏的按钮了，用时点击即可。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141117.jpg" alt="v2-ec9140449ffea7868fbd2b719277cafc_720w" style="zoom:80%;">

</li>
</ol>
<h1 id="其它问题"><a href="#其它问题" class="headerlink" title="其它问题"></a>其它问题</h1><ol>
<li>参考文献是用chinese-gb7714-1987-…或chinese-gb7714-2005-…等csl生成的参考文献，也就是英文作者超过3个后面是“等”。</li>
<li>其他参考文献管理软件如Mendeley，EndNote生成的参考文献同样适合。</li>
<li>要在最后定稿后再运行此宏，参考文献更新后需要重新运行。</li>
<li>方法来源于：<a href="https://zhuanlan.zhihu.com/p/53594081">滏阳河边捉蚯蚓：自定义宏批量修改csl生成参考文献书目的错误</a>。</li>
<li>“宏”可以在“视图”或“开发工具”中找到。</li>
<li>如果需要“等”前有逗号，形如：“, 等”，请参见：<a href="https://zhuanlan.zhihu.com/p/60029219">johnmy：Zotero+Word2016参考文献中英文混排，解决et al和等的问题，另一思路</a></li>
<li>2019.4.14修改：由于zotero升级，修改了“等”前面没有逗号的bug</li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li>转:<a href="https://zhuanlan.zhihu.com/p/58237038" target="_blank">[Zotero+Word]Zotero+Word2016参考文献中英文混排，解决et al和等的问题</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/53594081" target="_blank">自定义宏批量修改csl生成参考文献书目的错误</a> </li>
<li><a href="https://zhuanlan.zhihu.com/p/31326415" target="_blank">四步实现自定义 Zotero 参考文献格式</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Zotreo</tag>
      </tags>
  </entry>
  <entry>
    <title>集成学习三大法宝-bagging、boosting、stacking</title>
    <url>/posts/ba9591fe/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a>

<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>『Graphics』QQ图(分位数图)&#39;</title>
    <url>/posts/36d720f0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>分位数图示法（Quantile Quantile Plot，简称 Q-Q 图）</p>
<a id="more"></a>

<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h1><p>分位数图示法（Quantile Quantile Plot，简称 Q-Q 图）</p>
<p> 统计学里Q-Q图（Q代表分位数）是一个概率图，用图形的方式<strong>比较两个概率分布</strong>，把他们的两个分位数放在一起比较。首先选好分位数间隔。图上的点（x,y）反映出其中一个第二个分布（y坐标）的分位数和与之对应的第一分布（x坐标）的相同分位数。因此，这条线是一条以分位数间隔为参数的曲线。如果两个分布相似，则该Q-Q图趋近于落在y=x线上。如果两分布线性相关，则点在Q-Q图上趋近于落在一条直线上，但不一定在y=x线上。Q-Q图可以用来可在分布的位置-尺度范畴上可视化的评估参数。</p>
<p>从定义中可以看出Q-Q图主要用于<strong>检验数据分布的相似性</strong>，如果要利用Q-Q图来对数据进行正态分布的检验，则可以令x轴为正态分布的分位数，y轴为样本分位数，如果这两者构成的点分布在一条直线上，就证明样本数据与正态分布存在线性相关性，即服从正态分布。</p>
<p>(自己的理解：qq图就是理论值和实际值的关系图，x=理论值，y=实际值。)</p>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>检验一序列值是否服从正态分布，序列为：$X=(x_1, x_2, , x_i , x_N),(N&gt;0)$</p>
<p>1、将原序列按升序从新排列</p>
<p>$$x_1 \leq x_2 ,\leq ,\leq x_i,\leq , \leq x_N$$</p>
<p>2、计算QQ序列</p>
<p>样本均值：$\bar{x}=\frac{\sum_{i=1}^{N} x i}{N}$</p>
<p>样本标准差：$\sigma=\sqrt{\frac{\sum(x_i-\bar{x})^{2}}{N-1}}$</p>
<p>分位数 :$Q_{i}=\frac{x_i-\bar{x}}{\sigma}, \quad t_{i}=\frac{i-0.5}{N}$ ,  通过查正太分布表可以得到 $t_i$ 对应的分位数 $P_{i}^{\prime}$</p>
<p>计算如下表所示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212405.png" alt="image-20200922202518466" style="zoom: 50%;">

<p>3、画出 QQ 图 ，分布呈直线，就是正态分布，如果这条线是y=x，则是标准正态分布。</p>
<h1 id="gofplots-ProbPlot"><a href="#gofplots-ProbPlot" class="headerlink" title="gofplots.ProbPlot"></a>gofplots.ProbPlot</h1><p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">statsmodels</span><span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>data<span class="token punctuation">,</span> 
                                             dist<span class="token operator">=</span><span class="token operator">&lt;</span>scipy<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>_continuous_distns<span class="token punctuation">.</span>norm_gen object<span class="token operator">></span><span class="token punctuation">,</span> 
                                             fit<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> 
                                             distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>Q-Q and P-P Probability Plots</p>
<p>可以接受指定dist参数的参数，也可以自动将其拟合。</p>
<p>参数：</p>
<ul>
<li><code>data</code> : <a href="https://numpy.org/doc/stable/glossary.html#term-array-like">array_like</a>  A 1d data array</li>
<li><code>dist</code> : callable, Compare x against dist. A scipy.stats or statsmodels distribution. The default is scipy.stats.distributions.norm (a standard normal). Can be a SciPy frozen distribution.</li>
<li><code>fit</code> : bool,  If fit is false, loc, scale, and distargs are passed to the distribution. If fit is True then the parameters for dist are fit automatically using dist.fit. The quantiles are formed from the standardized data, after subtracting the fitted loc and dividing by the fitted scale. fit cannot be used if dist is a SciPy frozen distribution.</li>
<li><code>distargs</code> : tuple,  A tuple of arguments passed to dist to specify it fully so dist.ppf may be called. distargs must not contain loc or scale. These values must be passed using the loc or scale inputs. distargs cannot be used if dist is a SciPy frozen distribution.</li>
<li><code>a</code> : float ,  Offset for the plotting position of an expected order statistic, for example. The plotting positions are given by (i - a)/(nobs - 2*a + 1) for i in range(0,nobs+1)</li>
<li><code>loc</code> : float, Location parameter for dist. Cannot be used if dist is a SciPy frozen distribution.</li>
<li><code>scale</code> : Scale parameter for dist. Cannot be used if dist is a SciPy frozen distribution.</li>
</ul>
<h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><table>
<thead>
<tr>
<th><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.ppplot.html#statsmodels.graphics.gofplots.ProbPlot.ppplot"><code>ppplot</code></a>([xlabel, ylabel, line, other, ax])</th>
<th>Plot of the percentiles of x versus the percentiles of a distribution.</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.probplot.html#statsmodels.graphics.gofplots.ProbPlot.probplot"><code>probplot</code></a>([xlabel, ylabel, line, exceed, ax])</td>
<td>Plot of unscaled quantiles of x against the prob of a distribution.</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.qqplot.html#statsmodels.graphics.gofplots.ProbPlot.qqplot"><code>qqplot</code></a>([xlabel, ylabel, line, other, ax])</td>
<td>Plot of the quantiles of x versus the quantiles/ppf of a distribution.</td>
</tr>
</tbody></table>
<blockquote>
<p>The three plotting methods are summarized below:</p>
<ul>
<li><p>ppplotProbability-Probability plot</p>
<p>Compares the sample and theoretical probabilities (percentiles).</p>
</li>
<li><p>qqplotQuantile-Quantile plot</p>
<p>Compares the sample and theoretical quantiles</p>
</li>
<li><p>probplotProbability plot</p>
<p>Same as a Q-Q plot, however probabilities are shown in the scale of the theoretical distribution (x-axis) and the y-axis contains unscaled quantiles of the sample data.</p>
</li>
</ul>
</blockquote>
<h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><table>
<thead>
<tr>
<th><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.sample_percentiles.html#statsmodels.graphics.gofplots.ProbPlot.sample_percentiles"><code>sample_percentiles</code></a></th>
<th>Sample percentiles(样本百分位数)</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.sample_quantiles.html#statsmodels.graphics.gofplots.ProbPlot.sample_quantiles"><code>sample_quantiles</code></a></td>
<td>sample quantiles(样本分位数)</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.sorted_data.html#statsmodels.graphics.gofplots.ProbPlot.sorted_data"><code>sorted_data</code></a></td>
<td>sorted data</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.theoretical_percentiles.html#statsmodels.graphics.gofplots.ProbPlot.theoretical_percentiles"><code>theoretical_percentiles</code></a></td>
<td>Theoretical percentiles (理论百分位数)</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.theoretical_quantiles.html#statsmodels.graphics.gofplots.ProbPlot.theoretical_quantiles"><code>theoretical_quantiles</code></a></td>
<td>Theoretical quantiles(理论分位数)</td>
</tr>
</tbody></table>
<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>The first example shows a Q-Q plot for regression residuals</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

data <span class="token operator">=</span> sm<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>longley<span class="token punctuation">.</span>load<span class="token punctuation">(</span>as_pandas<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
data<span class="token punctuation">.</span>exog <span class="token operator">=</span> sm<span class="token punctuation">.</span>add_constant<span class="token punctuation">(</span>data<span class="token punctuation">.</span>exog<span class="token punctuation">)</span>
model <span class="token operator">=</span> sm<span class="token punctuation">.</span>OLS<span class="token punctuation">(</span>data<span class="token punctuation">.</span>endog<span class="token punctuation">,</span> data<span class="token punctuation">.</span>exog<span class="token punctuation">)</span>
mod_fit <span class="token operator">=</span> model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span><span class="token punctuation">)</span>
res <span class="token operator">=</span> mod_fit<span class="token punctuation">.</span>resid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre><code># res

array([ 267.34002979,  -94.01394237,   46.28716779, -410.1146219 ,
        309.71459079, -249.3112153 , -164.04895636,  -13.18035684,
         14.30477263,  455.39409458,  -17.26892708,  -39.05504249,
       -155.54997356,  -85.67130801,  341.93151399, -206.75782516])</code></pre>
<pre class="line-numbers language-python"><code class="language-python">pplot<span class="token punctuation">.</span>theoretical_quantiles

<span class="token triple-quoted-string string">'''
array([-1.56472647, -1.18683143, -0.92889949, -0.72152228, -0.54139509,
       -0.37739194, -0.22300783, -0.07379127,  0.07379127,  0.22300783,
        0.37739194,  0.54139509,  0.72152228,  0.92889949,  1.18683143,
        1.56472647])
'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python">pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">)</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 1 - qqplot - residuals of OLS fit"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/img/20200923190101.png" alt="下载 (7)" style="zoom:80%;">

<p>qqplot of the residuals against quantiles of t-distribution with 4 degrees of freedom:</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">as</span> stats

pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">'''
pplot.theoretical_quantiles
array([-1.98853847, -1.39569844, -1.05006478, -0.79602407, -0.58782183,
       -0.40547071, -0.23806378, -0.07853211,  0.07853211,  0.23806378,
        0.40547071,  0.58782183,  0.79602407,  1.05006478,  1.39569844,
        1.98853847])
'''</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 2 - qqplot - residuals against quantiles of t-dist"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212417.png" alt="下载 (8)" style="zoom:80%;">

<p>qqplot against same as above, but with mean 3 and std 10:</p>
<pre class="line-numbers language-python"><code class="language-python">pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">'''
pplot.theoretical_quantiles
array([-16.88538475, -10.95698438,  -7.50064777,  -4.96024066,
        -2.87821833,  -1.05470709,   0.61936217,   2.21467888,
         3.78532112,   5.38063783,   7.05470709,   8.87821833,
        10.96024066,  13.50064777,  16.95698438,  22.88538475])
'''</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span><span class="token punctuation">)</span>
h <span class="token operator">=</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 3 - qqplot - resids vs quantiles of t-dist"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212423.png" alt="下载 (9)" style="zoom:80%;">

<p>Automatically determine parameters for t distribution including the loc and scale:</p>
<pre class="line-numbers language-python"><code class="language-python">pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">)</span>
h <span class="token operator">=</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 4 - qqplot - resids vs. quantiles of fitted t-dist"</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">'''
pplot.sample_quantiles
array([-1.79364223, -1.09036424, -0.90425585, -0.71746747, -0.68029695,
       -0.41116747, -0.37468074, -0.17080326, -0.0755211 , -0.05763963,
        0.06256732,  0.20244318,  1.16922377,  1.35455004,  1.49545161,
        1.99168324])

pplot.theoretical_quantiles
array([-1.56472676, -1.18683159, -0.92889958, -0.72152234, -0.54139512,
       -0.37739197, -0.22300784, -0.07379128,  0.07379128,  0.22300784,
        0.37739197,  0.54139512,  0.72152234,  0.92889958,  1.18683159,
        1.56472676])
'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212429.png" alt="下载 (10)" style="zoom:80%;">

<p>A second ProbPlot object can be used to compare two separate sample sets by using the other kwarg in the qqplot and ppplot methods.</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.25</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.75</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.75</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.25</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>

pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">'''
用的都是样本的分位数
pp_x.sample_quantiles.min()
-2.254490936888067
pp_y.sample_quantiles.min()
-1.89620626452838
'''</span>

fig <span class="token operator">=</span> pp_x<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">'45'</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 5 - qqplot - compare two sample sets"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>In qqplot, sample size of other can be equal or larger than the first. In case of larger, size of other samples will be reduced to match the size of the first by interpolation</p>
<pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.25</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.75</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.75</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.25</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">57</span><span class="token punctuation">)</span>
pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
fig <span class="token operator">=</span> pp_x<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_y<span class="token punctuation">)</span>
title <span class="token operator">=</span> <span class="token string">"Ex. 6 - qqplot - compare different sample sizes"</span>
h <span class="token operator">=</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>title<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212444.png" alt="下载 (12)" style="zoom:80%;">



<p>在ppplot中，其他样本和第一个样本的大小可以不同。 其他将用于估计经验累积分布函数（ECDF）。ECDF(x) will be plotted against p(x)=0.5/n, 1.5/n, …, (n-0.5)/n where x are sorted samples from the first.</p>
<pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.25</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.75</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.75</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.25</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">57</span><span class="token punctuation">)</span>
pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y<span class="token punctuation">.</span>ppplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_x<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 7A- ppplot - compare two sample sets, other=pp_x"</span><span class="token punctuation">)</span>
pp_x<span class="token punctuation">.</span>ppplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 7B- ppplot - compare two sample sets, other=pp_y"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212452.png" alt="下载 (13)" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212457.png" alt="下载 (14)" style="zoom:80%;">





<h1 id="gofplots-qqline"><a href="#gofplots-qqline" class="headerlink" title="gofplots.qqline"></a>gofplots.qqline</h1><p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python">statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>qqline<span class="token punctuation">(</span>ax<span class="token punctuation">,</span> line<span class="token punctuation">,</span> 
                                     x<span class="token operator">=</span>None<span class="token punctuation">,</span> y<span class="token operator">=</span>None<span class="token punctuation">,</span> 
                                     dist<span class="token operator">=</span>None<span class="token punctuation">,</span> fmt<span class="token operator">=</span><span class="token string">'r-'</span><span class="token punctuation">,</span> <span class="token operator">**</span>lineoptions<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>为qqplot绘制参考线。</p>
<p>参数： </p>
<ul>
<li><p><code>ax</code> : matplotlib轴实例, The axes on which to plot the line</p>
</li>
<li><p><code>line</code> : <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a> {“45”,”r”,”s”,”q”} , 与数据进行比较的参考线的选项。</p>
<ul>
<li>“45” - 45-degree line</li>
<li>“s”- standardized line, the expected order statistics are scaled by the standard deviation of the given sample and have the mean added to them</li>
<li>“r” - A regression line is fit</li>
<li>“q” - A line is fit through the quartiles.</li>
<li>None - By default no reference line is added to the plot.</li>
</ul>
</li>
<li><p><code>X </code> : <a href="https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray"><code>ndarray</code></a> </p>
<p>X data for plot. Not needed if line is “45”.</p>
</li>
<li><p><code>y</code><a href="https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray"><code>ndarray</code></a> </p>
<p>Y data for plot. Not needed if line is “45”.</p>
</li>
<li><p><code>dist</code> : <strong>scipy.stats.distribution</strong></p>
<p>A scipy.stats distribution, needed if line is “q”.</p>
</li>
<li><p><code>fmt</code> : <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a>, <code>optional</code> </p>
<p>Line format string passed to plot.</p>
</li>
</ul>
<ul>
<li><p><strong><em>\</em>lineoptions</strong></p>
<p>Additional arguments to be passed to the plot command.</p>
</li>
</ul>
<blockquote>
<p>There is no return value. The line is plotted on the given ax.</p>
</blockquote>
<h2 id="Examples-1"><a href="#Examples-1" class="headerlink" title="Examples"></a>Examples</h2><p>导入食品支出数据集。 在x轴上绘制年度食品支出，在y轴上绘制家庭收入。 使用qqline将回归线添加到绘图中。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqline

foodexp <span class="token operator">=</span> sm<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>engel<span class="token punctuation">.</span>load<span class="token punctuation">(</span>as_pandas<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
x <span class="token operator">=</span> foodexp<span class="token punctuation">.</span>exog
y <span class="token operator">=</span> foodexp<span class="token punctuation">.</span>endog

<span class="token comment" spellcheck="true">#x.shape  #(235, 1)</span>
<span class="token comment" spellcheck="true"># y.shape #(235,)</span>

ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span>foodexp<span class="token punctuation">.</span>exog_name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span>foodexp<span class="token punctuation">.</span>endog_name<span class="token punctuation">)</span>
qqline<span class="token punctuation">(</span>ax<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212534.png" alt="下载" style="zoom:80%;">

<h1 id="gofplots-qqplot"><a href="#gofplots-qqplot" class="headerlink" title="gofplots.qqplot"></a>gofplots.qqplot</h1><p>与 <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.probplot.html#scipy.stats.probplot"><code>scipy.stats.probplot</code></a> 类似。</p>
<p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python">statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>data<span class="token punctuation">,</span> 
                                     dist<span class="token operator">=</span><span class="token operator">&lt;</span>scipy<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>_continuous_distns<span class="token punctuation">.</span>norm_gen object<span class="token operator">></span><span class="token punctuation">,</span> 
                                     distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                                     a<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> 
                                     fit<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> line<span class="token operator">=</span>None<span class="token punctuation">,</span> 
                                     ax<span class="token operator">=</span>None<span class="token punctuation">,</span> <span class="token operator">**</span>plotkwargs<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Q-Q plot of the quantiles of x versus the quantiles/ppf of a distribution.</p>
<p>可以接受指定dist参数，也可以自动将其拟合。</p>
<p>参数：</p>
<ul>
<li><p><code>data</code> : A 1d data array.</p>
</li>
<li><p><code>dist</code> : <a href="https://docs.python.org/3/library/functions.html#callable"><code>callable</code></a> , Comparison distribution. The default is scipy.stats.distributions.norm (a standard normal).</p>
</li>
<li><p><code>distargs</code> :  元组，传递给 <code>dist</code> 分布的参数，让它能够调用 <code>ppf</code> 函数。</p>
</li>
<li><p><code>a</code> : float , Offset for the plotting position of an expected order statistic, for example. The plotting positions are given by (i - a)/(nobs - 2*a + 1) for i in range(0,nobs+1)</p>
</li>
<li><p><code>loc</code> : float , Location parameter for dist</p>
</li>
<li><p><code>scale</code> : float , Scale parameter for dist</p>
</li>
<li><p><code>fit</code> : bool, 如果fit为false，则将loc，scale和distargs传递到分布。 如果fit为True，则使用dist.fit自动拟合dist的参数。The quantiles are formed from the standardized data, after subtracting the fitted loc and dividing by the fitted scale.</p>
</li>
<li><p><code>line</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, “45”, “s”, “r”, “q”},  </p>
<p>Options for the reference line to which the data is compared:</p>
<ul>
<li>“45” - 45-degree line</li>
<li>“s” - standardized line, the expected order statistics are scaled by the standard deviation of the given sample and have the mean added to them</li>
<li>“r” - A regression line is fit</li>
<li>“q” - A line is fit through the quartiles.</li>
<li>None - by default no reference line is added to the plot.</li>
</ul>
</li>
<li><p><code>ax</code> : <a href="https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes"><code>AxesSubplot</code></a>, <code>optional</code> </p>
<p>If given, this subplot is used to plot in instead of a new figure being created.</p>
</li>
<li><p><strong><em>\</em>plotkwargs</strong></p>
<p>Additional matplotlib arguments to be passed to the plot command.</p>
</li>
</ul>
<p>返回值：</p>
<p><a href="https://matplotlib.org/api/_as_gen/matplotlib.figure.Figure.html#matplotlib.figure.Figure"><code>Figure</code></a></p>
<p>If ax is None, the created figure. Otherwise the figure to which ax is connected.</p>
<h2 id="Examples-2"><a href="#Examples-2" class="headerlink" title="Examples"></a>Examples</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt 
<span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqplot

data <span class="token operator">=</span> sm<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>longley<span class="token punctuation">.</span>load<span class="token punctuation">(</span>as_pandas<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

exog <span class="token operator">=</span> sm<span class="token punctuation">.</span>add_constant<span class="token punctuation">(</span>data<span class="token punctuation">.</span>exog<span class="token punctuation">)</span>
mod_fit <span class="token operator">=</span> sm<span class="token punctuation">.</span>OLS<span class="token punctuation">(</span>data<span class="token punctuation">.</span>endog<span class="token punctuation">,</span>exog<span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span><span class="token punctuation">)</span>
res <span class="token operator">=</span> mod_fit<span class="token punctuation">.</span>resid <span class="token comment" spellcheck="true"># residuals</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#res</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">267.34002979</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">94.01394237</span><span class="token punctuation">,</span>   <span class="token number">46.28716779</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">410.1146219</span> <span class="token punctuation">,</span>
        <span class="token number">309.71459079</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">249.3112153</span> <span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">164.04895636</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">13.18035684</span><span class="token punctuation">,</span>
         <span class="token number">14.30477263</span><span class="token punctuation">,</span>  <span class="token number">455.39409458</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">17.26892708</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">39.05504249</span><span class="token punctuation">,</span>
       <span class="token operator">-</span><span class="token number">155.54997356</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">85.67130801</span><span class="token punctuation">,</span>  <span class="token number">341.93151399</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">206.75782516</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python">fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212544.png" alt="下载 (1)" style="zoom:80%;">

<p>qqplot of the residuals against quantiles of t-distribution with 4 degrees of freedom:</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">as</span> stats
fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923213122.png" alt="下载 (2)" style="zoom:80%;">

<p>qqplot against same as above, but with mean 3 and std 10:</p>
<pre class="line-numbers language-python"><code class="language-python">fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923213116.png" alt="下载 (3)" style="zoom:80%;">



<p>Automatically determine parameters for t distribution including the loc and scale:</p>
<pre class="line-numbers language-python"><code class="language-python">fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212650.png" alt="下载 (4)" style="zoom:80%;">

<p>得到残差之后，也可以直接用 <code>qqplot</code> 进行绘制：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqplot

fig <span class="token operator">=</span> qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>line<span class="token operator">=</span><span class="token string">'45'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212641.png" alt="下载 (5)" style="zoom:80%;">







<h1 id="gofplots-qqplot-2samples"><a href="#gofplots-qqplot-2samples" class="headerlink" title="gofplots.qqplot_2samples"></a>gofplots.qqplot_2samples</h1><p>Q-Q Plot of two samples’ quantiles</p>
<p>Can take either two ProbPlot instances or two array-like objects, In the case of the latter, both inputs will be converted to ProbPlot instances using only the default values - so use ProbPlot instances if finer-grained control of the quantile</p>
<p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python">statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>qqplot_2samples<span class="token punctuation">(</span>data1<span class="token punctuation">,</span> data2<span class="token punctuation">,</span> 
                                              xlabel<span class="token operator">=</span>None<span class="token punctuation">,</span> ylabel<span class="token operator">=</span>None<span class="token punctuation">,</span> 
                                              line<span class="token operator">=</span>None<span class="token punctuation">,</span> ax<span class="token operator">=</span>None<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>参数：</p>
<ul>
<li><p><code>data1</code> : {<a href="https://numpy.org/doc/stable/glossary.html#term-array-like">array_like</a>, <a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.html#statsmodels.graphics.gofplots.ProbPlot"><code>ProbPlot</code></a>}   Data to plot along x axis.</p>
</li>
<li><p><code>data2</code> : {<a href="https://numpy.org/doc/stable/glossary.html#term-array-like">array_like</a>, <a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.html#statsmodels.graphics.gofplots.ProbPlot"><code>ProbPlot</code></a>}  Data to plot along y axis. Does not need to have the same number of observations as data 1.</p>
</li>
<li><p><code>xlabel</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a>} User-provided labels for the x-axis. If None (default), other values are used.</p>
</li>
<li><p><code>y</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a>} User-provided labels for the y-axis. If None (default), other values are used.</p>
</li>
<li><p><code>line</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, “45”, “s”, “r”, q”}</p>
<p>Options for the reference line to which the data is compared:</p>
<ul>
<li>“45” - 45-degree line</li>
<li>“s” - standardized line, the expected order statistics are scaled by the standard deviation of the given sample and have the mean added to them</li>
<li>“r” - A regression line is fit</li>
<li>“q” - A line is fit through the quartiles.</li>
<li>None - by default no reference line is added to the plot.</li>
</ul>
</li>
<li><p><code>ax</code> : <a href="https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes"><code>AxesSubplot</code></a>, <code>optional</code></p>
<p>If given, this subplot is used to plot in instead of a new figure being created.</p>
</li>
</ul>
<p>返回值：</p>
<ul>
<li><code>figure</code> : If ax is None, the created figure. Otherwise the figure to which ax is connected.</li>
</ul>
<blockquote>
<ol>
<li>Depends on matplotlib.</li>
<li>If data1 and data2 are not ProbPlot instances, instances will be created using the default parameters. Therefore, it is recommended to use ProbPlot instance if fine-grained control is needed in the computation of the quantiles.</li>
</ol>
</blockquote>
<h2 id="Examples-3"><a href="#Examples-3" class="headerlink" title="Examples"></a>Examples</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqplot_2samples

x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.5</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.0</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.0</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>

pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">)</span>
qqplot_2samples<span class="token punctuation">(</span>pp_x<span class="token punctuation">,</span> pp_y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923213106.png" alt="下载 (6)" style="zoom:80%;">



<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212928.png" alt="下载 (13)" style="zoom:80%;"><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>QQ图</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇博客</title>
    <url>/posts/ff05b5bf/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>记录第一篇博客</p>
<a id="more"></a>

<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200912224352.jpg" alt="wallhaven-wy751x" style="zoom:80%;"><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
</search>
