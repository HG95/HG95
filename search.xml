<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>『OriginPro』 多元拟合分析</title>
    <url>/posts/5f339216/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>多元回归分析</p>
<a id="more"></a>

<p>加载excel数据，将excel拖入origin，选择第一行将其转为长名称：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215552.png" alt="image-20210103214203462" style="zoom:80%;">

<h1 id="多元回归分析——带截距"><a href="#多元回归分析——带截距" class="headerlink" title="多元回归分析——带截距"></a>多元回归分析——带截距</h1><p>上方菜单栏：<code>Analysis</code>-&gt;<code>Fitting</code>-&gt;<code>Multiple Linear Regression</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215559.png" alt="image-20210103214535901" style="zoom:80%;">

<p>数据选择：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215604.png" alt="image-20210103214738950" style="zoom: 80%;">

<p>其它参数默认即可，点击🆗，得到拟合的结果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215609.png" alt="image-20210103214904529" style="zoom: 67%;">

<h1 id="多元回归分析——自定义截距"><a href="#多元回归分析——自定义截距" class="headerlink" title="多元回归分析——自定义截距"></a>多元回归分析——自定义截距</h1><p>打开多元回归分析的对话框，数据选择后，切换到<code>Fit Control</code>,如图所示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215619.png" alt="image-20210103215212812" style="zoom:80%;">

<p>点击🆗，和上面的结果相比可以看到截距为0：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215628.png" alt="image-20210103215424336" style="zoom:67%;">

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.bilibili.com/video/BV1jK411g7gq">回归拟合分析</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
        <tag>多元拟合分析</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』  柱状图</title>
    <url>/posts/c093d808/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><img src="https://raw.githubusercontent.com/HG95/image/master/20210101120601.png" alt="主要内容" style="zoom:150%;">





<a id="more"></a>

<h1 id="一、单一柱状图"><a href="#一、单一柱状图" class="headerlink" title="一、单一柱状图"></a>一、单一柱状图</h1><ul>
<li><p>数据整理<br>将柱状图的状态名称作为x轴（A列），各个状态的指标（COD）作为Y轴（B列）</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120115.png" alt="image-20201212225711708" style="zoom:67%;">
</li>
<li><p>选中A、B两列，【Plot】-【column/bar/pie】-【coloumn】</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120119.png" alt="image-20201212225815713" style="zoom: 67%;">
</li>
<li><p>生成图像如下：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120124.png" alt="image-20201212225952205" style="zoom: 33%;">
</li>
<li><p>如果希望各色柱颜色变化，双击色柱图，将border、fill的颜色分别设为【color】-【increment】-【starting color】</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120128.png" alt="image-20201212230525831" style="zoom: 67%;">

<p>也可以根据提示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120133.png" alt="image-20201212230428175" style="zoom: 50%;">

</li>
</ul>
<h1 id="二、柱状组图"><a href="#二、柱状组图" class="headerlink" title="二、柱状组图"></a>二、柱状组图</h1><p>如果每个状态下都有多个指标需要比较，那么宜采用柱状组图。</p>
<ul>
<li><p>多个指标（COD、TOC）的数据组织形式如下，两种指标分别作为B、C列</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120138.png" alt="image-20201212231044048" style="zoom: 67%;">
</li>
<li><p>绘图操作同上，选中A、B、C列，【Plot】-【column/bar/pie】-【coloumn】</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120142.png" alt="image-20201212225815713" style="zoom:50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120148.png" alt="image-20201212231240130" style="zoom: 33%;">
</li>
<li><p>添加数据标签</p>
<p>绘图时，如果选用【column+label】可以显示数据标签：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120153.png" alt="image-20201212231346010" style="zoom:50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120158.png" alt="image-20201212231441398" style="zoom: 33%;">

</li>
</ul>
<h1 id="三、分组柱状图"><a href="#三、分组柱状图" class="headerlink" title="三、分组柱状图"></a>三、分组柱状图</h1><ul>
<li><p>数据格式</p>
<p>采用<code>XX YyEr YyEr</code>类型的数据格式</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120203.png" alt="image-20201215164925349" style="zoom:50%;">

<p>第一个<code>X</code>为分组信息，第二各<code>X</code>为点信息，后面的分别为柱形图和散点图及对应误差棒的数据。</p>
<p>选中<code>yEr</code>数据，右击，<code>Set as-&gt;Y Error</code>。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120209.png" alt="image-20201215165001229" style="zoom:50%;">



</li>
</ul>
<p>绘制图形</p>
<ul>
<li><p>选中后面的<code>YyEr YyEr</code>数据，右键选择<code>Grouped Columns - Indexed Data</code>模板</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120214.png" alt="image-20201215165125888" style="zoom: 67%;">
</li>
<li><p>在弹出的对话框中选择<strong>分组信息</strong>，此处选中A和B列</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120219.png" alt="image-20201215165215768" style="zoom:67%;">

<p>点击<code>OK</code>，完成基本图形的绘制。</p>
</li>
</ul>
<p>格式设置</p>
<ul>
<li><p>在右侧<code>Object Manager</code>里选中<code>g1</code>，右击，选择<code>Ungroup</code>，取消组合。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120224.png" alt="image-20201215165314779" style="zoom:67%;">
</li>
<li><p>在<code>Object Manager</code>中双击<code>Scatter</code>，打开<code>Plot Properties</code>页面进行格式设置。选中<strong>散点图</strong>所对应的数据，将<code>Plot Type</code>改为<code>Scatter</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120229.png" alt="image-20201215165457368" style="zoom: 50%;">
</li>
<li><p>点击<code>Apply</code>后，图形的基本形状就有了，后续进行颜色等设置。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120233.png" alt="image-20201215165622052" style="zoom: 50%;">
</li>
<li><p>接下来对横坐标的格式进行设置。双击坐标轴打开<code>Axis Properties</code>页面，设置<code>Table</code>的格式。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120238.png" alt="image-20201215165714951" style="zoom: 50%;">

<p>最后效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120244.png" alt="image-20201215165813688" style="zoom: 50%;">

</li>
</ul>
<h1 id="四、分组双Y轴柱状图（一）"><a href="#四、分组双Y轴柱状图（一）" class="headerlink" title="四、分组双Y轴柱状图（一）"></a>四、分组双Y轴柱状图（一）</h1><ul>
<li><p>之所以选用<strong>双Y轴</strong>图形，是因为右侧的<code>Group3</code>的数值较小，如果只用一个Y轴，则不能很好的显示该组数据。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120249.png" alt="image-20210101110442994" style="zoom:50%;">
</li>
<li><p>数据格式：</p>
<p>将<code>GroupA</code>和<code>GroupB</code>的数据放置在一列，<code>GroupC</code>的数据单独放置。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120253.png" alt="image-20210101110538181" style="zoom:50%;">

<p>注意<code>GroupC</code>的数据的量纲变化。</p>
</li>
<li><p>图形绘制</p>
</li>
<li><p>选中<code>J-M</code>列数据，绘制<a href="https://mp.weixin.qq.com/s?__biz=MzIzMjA1MjAyOA==&amp;mid=2651734006&amp;idx=1&amp;sn=ec45a1e7dd990ff47ff67ef2a384b7b9&amp;chksm=f3605ba5c417d2b3ec27f1555d8b71ed64758796b8a40cd20f2ab1f9a03e86d438653132a84b&amp;token=108488943&amp;lang=zh_CN&amp;scene=21#wechat_redirect">分组柱形图叠加分组散点图</a></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120259.png" alt="image-20210101110726495" style="zoom:33%;">



</li>
</ul>
<ul>
<li><p>选中<code>P-S</code>列数据，同样方法绘制<a href="https://mp.weixin.qq.com/s?__biz=MzIzMjA1MjAyOA==&amp;mid=2651734006&amp;idx=1&amp;sn=ec45a1e7dd990ff47ff67ef2a384b7b9&amp;chksm=f3605ba5c417d2b3ec27f1555d8b71ed64758796b8a40cd20f2ab1f9a03e86d438653132a84b&amp;token=108488943&amp;lang=zh_CN&amp;scene=21#wechat_redirect">分组柱形图叠加分组散点图</a></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120303.png" alt="image-20210101110759473" style="zoom: 33%;">
</li>
<li><p>点击右侧工具栏上的<code>Merge</code>按钮，打开合并图形对话框</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120308.png" alt="image-20210101110853804" style="zoom:50%;">

<p>选中上面绘制的两个图形，<code>在Arrange Setings</code>里设为<strong>1行2列</strong>，点击<code>OK</code>完成图形的合并</p>
</li>
</ul>
<p>格式设置</p>
<ul>
<li><p>将右侧图形的坐标轴标签改到右侧显示</p>
</li>
<li><p>双击图形打开<code>Layer Properties</code>对话框，激活<code>Layer2</code>，切换到<code>Link Axes Scales</code>页面，将<code>Link to</code>选为<code>Layer1</code>，即与图层1关联</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120313.png" alt="image-20210101111151394" style="zoom:50%;">
</li>
<li><p>切换到<code>Size</code>页面，将<code>Units</code>选为<code>% of Linked Layer</code>，<code>Left</code>设为<strong>100</strong>，<code>Width</code>设为<strong>50</strong>，即宽度为左侧图形的一半</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120318.png" alt="image-20210101111224527" style="zoom:67%;">
</li>
<li><p>调整图层的尺寸，使之大小合适：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120323.png" alt="image-20210101111347942" style="zoom:67%;">



</li>
</ul>
<h1 id="五、双Y轴堆积状图（二）"><a href="#五、双Y轴堆积状图（二）" class="headerlink" title="五、双Y轴堆积状图（二）"></a>五、双Y轴堆积状图（二）</h1><ul>
<li><p>数据：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120328.png" alt="image-20201215213457464" style="zoom:50%;">

<p>B、C 列数据大小相似，D列明显小了很多，此时可以选择双Y轴</p>
</li>
<li><p>选中B和D列数据，选取绘图模板：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120333.png" alt="image-20201215215246709" style="zoom:80%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120339.png" alt="image-20201215215407861" style="zoom: 50%;">
</li>
<li><p>将C列添加到第一图层里面：双击左上角的<code>1</code> ,将其添加到图层<code>1</code>，显示为柱状图:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120343.png" alt="image-20201215215546097" style="zoom:67%;">
</li>
<li><p>将右侧两个数据成组：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120349.png" alt="image-20201215215722233" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120353.png" alt="image-20201215215815714" style="zoom: 50%;">
</li>
<li><p>颜色调整：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120359.png" alt="image-20201215220000535" style="zoom:67%;">

<p>最终效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120403.png" alt="image-20201215220107139" style="zoom: 50%;">

<p>此时双Y轴的图已经绘制好，下面将其改编为堆积柱状图</p>
</li>
<li><p>上面的图绘制好后复制一份：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120408.png" alt="image-20201215220230685" style="zoom: 80%;">
</li>
<li><p>打开绘图细节对话框，选择图层1：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120411.png" alt="image-20201215220420463" style="zoom: 67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120416.png" alt="image-20201215220455972" style="zoom: 50%;">
</li>
<li><p>部分柱体显示不完全，选取右侧的重新设置Y轴范围按钮：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120422.png" alt="image-20201215220641184" style="zoom:67%;">

<p>就可以显示全部的柱体了，最后的效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120426.png" alt="image-20201215220728678" style="zoom: 50%;">

</li>
</ul>
<h1 id="六、堆积柱状图"><a href="#六、堆积柱状图" class="headerlink" title="六、堆积柱状图"></a>六、堆积柱状图</h1><h2 id="百分比堆积柱状图"><a href="#百分比堆积柱状图" class="headerlink" title="百分比堆积柱状图"></a>百分比堆积柱状图</h2><p>百分比堆积柱状图是一个很好的展现各个指标或者物种之间比例的图谱</p>
<ul>
<li><p>数据</p>
<p>一组数据，分别是左侧的四个组别(正常对照组，模型组，阳性药组，实验组)，每个组别分别测量5个指标(Factor 1，Factor 2， Factor 3， Factor 4， Factor 5)。我们想要显示出在每个组中，每个指标的相对丰度。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120432.png" alt="image-20201212234911658" style="zoom:67%;">
</li>
<li><p>选中数据，选择百分比堆积柱状图。Origin里面提供了两个模板绘制百分比堆积柱状图(横向或者竖向)，我们选择竖着的堆积柱状图。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120436.png" alt="image-20201212235101144" style="zoom:67%;">

<p>基本图形就出来了：一幅带有标签的百分比堆积柱状图。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120446.png" alt="image-20201212235123495" style="zoom:67%;">

</li>
</ul>
<p>格式调整：</p>
<ul>
<li><p>双击柱子，调整颜色。使用从属，用颜色系进行填充，可以将填充色和边框色设置成一样的，比较好看。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120452.png" alt="image-20201213000238440" style="zoom:50%;">
</li>
<li><p>设置中间的连线为白色，这样就不用显示了</p>
<img src="C:\Users\Hu\AppData\Roaming\Typora\typora-user-images\image-20201212235555276.png" alt="image-20201212235555276" style="zoom:67%;">
</li>
<li><p>设置一个合适的间距</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120456.png" alt="image-20201212235637962" style="zoom:67%;">

<p>如果你觉得显示的图例不合适，你可以显示成数据表中各个指标的数字：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120500.png" alt="image-20201212235919161" style="zoom:50%;">

<p>最后将图中的标签更改一下：</p>
<ul>
<li>删除Y轴标签，重新填写；</li>
<li>将图例右击放成水平；</li>
<li>X，Y轴次坐标取消，字体新罗马加粗；</li>
</ul>
<p>最后得效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120506.png" alt="image-20201213000304867" style="zoom:50%;">

</li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『Graphics』 绘制二维数据集的置信椭圆</title>
    <url>/posts/3b0a2e38/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>如何绘制二维正态分布数据的误差椭圆，又名置信椭圆。</p>
<a id="more"></a>

<p>在二维或者更高维的空间里，数据的聚类往往需要添加一个“置信区间”。仿照一维空间的数据，置信区间往往相对于点估计而来的，在统计学中，一个概率样本的置信区间（Confidence interval）是对这个样本的某个总体参数的区间估计。置信区间展现的是这个参数的真实值有一定概率落在测量结果的周围的程度，其给出的是被测量参数的测量值的可信程度，一般我们用95%置信区间来表示。<br> 那么二维空间的数据也是如此，二维空间的置信区间往往利用置信椭圆来描述，展现真实值的可信程度，一般我们用95%置信椭圆来表示。<br> 为什么是置信椭圆呢，<strong>往往是因为我们的而数据分布形似椭圆</strong></p>
<h1 id="置信椭圆绘制原理"><a href="#置信椭圆绘制原理" class="headerlink" title="置信椭圆绘制原理"></a>置信椭圆绘制原理</h1><h2 id="一、数据中心在原点且轴对齐型"><a href="#一、数据中心在原点且轴对齐型" class="headerlink" title="一、数据中心在原点且轴对齐型"></a>一、数据中心在原点且轴对齐型</h2><p>先看最简单的，轴对齐型的，比方说椭圆长轴平行于x轴</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164412.webp" alt="19396348-3efc6f55365e4510" style="zoom:67%;">

<p>假设我有两列随机变量 x 和 y<br>对于该二维数据，x和y，我们不妨计算下x和y的协方差矩阵：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164425.webp" alt="19396348-ee85a1eb300b094e" style="zoom:50%;">

<p>由于我们的数据，形似椭圆，并且椭圆长轴平行于x轴，那么<strong>协方差矩阵中x轴方向的方差为8.4213，y轴方向的方差为0.9387。</strong>由于x方向与y方向正交，所以x和y这两个随机变量的协方差为0，也可以理解为相关性为0。</p>
<p><strong>由于我们的数据点分布形似椭圆，所以我们定义置信区间就把它定义为椭圆</strong>，我们知道椭圆的标准方程为：<br>$$<br>\left(\frac{x}{a}\right)^{2}+\left(\frac{y}{b}\right)^{2}=1<br>$$<br>那么我们不妨将椭圆的半长轴a定义为σx，半短轴b定义为σy，那么有：<br>$$<br>\left(\frac{x}{\sigma_{x}}\right)^{2}+\left(\frac{y}{\sigma_{y}}\right)^{2}=s<br>$$<br>σ_x与σ_y分别代表x和y的标准差，s与置信度有关。</p>
<p>显然，该椭圆的数据中心为(0,0)。<br>其中s定义椭圆的规模，可以是任意的数（例如，s=1）。现在的问题是如何选择s，使得所得到的椭圆规模代表我们所选择的置信水平（例如，95％的置信水平对应于s =5.991）。(不太明白这个椭圆的规模是什么意思)<br> 这个s=5.991可以通过卡方分布（随机变量平方和）进行计算（假设随机变量x和y服从高斯分布），并且自由度为2.<br>$$<br>\left(\frac{x}{\sigma_{x}}\right)^{2}+\left(\frac{y}{\sigma_{y}}\right)^{2}=s<br>$$</p>
<p>联想到<strong>卡方分布</strong>，上式左侧可以看作为随机变量的平方和，通过查询卡方表，有：<br>$$<br>P(s&lt;5.991)=1-0.05=0.95<br>$$<br>我们知道当 s = 5.991 时，<strong>P(s &lt; 5.991) = 0.95</strong>，也就是说，我们要寻找一个在椭圆上的点，使得 s = 5.991，那么将 s = 5.991 带入椭圆方程：<br>$$<br>\left(\frac{x}{\sigma_{x}}\right)^{2}+\left(\frac{y}{\sigma_{y}}\right)^{2}&lt;5.991<br>$$<br>这个等式表明数据点小于5.991的概率为95%（在椭圆内表示数据点小于5.991）。<br> 那么，s=5.991即为95%置信区间，表示有一组数据，其x方向方差为σx，y方向方差为σy时，如果s=5.991，那么95%的数据点在该椭圆内。<br> 那么置信椭圆的长轴2a：<br>$$<br>2 \sigma_{x} \sqrt{5.991}<br>$$<br>置信椭圆的短轴2b：<br>$$<br>2 \sigma_{y} \sqrt{5.991}<br>$$</p>
<h2 id="二、数据中心在原点且任意方向的置信椭圆"><a href="#二、数据中心在原点且任意方向的置信椭圆" class="headerlink" title="二、数据中心在原点且任意方向的置信椭圆"></a>二、数据中心在原点且任意方向的置信椭圆</h2><p>在数据是相关的情况下，例如存在协方差，所产生的误差椭圆不会是轴对齐的。在这种情况下，如果我们暂时定义一个新的坐标系，使得所述椭圆变为轴对齐，然后旋转所产生的椭圆，那么上面的结论依然有效。</p>
<p>换句话说，之前我们计算平行于x轴和y轴的方差，现在我们计算平行于置信椭圆长轴和短轴的方差，需要计算的方差方向由图1粉红和绿色箭头表示出来。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164446.webp" alt="19396348-d91cc601dd29d79b" style="zoom:67%;">

<p>首先计算随机变量x和y的协方差矩阵，根据协方差矩阵计算该矩阵的特征向量（上图绿色为椭圆短轴方向的特征向量；粉红色为椭圆长轴方向的特征向量），我们定义椭圆长轴方向的特征向量为v1，椭圆短轴方向的特征向量为v2；而特征向量大小为特征值，我们定义椭圆长轴方向的特征值为λ1，椭圆短轴方向的特征值为λ2。<br> 此时椭圆的长轴为：<br>$$<br>2 \sqrt{5.991\lambda_1}<br>$$<br>椭圆的短轴为：<br>$$<br>2 \sqrt{5.991\lambda_2}<br>$$<br>并且定义椭圆长轴与x轴正方向夹角为α：(为了获得椭圆的方向，我们简单地计算最大特征向量的角度)</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164452.webp" alt="19396348-d21ad76a3d39336c" style="zoom:67%;">
$$
\alpha=\arctan \frac{\mathbf{v}_{1}(y)}{\mathbf{v}_{1}(x)}
$$
那么，我们就可以根据角度来对置信椭圆进行“旋转”。

<h2 id="三、任意位置置信椭圆"><a href="#三、任意位置置信椭圆" class="headerlink" title="三、任意位置置信椭圆"></a>三、任意位置置信椭圆</h2><p>有了上面的介绍，那么任意位置的椭圆无非是满足数据中心不在原点，且椭圆长轴与x轴正方向夹角为任意角α。并以此来建立椭圆方程，画出置信椭圆（可见数据中心化可以简便很多计算）</p>
<h1 id="python-绘制置信椭圆"><a href="#python-绘制置信椭圆" class="headerlink" title="python 绘制置信椭圆"></a>python 绘制置信椭圆</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- encoding: utf-8 -*-</span>
<span class="token triple-quoted-string string">"""
@software: PyCharm
@file : 112.py
@time : 2020/12/31 
"""</span>
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>patches <span class="token keyword">import</span> Ellipse
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>transforms <span class="token keyword">as</span> transforms
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd


<span class="token keyword">def</span> <span class="token function">confidence_ellipse</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ax<span class="token punctuation">,</span> n_std<span class="token operator">=</span><span class="token number">3.0</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> x<span class="token punctuation">.</span>size <span class="token operator">!=</span> y<span class="token punctuation">.</span>size<span class="token punctuation">:</span>
        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">"x and y must be the same size"</span><span class="token punctuation">)</span>

    cov <span class="token operator">=</span> np<span class="token punctuation">.</span>cov<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    lambda_<span class="token punctuation">,</span> v <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>eig<span class="token punctuation">(</span>cov<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 计算特征值和特征向量</span>
    angle <span class="token operator">=</span> np<span class="token punctuation">.</span>rad2deg<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arccos<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 计算旋转角度</span>

    ell_radius_x <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>n_std<span class="token operator">*</span>lambda_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    ell_radius_y <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>n_std<span class="token operator">*</span>lambda_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># 默认椭圆中心为原点</span>
    mean_x<span class="token punctuation">,</span>mean_y <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>y<span class="token punctuation">)</span>
    ellipse <span class="token operator">=</span> Ellipse<span class="token punctuation">(</span><span class="token punctuation">(</span>mean_x<span class="token punctuation">,</span>mean_y<span class="token punctuation">)</span><span class="token punctuation">,</span>
                      width<span class="token operator">=</span>ell_radius_x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>
                      height<span class="token operator">=</span>ell_radius_y <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>
                      facecolor<span class="token operator">=</span>facecolor<span class="token punctuation">,</span>
                      angle<span class="token operator">=</span>angle<span class="token punctuation">,</span>
                      <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>

    <span class="token keyword">return</span> ax<span class="token punctuation">.</span>add_patch<span class="token punctuation">(</span>ellipse<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">'data.xlsx'</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span>None<span class="token punctuation">)</span>
    x <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span>
    y <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span>

    <span class="token comment" spellcheck="true"># 卡方值， 95％的置信水平对应于s =5.991</span>
    ss <span class="token operator">=</span> <span class="token number">5.991</span>

    fig<span class="token punctuation">,</span> ax_kwargs <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># ax_kwargs.axvline(c='grey', lw=1)</span>
    <span class="token comment" spellcheck="true"># ax_kwargs.axhline(c='grey', lw=1)</span>


    confidence_ellipse<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ax_kwargs<span class="token punctuation">,</span>n_std<span class="token operator">=</span>ss<span class="token punctuation">,</span>
                       alpha<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>  edgecolor<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> zorder<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    ax_kwargs<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
    ax_kwargs<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Origin-绘制置信椭圆"><a href="#Origin-绘制置信椭圆" class="headerlink" title="Origin 绘制置信椭圆"></a>Origin 绘制置信椭圆</h1><p>在 Apps 里面添加 <code>2D Confidence Ellipse</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164501.png" alt="image-20201231161309391" style="zoom:67%;">

<p>首先激活要绘制置信椭圆的散点图图层：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164506.png" alt="image-20201231161602870" style="zoom: 67%;">

<p>选择右边Apps 里面的 <code>2D Confidence Ellipse</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164511.png" alt="image-20201231161654625" style="zoom:80%;">

<p>此时会弹出对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164516.png" alt="image-20201231162046509" style="zoom:67%;">

<p>效果图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164521.png" alt="image-20201231162156951" style="zoom:67%;">







<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.jianshu.com/p/c3caf3524705">置信椭圆</a></li>
<li><a href="https://blog.csdn.net/qq_36097393/article/details/87605173">从从协方差的误差椭圆到PCA从从协方差的误差椭圆到PCA</a></li>
<li><a href="https://www.osgeo.cn/matplotlib/gallery/statistics/confidence_ellipse.html">matplotlib:绘制二维数据集的置信椭圆</a></li>
<li><a href="https://www.coder.work/article/96588">python - 使用matplotlib在散点图中创建置信椭圆</a></li>
<li><a href="https://www.geek-share.com/detail/2792936587.html">置信椭圆-python</a> </li>
<li><a href="https://www.originlab.com/FileExchange/details.aspx?v=0&amp;fid=365">OriginLab:2D Confidence Ellipse </a></li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Origin</tag>
      </tags>
  </entry>
  <entry>
    <title>『Excel技巧』常用函数</title>
    <url>/posts/27c26887/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>办公常用的十大函数</p>
<p>@SUBTOTAL函数</p>
<a id="more"></a>

<h1 id="subtotal函数基本功能"><a href="#subtotal函数基本功能" class="headerlink" title="subtotal函数基本功能"></a>subtotal函数基本功能</h1><p>分类汇总函数**<code>SUBTOTAL</code><strong>，它可以包括</strong>求和<strong>、</strong>汇总<strong>、</strong>平均<strong>等等多个函数的使用。<code>SUBTOTAL</code>函数的</strong>优点<strong>在于可以</strong>忽略隐藏的单元格<strong>、</strong>支持三维运算<strong>和</strong>区域数组引用**。</p>
<p><code>SUBTOTAL</code>函数就是返回一个列表或数据库中的分类汇总情况。</p>
<p><strong>语法</strong>：</p>
<pre><code>SUBTOTAL(function_num,ref1,[ref2],...)</code></pre>
<p><strong>参数</strong>：</p>
<ul>
<li><p><strong>Function_num</strong>：必需。 数字 1-11 或 101-111，用于指定要为分类汇总使用的函数。 如果使用 1-11，将包括手动隐藏的行，如果使用 101-111，则排除手动隐藏的行；始终排除已筛选掉的单元格。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183630.png" alt="v2-babae3fb435ea4df26f14c538b080df1_r" style="zoom:80%;">
</li>
<li><p><strong>ref1</strong>：必需。要对其进行分类汇总计算的第一个命名区域或引用。</p>
</li>
<li><p>**ref2…**：可选。要对其进行分类汇总计算的第 2 个至第 254 个命名区域或引用。</p>
</li>
</ul>
<h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="一、利用subtotal函数给表格自动编号"><a href="#一、利用subtotal函数给表格自动编号" class="headerlink" title="一、利用subtotal函数给表格自动编号"></a>一、利用subtotal函数给表格自动编号</h2><p><strong>如何做才能得到这样自动编号效果（当单行或者多行被隐藏或者取消隐藏时，A列序号会自动调整）呢？</strong></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183637.webp" alt="1719125-8247568fb865ec08" style="zoom:67%;">

<p>仔细观察，序号是从小排到大的，且A列每一个序号等于其对于B列单元格向上数非空单元格的个数，例如，A3单元格值为2，即是b2:B3单元格区域中非空单元格的个数；A7单元格的值为6，即是B2：B7单元格区域中非空单元格的个数。因此我们直接在A2单元格中输入公式：=counta(B$2:B2),然后复制到整列即可。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183700.webp" alt="1719125-e7f7e26fa48ac7c6" style="zoom:67%;">

<p>然而，当我们隐藏某些行列时，我们发现行列时，A列的序号却无法自动更新调整。如下图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183706.webp" alt="1719125-1c3be39b4da14009" style="zoom:67%;">

<p>如何解决这个问题呢？很显然，使用counta函数已经无法得到我们想要的效果了，因此我们请出subtotal函数来帮忙，前面我们提到，subtotal函数在第一参数使用101到111代码时，会自动忽略隐藏值，subtotal中计算非空单元格数的代码为103，因此我们可以写出下面的公式：A2单元格中输入公式：=subtotal(103,B$2:B2)，然后将此公式复制到全列即可。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183710.webp" alt="1719125-6015a78b2cabea93" style="zoom:67%;">

<h2 id="二、利用subtotal函数计算选手最后得分"><a href="#二、利用subtotal函数计算选手最后得分" class="headerlink" title="二、利用subtotal函数计算选手最后得分"></a>二、利用subtotal函数计算选手最后得分</h2><p>看下图，如何快速计算出选手的最后得分呢？</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183715.webp" alt="1719125-8ce44870508d752b" style="zoom:67%;">

<p>一般比赛的要求都是去掉一个最高分，再去掉一个最低分，然后再取剩余值的平均值。因此我们解题步骤通常如下：</p>
<p>1.求总分：=SUM(B2:J2)</p>
<p>2.减去最低分和最高分：=SUM(B2:J2)-max(B2:J2)-min(B2:J2)</p>
<p>3.剩余的值求平均值，本例子中共有9位评委，去掉最低和最高两个评委，将剩下的7位评委的分数求平均分，因此公式为：=(SUM(B2:J2)-max(B2:J2)-min(B2:J2))/7</p>
<p>在普通解法中，我们用到了三个函数，思路很简单，但是还是比较麻烦的，如果我们使用subtotal函数，2个函数就可以搞定选手的最后得分了。公式如下：<code>{=SUM(SUBTOTAL({9,4,5},B2:J2)*{1,-1,-1})/7}</code></p>
<p>subtotal函数共2个参数，第一个参数为{9,4,5},9为求和，4为最大值，5为最小值，第二个参数为B2:J2；</p>
<p>在subtotal函数乘一个数组{1，-1，-1}，即得到sum(B2:J2)，-max(B2:J2),-min(B2:J2)，接下来利用sum函数将这几个值加起来就相当于公式：=SUM(B2:J2)-max(B2:J2)-min(B2:J2)；</p>
<p>将得到的结果除以7即得到了=SUM(SUBTOTAL({9,4,5},B2:J2)*{1,-1,-1})/7的公式，最后按下Ctrl+Shift+Enter完成数组公式的输入。</p>
<h2 id="三、合并汇总"><a href="#三、合并汇总" class="headerlink" title="三、合并汇总"></a>三、合并汇总</h2><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.jianshu.com/p/06c64f2f47f6">Subtotal函数：各种简单统计</a></li>
<li></li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Excel</category>
      </categories>
      <tags>
        <tag>excel</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』如何设置图形X轴为时间序列</title>
    <url>/posts/d2ee1474/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>origin2021 如何设置图形 X 轴为时间序列</p>
<a id="more"></a>

<p>未处理的数据，A 为普通的数据格式，为2012年每天的数据，想要X轴显示<code>年月</code>的形式:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152753.png" alt="image-20201218145422242" style="zoom:67%;">

<p>选择要处理的数据列：<code>Format</code> -&gt;<code>Column Properties</code> :</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152801.png" alt="image-20201218150346432" style="zoom:67%;">

<p>这里选择的显示格式，只是在数据表中的显示格式。</p>
<p>选中两列数据绘制折线图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152820.png" alt="image-20201218152458838" style="zoom:80%;">

<p>这里看到X轴显示的不是期望的 <code>年月</code> 形式的。</p>
<p>双击X轴，打开对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152840.png" alt="image-20201218151502016" style="zoom: 50%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152858.png" alt="image-20201218152322706" style="zoom: 50%;">

<p>最后显示的效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152908.png" alt="image-20201218152429611" style="zoom:80%;">

<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 图形合并-组合图绘制</title>
    <url>/posts/4337443a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>图形合并-组合图绘制</p>
<a id="more"></a>

<p>效果图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152602.png" alt="image-20201215233618245" style="zoom:67%;">

<p>数据：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152609.png" alt="image-20201215233736588" style="zoom:80%;">

<p>有三个工作簿，各有两个表，分别是散点数据和拟合数据：</p>
<h2 id="图形绘制"><a href="#图形绘制" class="headerlink" title="图形绘制"></a>图形绘制</h2><ul>
<li><p>选中第一个表绘制散点数据：</p>
<p>初步调整的结果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152615.png" alt="image-20201215234103013" style="zoom: 50%;">
</li>
<li><p>选择拟合数据：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152619.png" alt="image-20201215234240328" style="zoom: 50%;">

<p>鼠标放到右侧边框处，显示小图片时，拖到左侧的图中并调整为线：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152624.png" alt="image-20201215234430893" style="zoom: 50%;">



</li>
</ul>
<p>  效果：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152630.png" alt="image-20201215234600324" style="zoom: 50%;">

<p>  调整图层顺序：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152635.png" alt="image-20201215234748473" style="zoom:67%;">

<p>  此时发现轴标题变了：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152642.png" alt="image-20201215234832994" style="zoom:67%;">

<p>  如何变回原来的呐？打开绘图设置对话框：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152648.png" alt="image-20201215234943957" style="zoom: 50%;">

<p>  就可以了。</p>
<ul>
<li><p>增加断点，双击轴打开设置对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152653.png" alt="image-20201215235306523" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152658.png" alt="image-20201215235337790" style="zoom:67%;">
</li>
<li><p>设置局部方法效果，激活图层，右侧单继带数据的放大图按钮：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152703.png" alt="image-20201215235448488" style="zoom:80%;">

<p>效果</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152709.png" alt="image-20201215235534609" style="zoom:67%;">
</li>
<li><p>对子图进行修改：</p>
<p>包括修改x轴的坐标范围，重新调整Y轴的缩放比例</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152713.png" alt="image-20201215235720437" style="zoom:67%;">
</li>
<li><p>为子图添加竖直线：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152719.png" alt="image-20201215235843232" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152725.png" alt="image-20201216000403676" style="zoom:67%;">
</li>
<li><p>利用批量绘图（要求数据结构一样），绘制另外两个图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152729.png" alt="image-20201216000801473" style="zoom:67%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152736.png" alt="image-20201216000949444" style="zoom:67%;">

<p>此时另外两个图也绘制好了。</p>
</li>
</ul>
<h2 id="图形合并"><a href="#图形合并" class="headerlink" title="图形合并"></a>图形合并</h2><p>合并图，打开<code>Graph</code>-&gt;<code>Merge Graph Window</code> :</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152741.png" alt="image-20201216001225681" style="zoom:67%;">

<p>同时也可以固定缩放比例：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152747.png" alt="image-20201216002738104" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152754.png" alt="image-20201216001305890" style="zoom: 50%;">

<p>删除重复的元素，并对子图进行调整：</p>
<p>首先调整第一个小图的大小和位置，右键：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152801.png" alt="image-20201216001611865" style="zoom:67%;">

<p>复制格式，然后对其它子图粘贴格式：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152806.png" alt="image-20201216001716220" style="zoom:67%;">

<p>统一调整子图的刻度标签，打开绘图设置：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152810.png" alt="image-20201216002051648" style="zoom:67%;">

<p>此时调整一个图的时候，其它两个图会做出相应的变化：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152815.png" alt="image-20201216002158033" style="zoom: 50%;">

<p>图形已基本绘制好。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 多轴图绘制</title>
    <url>/posts/43744913/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>多轴图绘制</p>
<a id="more"></a>

<h1 id="多轴图绘制一"><a href="#多轴图绘制一" class="headerlink" title="多轴图绘制一"></a>多轴图绘制一</h1><ul>
<li>直接在绘图菜单中选择所需要的模板绘图  </li>
<li>画图之后修改绘图类型  </li>
<li>往图层中添加数据  </li>
</ul>
<p>数据</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150304.png" alt="image-20201215213457464" style="zoom:50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150310.png" alt="image-20201215213729865" style="zoom:80%;">

<h2 id="三Y轴图"><a href="#三Y轴图" class="headerlink" title="三Y轴图"></a>三Y轴图</h2><p>选取后三列数据，选择绘图模板</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150316.png" alt="image-20201215213848804" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150323.png" alt="image-20201215213933580" style="zoom: 50%;">

<ul>
<li><p>调整前两个数据的显示格式：调为柱状图</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150331.png" alt="image-20201215214023049" style="zoom: 50%;">
</li>
<li><p>效果：（此时两个柱体是重合的）</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150339.png" alt="image-20201215214120870" style="zoom: 50%;">

<p>打开绘图设置对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150343.png" alt="image-20201215214327065" style="zoom: 50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150349.png" alt="image-20201215214407314" style="zoom: 50%;">

<p>由于 1，2轴的数据是接近的，将图层2 的y轴与图层1 的y轴进行1 to 1 关联：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150355.png" alt="image-20201215214637013" style="zoom: 50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150401.png" alt="image-20201215214702143" style="zoom: 50%;">

<p>最后修改刻度范围，颜色就可以了。最终效果图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150407.png" alt="image-20201215214920547" style="zoom: 50%;">



</li>
</ul>
<h2 id="双Y轴图"><a href="#双Y轴图" class="headerlink" title="双Y轴图"></a>双Y轴图</h2><p>第二个图，由于第一列数据与第二列数据是相近的，没必要用3y 轴图，可以用双Y轴图。</p>
<ul>
<li><p>选中B和D列数据，选取绘图模板：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150415.png" alt="image-20201215215246709" style="zoom:80%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150420.png" alt="image-20201215215407861" style="zoom: 50%;">
</li>
<li><p>将C列添加到第一图层里面：双击左上角的<code>1</code> ,将其添加到图层1，显示为柱状图:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150425.png" alt="image-20201215215546097" style="zoom:67%;">

<p>将右侧两个数据成组：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150429.png" alt="image-20201215215722233" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150435.png" alt="image-20201215215815714" style="zoom: 50%;">
</li>
<li><p>颜色调整：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150440.png" alt="image-20201215220000535" style="zoom:67%;">

<p>最终效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150445.png" alt="image-20201215220107139" style="zoom: 50%;">

<h2 id="多轴堆叠柱状图"><a href="#多轴堆叠柱状图" class="headerlink" title="多轴堆叠柱状图"></a>多轴堆叠柱状图</h2><p>上面的图绘制好后复制一份：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150452.png" alt="image-20201215220230685" style="zoom:80%;">

<p>打开绘图细节对话框，选择图层1：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150459.png" alt="image-20201215220420463" style="zoom: 50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150507.png" alt="image-20201215220455972" style="zoom: 50%;">

<p>部分柱体显示不完全，选取右侧的重新设置Y轴范围按钮：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150520.png" alt="image-20201215220641184" style="zoom:67%;">



</li>
</ul>
<p>  就可以显示全部的柱体了，最后的效果：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101150514.png" alt="image-20201215220728678" style="zoom: 50%;">

<h1 id="多轴图绘制二"><a href="#多轴图绘制二" class="headerlink" title="多轴图绘制二"></a>多轴图绘制二</h1><ul>
<li>工具栏或者菜单添加图层  </li>
<li>(按需) 往图层中添加数据  </li>
</ul>
<h2 id="顶轴刻度与下轴刻度关联"><a href="#顶轴刻度与下轴刻度关联" class="headerlink" title="顶轴刻度与下轴刻度关联"></a>顶轴刻度与下轴刻度关联</h2><ul>
<li><p>首先绘制一个图（我也不知道怎么画的）：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150526.png" alt="image-20201215222217852" style="zoom: 50%;">
</li>
<li><p>右侧，点击右侧添加顶轴按钮</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150532.png" alt="image-20201215222329595" style="zoom:67%;">



</li>
</ul>
<p>  此时添加了一个新的图层。</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101150540.png" alt="image-20201215222408650" style="zoom: 50%;">

<ul>
<li><p>打开绘图设置对话框，选择TopX：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150544.png" alt="image-20201215222654596" style="zoom:67%;">

<p>分别设置坐标轴的开始和结束的对应关系</p>
<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150551.png" alt="image-20201215223102966" style="zoom: 50%;">

</li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>draw.io、Origin和Visio等导出在word显示无损高清图</title>
    <url>/posts/2fca8b56/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>draw.io、Origin和Visio等导出在word显示无损高清图。</p>
<p>如何在visio的框图中插入公式 visio如何插入word中的数学公式。</p>
<a id="more"></a>

<h1 id="draw-io"><a href="#draw-io" class="headerlink" title="draw.io"></a>draw.io</h1><p>draw.io和Visio 都可以制作流程图等，但draw.io 操作更为便捷。Visio制作的图虽然可以直接插入到word中，但有时候会存在各种问题。</p>
<p>draw.io 可以导出的图片格式如图所示，</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208224122.png" alt="Snipaste_2020-12-08_22-35-58" style="zoom:80%;">

<p>但是导出的图片都不能在word实现无损方法的效果，最近发现可以导出VSDX格式的文件(该文件可以在Visio打开)，Visio 打开该文件后，再将文件保存为 <code>.emf</code> 格式的文件。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208224556.png" alt="image-20201208224546836" style="zoom:80%;">

<p>导出后的文件可以直接导入word,下图是放大1600%的效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208224812.png" alt="image-20201208224721619" style="zoom: 50%;">

<h1 id="怎样在word中得到无损放大的origin组合图"><a href="#怎样在word中得到无损放大的origin组合图" class="headerlink" title="怎样在word中得到无损放大的origin组合图"></a>怎样在word中得到无损放大的origin组合图</h1><p>在 origin 中绘好图之后，复制</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208225519.png" alt="image-20201208225502184" style="zoom:80%;">

<p>新建一页空白 PPT 文档，将复制的图粘贴到空白文档里：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208225656.png" alt="image-20201208225647370" style="zoom:80%;">

<p>然后选择图片，将其另存为<code>.emf</code> 格式的文件。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208225848.png" alt="image-20201208225818944" style="zoom:80%;">

<p>再将文件导入word 后，就实现了无损方法的效果。</p>
<h1 id="Visio-中如何插入数学公式"><a href="#Visio-中如何插入数学公式" class="headerlink" title="Visio 中如何插入数学公式"></a>Visio 中如何插入数学公式</h1><p>先在<a href="https://www.office26.com/word/">word</a>中用自带的公式编辑器将公式写好，如下图</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208230221.png" alt="image-20201208230209424" style="zoom:50%;">

<p>此时选中公式，复制或者Ctrl+C</p>
<p>到<a href="https://www.office26.com/visio/">visio</a>的空白的地方，鼠标右键，点击选择性粘贴，选择Microsoft <a href="https://www.office26.com/word/">Word </a>文档，点击确定后，即可实现公式的粘贴</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208230628.png" alt="image-20201208230331223" style="zoom:50%;">

<p>将公式拖动到合适的位置即可。</p>
<p>最后还可使用Ctrl+G将框图和公式组合到一起，这样移动时两个一起移动，更方便些。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.bilibili.com/video/BV1wp4y1e7oW?from=search&amp;seid=4078241403795458791">怎样在word中得到无损放大的origin组合图</a></li>
<li><a href="https://www.office26.com/visio/visio_14931.html">如何在visio的框图中插入公式 visio如何插入word中的数学公式</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Origin</tag>
        <tag>draw.io</tag>
        <tag>Viso</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 如何美化科学计数法的坐标轴？</title>
    <url>/posts/1d83386a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/HG95/image/master/20210103141944.png" alt="image-20210103141324610" style="zoom: 80%;"></h1><a id="more"></a>

<p>当坐标轴数值比较大时，无论是以10进制显示坐标轴数值（如图1）还是科学计数法显示坐标轴数值（如图2）都不太美观。如何美化科学计数法的坐标轴（如图3）呢？</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103141951.png" alt="image-20201214110821637" style="zoom: 80%;">

<p>A：用户可执行：</p>
<ol>
<li><p>双击坐标轴打开Axis对话框，选择Tick Label:Display选项卡</p>
</li>
<li><p>在Divide by Factor键入需要省略的“10的n次幂”</p>
</li>
<li><p>勾选Set Decimal Places为设置小数点位数，在Decimal Number中可键入需要显示的小数点位数</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103141958.png" alt="image-20201214110931916" style="zoom:67%;">
</li>
<li><p>选择Special Ticks选项卡，在坐标轴最末端的位置新增一个Tick，显示为末端值*10的n次幂（LastNum x 10+(n)）</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142003.png" alt="image-20201214111025976" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142010.png" alt="image-20210103141607951" style="zoom:80%;"></li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 坐标轴显示部分刻度</title>
    <url>/posts/2f51bfdc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/HG95/image/master/20210103142356.png" alt="image-20210103142250338" style="zoom:80%;"></h1><a id="more"></a>

<p>正常的坐标轴显示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142401.png" alt="image-20201219161606893" style="zoom:80%;">

<p>想要只显示一部分刻度，例如3，4，5</p>
<p>双击坐标轴：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142405.png" alt="image-20201219161837679" style="zoom:80%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142412.png" alt="image-20201219161906316" style="zoom:80%;"><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>sdws</title>
    <url>/posts/be627c25/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a>

<div id="echarts2580" style="width: 85%;height: 400px;margin: 0 auto"></div>
<script src="https://cdn.bootcss.com/echarts/3.8.0/echarts.common.min.js"></script>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts2580'));
        // 指定图表的配置项和数据
        var option = {
    tooltip : {
        trigger: 'axis',
        axisPointer : {            // 坐标轴指示器，坐标轴触发有效
            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
        }
    },
    legend: {
        data:['利润', '支出', '收入']
    },
    grid: {
        left: '3%',
        right: '4%',
        bottom: '3%',
        containLabel: true
    },
    xAxis : [
        {
            type : 'value'
        }
    ],
    yAxis : [
        {
            type : 'category',
            axisTick : {show: false},
            data : ['周一','周二','周三','周四','周五','周六','周日']
        }
    ],
    series : [
        {
            name:'利润',
            type:'bar',
            itemStyle : {
                normal: {
                    label: {show: true, position: 'inside'}
                }
            },
            data:[200, 170, 240, 244, 200, 220, 210]
        },
        {
            name:'收入',
            type:'bar',
            stack: '总量',
            itemStyle: {
                normal: {
                    label : {show: true}
                }
            },
            data:[320, 302, 341, 374, 390, 450, 420]
        },
        {
            name:'支出',
            type:'bar',
            stack: '总量',
            itemStyle: {normal: {
                label : {show: true, position: 'left'}
            }},
            data:[-120, -132, -101, -134, -190, -230, -210]
        }
    ]
};
        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>









<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>利用 Python 批量合并 Excel 文件</title>
    <url>/posts/eebdf3f9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>利用 Python 批量合并 Excel 文件</p>
<a id="more"></a>

<h1 id="一、导入库"><a href="#一、导入库" class="headerlink" title="一、导入库"></a>一、导入库</h1><p>这里会使用 <code>os</code> ，<code>xlrd</code>，<code>pandas</code>，<code>pathlib</code> 四个库。</p>
<p><code>xlrd</code> 是用来读取 xls 文件的，<code>pandas</code> 是用来合并数据和写文件的。</p>
<p><code>pathlib</code> 是用来兼容windows和unix平台（linux or macos）的文件路径的</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> xlrd
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="二、遍历要合并的文件"><a href="#二、遍历要合并的文件" class="headerlink" title="二、遍历要合并的文件"></a>二、遍历要合并的文件</h1><p>给一个目标文件夹，将这里面全部的文件都生成文件路径。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">file_name</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xls'</span> <span class="token operator">or</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xlsx'</span><span class="token punctuation">:</span>
            list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="三、合并输出文件"><a href="#三、合并输出文件" class="headerlink" title="三、合并输出文件"></a>三、合并输出文件</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">merge_xlsx</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>sheet_num<span class="token punctuation">,</span>output_filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true">#定义一个空list</span>
    title <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    path_folder <span class="token operator">=</span> Path<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>filenames<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        read_xlsx <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span>path_folder <span class="token operator">/</span> filenames<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        sheet_num_data <span class="token operator">=</span> read_xlsx<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>sheet_num<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#查看指定sheet_num的数据</span>
        title <span class="token operator">=</span> sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#表头, 0也就是第一行</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>sheet_num_data<span class="token punctuation">.</span>nrows<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#逐行打印,1也就是第二行的内容</span>
            data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
    content<span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">#修改表头</span>
    content<span class="token punctuation">.</span>columns <span class="token operator">=</span> title
    <span class="token comment" spellcheck="true">#写入excel文件</span>
    output_path <span class="token operator">=</span> path_folder <span class="token operator">/</span> <span class="token string">'output'</span>
    output_filename_xlsx <span class="token operator">=</span> output_filename <span class="token operator">+</span> <span class="token string">'.xlsx'</span>
    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"output folder not exist, create it"</span><span class="token punctuation">)</span>
        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span>
    content<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token punctuation">(</span>output_path <span class="token operator">/</span> output_filename_xlsx<span class="token punctuation">)</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"merge success"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="四、写入变量并运行"><a href="#四、写入变量并运行" class="headerlink" title="四、写入变量并运行"></a>四、写入变量并运行</h1><p>完整的代码：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> xlrd
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path

<span class="token keyword">def</span> <span class="token function">get_filename</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xls'</span> <span class="token operator">or</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xlsx'</span><span class="token punctuation">:</span>
            list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> list

<span class="token keyword">def</span> <span class="token function">merge_xlsx</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>sheet_num<span class="token punctuation">,</span>output_filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true">#定义一个空list</span>
    title <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    path_folder <span class="token operator">=</span> Path<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>filenames<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        read_xlsx <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span>path_folder <span class="token operator">/</span> filenames<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        sheet_num_data <span class="token operator">=</span> read_xlsx<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>sheet_num<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#查看指定sheet_num的数据</span>
        title <span class="token operator">=</span> sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#表头</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>sheet_num_data<span class="token punctuation">.</span>nrows<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#逐行打印</span>
            data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
    content<span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">#修改表头</span>
    content<span class="token punctuation">.</span>columns <span class="token operator">=</span> title
    <span class="token comment" spellcheck="true">#写入excel文件</span>
    output_path <span class="token operator">=</span> path_folder <span class="token operator">/</span> <span class="token string">'output'</span>
    output_filename_xlsx <span class="token operator">=</span> output_filename <span class="token operator">+</span> <span class="token string">'.xlsx'</span>
    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"output folder not exist, create it"</span><span class="token punctuation">)</span>
        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span>
    content<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token punctuation">(</span>output_path <span class="token operator">/</span> output_filename_xlsx<span class="token punctuation">)</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"merge success"</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    path <span class="token operator">=</span> r<span class="token string">'/Your/Path'</span> <span class="token comment" spellcheck="true">#这里无论什么平台都按照unix风格来输入文件路径</span>
    filenames <span class="token operator">=</span> get_filename<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    merge_xlsx<span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#合并文件中第一个表的数据，输出到 output/sheet1.xlsx中</span>
    merge_xlsx<span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#合并文件中第二个表的数据，输出到 output/sheet2.xlsx中</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="多个excel的多个sheet进行合并"><a href="#多个excel的多个sheet进行合并" class="headerlink" title="多个excel的多个sheet进行合并"></a>多个excel的多个sheet进行合并</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> xlrd
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd


<span class="token keyword">def</span> <span class="token function">get_filename</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xls'</span> <span class="token operator">or</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xlsx'</span><span class="token punctuation">:</span>
            list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> list

<span class="token comment" spellcheck="true"># 打开一个excel文件</span>
<span class="token keyword">def</span> <span class="token function">open_xls</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">:</span>
    fh <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> fh

<span class="token comment" spellcheck="true"># 获取excel中所有的sheet表</span>
<span class="token keyword">def</span> <span class="token function">getsheet</span><span class="token punctuation">(</span>fh<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> fh<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true"># 获取sheet表的行数</span>
<span class="token keyword">def</span> <span class="token function">getnrows</span><span class="token punctuation">(</span>fh<span class="token punctuation">,</span> sheet<span class="token punctuation">)</span><span class="token punctuation">:</span>
    table <span class="token operator">=</span> fh<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>sheet<span class="token punctuation">]</span>
    <span class="token keyword">return</span> table<span class="token punctuation">.</span>nrows

<span class="token comment" spellcheck="true"># 读取文件内容并返回行内容</span>
<span class="token keyword">def</span> <span class="token function">getFilect</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> shnum<span class="token punctuation">,</span>datavalue<span class="token punctuation">)</span><span class="token punctuation">:</span>
    fh <span class="token operator">=</span> open_xls<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    table <span class="token operator">=</span> fh<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>shnum<span class="token punctuation">]</span>
    num <span class="token operator">=</span> table<span class="token punctuation">.</span>nrows
    title <span class="token operator">=</span> table<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> row <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
        rdata <span class="token operator">=</span> table<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span>row<span class="token punctuation">)</span>
        datavalue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>rdata<span class="token punctuation">)</span>
    <span class="token keyword">return</span> title

<span class="token comment" spellcheck="true"># 获取sheet表的个数</span>
<span class="token keyword">def</span> <span class="token function">getshnum</span><span class="token punctuation">(</span>fh<span class="token punctuation">)</span><span class="token punctuation">:</span>
    x <span class="token operator">=</span> <span class="token number">0</span>
    sh <span class="token operator">=</span> getsheet<span class="token punctuation">(</span>fh<span class="token punctuation">)</span>
    <span class="token keyword">for</span> sheet <span class="token keyword">in</span> sh<span class="token punctuation">:</span>
        x <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">return</span> x

<span class="token keyword">def</span> <span class="token function">merge_xlsx</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true"># 存储所有读取的结果</span>
    datavalue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    title <span class="token operator">=</span> <span class="token string">""</span>
    <span class="token keyword">for</span> fll <span class="token keyword">in</span> filenames<span class="token punctuation">:</span>
        fl <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span>fll<span class="token punctuation">)</span>
        fh <span class="token operator">=</span> open_xls<span class="token punctuation">(</span>fl<span class="token punctuation">)</span>
        x <span class="token operator">=</span> getshnum<span class="token punctuation">(</span>fh<span class="token punctuation">)</span>
        <span class="token keyword">for</span> shnum <span class="token keyword">in</span> range<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"正在读取文件："</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>fl<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"的第"</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>shnum<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"个sheet表的内容..."</span><span class="token punctuation">)</span>
            title <span class="token operator">=</span> getFilect<span class="token punctuation">(</span>fl<span class="token punctuation">,</span> shnum<span class="token punctuation">,</span>datavalue<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># 定义最终合并后生成的新文件</span>
    content <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>datavalue<span class="token punctuation">)</span>
    content<span class="token punctuation">.</span>columns <span class="token operator">=</span> title
    content<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"文件合并完成"</span><span class="token punctuation">)</span>




<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true"># 定义要合并的excel文件列表</span>
    path <span class="token operator">=</span> r<span class="token string">'C:\Users\Hu\Desktop\新建文件夹'</span>
    filenames <span class="token operator">=</span> get_filename<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    save_path <span class="token operator">=</span> <span class="token string">'sss12.xlsx'</span>
    merge_xlsx<span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://wocai.de/post/2020/01/%E5%88%A9%E7%94%A8-python-%E6%89%B9%E9%87%8F%E5%90%88%E5%B9%B6-excel-%E6%96%87%E4%BB%B6/">批量合并 Excel 文件</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Applets</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel输入数据自动写入当前时间且锁定不变</title>
    <url>/posts/171131a6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Excel输入数据自动写入当前时间 且锁定不变</p>
<a id="more"></a>

<p>函数:</p>
<pre><code>=IF(B1="","",IF(A1="",NOW(),A1))</code></pre>
<p>解释：如果B1不等于空，则在A1写入当前时间。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>GDAL读写遥感影像数据</title>
    <url>/posts/cdd2e0dc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>使用 <code>GDAL</code>读写tiff遥感影像数据</p>
<a id="more"></a>

<h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><ol>
<li><p>打开已有的栅格数据集</p>
<pre class="line-numbers language-python"><code class="language-python">fn <span class="token operator">=</span> <span class="token string">'aster.img'</span>
ds <span class="token operator">=</span> gdal<span class="token punctuation">.</span>Open<span class="token punctuation">(</span>fn<span class="token punctuation">,</span> GA_ReadOnly<span class="token punctuation">)</span>
<span class="token keyword">if</span> ds <span class="token keyword">is</span> None<span class="token punctuation">:</span>
   <span class="token keyword">print</span> <span class="token string">'Could not open '</span> <span class="token operator">+</span> fn
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>读取栅格数据集的x方向像素数，y方向像素数，和波段数</p>
<pre class="line-numbers language-python"><code class="language-python">cols <span class="token operator">=</span> ds<span class="token punctuation">.</span>RasterXSize
rows <span class="token operator">=</span> ds<span class="token punctuation">.</span>RasterYSize
bands <span class="token operator">=</span> ds<span class="token punctuation">.</span>RasterCount<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>注意后面没有括号，因为他们是属性(properties)不是方法(methods) 读取地理坐标参考信息(georeference info)</p>
</li>
<li><p><code>GeoTransform</code>是一个list，存储着栅格数据集的地理坐标信息</p>
<pre class="line-numbers language-python"><code class="language-python">adfGeoTransform<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> top left x 左上角x坐标<span class="token operator">*</span><span class="token operator">/</span>
adfGeoTransform<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> w<span class="token operator">-</span><span class="token operator">-</span>e pixel resolution 东西方向上的像素分辨率<span class="token operator">*</span><span class="token operator">/</span>
adfGeoTransform<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> rotation<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">if</span> image <span class="token keyword">is</span> <span class="token string">"north up"</span> 如果北边朝上，地图的旋转角度<span class="token operator">*</span><span class="token operator">/</span>
adfGeoTransform<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> top left y 左上角y坐标<span class="token operator">*</span><span class="token operator">/</span>
adfGeoTransform<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> rotation<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">if</span> image <span class="token keyword">is</span> <span class="token string">"north up"</span> 如果北边朝上，地图的旋转角度<span class="token operator">*</span><span class="token operator">/</span>
adfGeoTransform<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> n<span class="token operator">-</span>s pixel resolution 南北方向上的像素分辨率<span class="token operator">*</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意栅格数据集的坐标一般都是以左上角为基准的。</p>
<p>下面的例子是从一个栅格数据集中取出Geotransform作为一个list，然后读取其中的数据</p>
<pre class="line-numbers language-python"><code class="language-python">geotransform <span class="token operator">=</span> ds<span class="token punctuation">.</span>GetGeoTransform<span class="token punctuation">(</span><span class="token punctuation">)</span>
originX <span class="token operator">=</span> geotransform<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
originY <span class="token operator">=</span> geotransform<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
pixelWidth <span class="token operator">=</span> geotransform<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
pixelHeight <span class="token operator">=</span> geotransform<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>计算某一坐标对应像素的相对位置(pixel offset)，也就是该坐标与左上角的像素的相对位置，按像素数计算，计算公式如下：</p>
<pre class="line-numbers language-python"><code class="language-python">xOffset <span class="token operator">=</span> int<span class="token punctuation">(</span><span class="token punctuation">(</span>x – originX<span class="token punctuation">)</span> <span class="token operator">/</span> pixelWidth<span class="token punctuation">)</span>
yOffset <span class="token operator">=</span> int<span class="token punctuation">(</span><span class="token punctuation">(</span>y – originY<span class="token punctuation">)</span> <span class="token operator">/</span> pixelHeight<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>读取某一像素点的值，需要分两步 首先读取一个波段(band)：GetRasterBand(<index>)，其参数为波段的索引号 然后用ReadAsArray(<xoff>, <yoff>, <xsize>, <ysize>)，读出从(xoff,yoff)开始，大小为(xsize,ysize)的矩阵。如果将矩阵大小设为1X1，就是读取一个像素了。但是这一方法只能将读出的数据放到矩阵中，就算只读取一个像素也是一样。例如：</ysize></xsize></yoff></xoff></index></p>
<pre class="line-numbers language-python"><code class="language-python">band <span class="token operator">=</span> ds<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> band<span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>xOffset<span class="token punctuation">,</span> yOffset<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>如果想一次读取一整张图，那么将offset都设定为0，size则设定为整个图幅的size，例如：</p>
<pre class="line-numbers language-python"><code class="language-python">data <span class="token operator">=</span> band<span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> cols<span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>但是要注意，从data中读取某一像素的值，必须要用data[yoff, xoff]。注意不要搞反了。数学中的矩阵是[row,col]，而这里恰恰相反！这里面row对应y轴，col对应x轴。</p>
</li>
</ol>
<h2 id="读图像文件"><a href="#读图像文件" class="headerlink" title="读图像文件"></a>读图像文件</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> osgeo <span class="token keyword">import</span> gdal
<span class="token comment" spellcheck="true"># 读图像文件</span>
<span class="token keyword">def</span> <span class="token function">read_img</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    dataset <span class="token operator">=</span> gdal<span class="token punctuation">.</span>Open<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 打开文件</span>
    im_width <span class="token operator">=</span> dataset<span class="token punctuation">.</span>RasterXSize  <span class="token comment" spellcheck="true"># 栅格矩阵的列数</span>
    im_height <span class="token operator">=</span> dataset<span class="token punctuation">.</span>RasterYSize  <span class="token comment" spellcheck="true"># 栅格矩阵的行数</span>
    im_geotrans <span class="token operator">=</span> dataset<span class="token punctuation">.</span>GetGeoTransform<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 仿射矩阵</span>
    im_proj <span class="token operator">=</span> dataset<span class="token punctuation">.</span>GetProjection<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 地图投影信息</span>
    im_data <span class="token operator">=</span> dataset<span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> im_width<span class="token punctuation">,</span> im_height<span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将数据写成数组，对应栅格矩阵</span>
    <span class="token keyword">del</span> dataset  <span class="token comment" spellcheck="true"># 关闭对象，文件dataset</span>
    <span class="token keyword">return</span> im_proj<span class="token punctuation">,</span> im_geotrans<span class="token punctuation">,</span> im_data<span class="token punctuation">,</span> im_height<span class="token punctuation">,</span> im_width<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="完整程序"><a href="#完整程序" class="headerlink" title="完整程序"></a>完整程序</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> osgeo <span class="token keyword">import</span> gdal
<span class="token comment" spellcheck="true"># 读图像文件</span>
<span class="token keyword">def</span> <span class="token function">read_img</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    dataset <span class="token operator">=</span> gdal<span class="token punctuation">.</span>Open<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 打开文件</span>
    im_width <span class="token operator">=</span> dataset<span class="token punctuation">.</span>RasterXSize  <span class="token comment" spellcheck="true"># 栅格矩阵的列数</span>
    im_height <span class="token operator">=</span> dataset<span class="token punctuation">.</span>RasterYSize  <span class="token comment" spellcheck="true"># 栅格矩阵的行数</span>
    im_geotrans <span class="token operator">=</span> dataset<span class="token punctuation">.</span>GetGeoTransform<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 仿射矩阵</span>
    im_proj <span class="token operator">=</span> dataset<span class="token punctuation">.</span>GetProjection<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 地图投影信息</span>
    im_data <span class="token operator">=</span> dataset<span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> im_width<span class="token punctuation">,</span> im_height<span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将数据写成数组，对应栅格矩阵</span>
    <span class="token keyword">del</span> dataset  <span class="token comment" spellcheck="true"># 关闭对象，文件dataset</span>
    <span class="token keyword">return</span> im_proj<span class="token punctuation">,</span> im_geotrans<span class="token punctuation">,</span> im_data<span class="token punctuation">,</span> im_height<span class="token punctuation">,</span> im_width

<span class="token keyword">def</span> <span class="token function">write_img</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> im_proj<span class="token punctuation">,</span> im_geotrans<span class="token punctuation">,</span> im_data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true"># gdal数据类型包括</span>
    <span class="token comment" spellcheck="true"># gdal.GDT_Byte,</span>
    <span class="token comment" spellcheck="true"># gdal .GDT_UInt16, gdal.GDT_Int16, gdal.GDT_UInt32, gdal.GDT_Int32,</span>
    <span class="token comment" spellcheck="true"># gdal.GDT_Float32, gdal.GDT_Float64</span>

    <span class="token comment" spellcheck="true"># 判断栅格数据的数据类型</span>
    <span class="token keyword">if</span> <span class="token string">'int8'</span> <span class="token keyword">in</span> im_data<span class="token punctuation">.</span>dtype<span class="token punctuation">.</span>name<span class="token punctuation">:</span>
        datatype <span class="token operator">=</span> gdal<span class="token punctuation">.</span>GDT_Byte
    <span class="token keyword">elif</span> <span class="token string">'int16'</span> <span class="token keyword">in</span> im_data<span class="token punctuation">.</span>dtype<span class="token punctuation">.</span>name<span class="token punctuation">:</span>
        datatype <span class="token operator">=</span> gdal<span class="token punctuation">.</span>GDT_UInt16
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        datatype <span class="token operator">=</span> gdal<span class="token punctuation">.</span>GDT_Float32

    <span class="token comment" spellcheck="true"># 判读数组维数</span>
    <span class="token keyword">if</span> len<span class="token punctuation">(</span>im_data<span class="token punctuation">.</span>shape<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
        im_bands<span class="token punctuation">,</span> im_height<span class="token punctuation">,</span> im_width <span class="token operator">=</span> im_data<span class="token punctuation">.</span>shape
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        im_bands<span class="token punctuation">,</span> <span class="token punctuation">(</span>im_height<span class="token punctuation">,</span> im_width<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> im_data<span class="token punctuation">.</span>shape

    <span class="token comment" spellcheck="true"># 创建文件</span>
    driver <span class="token operator">=</span> gdal<span class="token punctuation">.</span>GetDriverByName<span class="token punctuation">(</span><span class="token string">"GTiff"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 数据类型必须有，因为要计算需要多大内存空间</span>
    dataset <span class="token operator">=</span> driver<span class="token punctuation">.</span>Create<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> im_width<span class="token punctuation">,</span> im_height<span class="token punctuation">,</span> im_bands<span class="token punctuation">,</span> datatype<span class="token punctuation">)</span>

    dataset<span class="token punctuation">.</span>SetGeoTransform<span class="token punctuation">(</span>im_geotrans<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 写入仿射变换参数</span>
    dataset<span class="token punctuation">.</span>SetProjection<span class="token punctuation">(</span>im_proj<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 写入投影</span>

    <span class="token keyword">if</span> im_bands <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
        dataset<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WriteArray<span class="token punctuation">(</span>im_data<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 写入数组数据</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>im_bands<span class="token punctuation">)</span><span class="token punctuation">:</span>
            dataset<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WriteArray<span class="token punctuation">(</span>im_data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">del</span> dataset
<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>
    proj<span class="token punctuation">,</span> geotrans<span class="token punctuation">,</span> values<span class="token punctuation">,</span> row<span class="token punctuation">,</span> column <span class="token operator">=</span> read_img<span class="token punctuation">(</span>输入数据<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 读数据</span>
     write_img<span class="token punctuation">(</span>r<span class="token string">'输出地址'</span><span class="token punctuation">,</span> proj<span class="token punctuation">,</span> geotrans<span class="token punctuation">,</span> 输出影像名称<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#写数据</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://blog.csdn.net/qq_22472089/article/details/106589293" target="_blank">利用python读写tiff遥感影像数据</a></li>
<li><a href="https://www.osgeo.cn/python_gdal_utah_tutorial/ch05.html" target="_blank"> GDAL python教程（4）——用GDAL读取栅格数据</a></li>
<li><a href="https://www.cnblogs.com/lovebay/p/4921261.html" target="_blank">用GDAL 读写矢量数据</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>GDAL</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>GDAL</tag>
      </tags>
  </entry>
  <entry>
    <title>ArcGIS 10.2.2利用Anaconda集成scipy和pandas</title>
    <url>/posts/9de15300/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>利用Anaconda创建虚拟环境，将Anaconda里的第三方包集成到ArcGIS。</p>
<a id="more"></a>

<h1 id="一、Anaconda安装与配置"><a href="#一、Anaconda安装与配置" class="headerlink" title="一、Anaconda安装与配置"></a>一、Anaconda安装与配置</h1><p>这里是之前安装好的，Anaconda3，原博主安装的是Miniconda，效果都是一样的。</p>
<p>Miniconda安装参考：<a href="https://www.jianshu.com/p/f3d58072c85d">https://www.jianshu.com/p/f3d58072c85d</a></p>
<h1 id="二、ArcGIS与Anaconda集成"><a href="#二、ArcGIS与Anaconda集成" class="headerlink" title="二、ArcGIS与Anaconda集成"></a>二、ArcGIS与Anaconda集成</h1><p>这步是主要参考的内容</p>
<h2 id="Anaconda中创建新的python环境"><a href="#Anaconda中创建新的python环境" class="headerlink" title="Anaconda中创建新的python环境"></a>Anaconda中创建新的python环境</h2><p>（1）确定ArcGIS自带的Python版本</p>
<p>先明确ArcGIS里的python，numpy和matplotlib分别是什么版本。具体步骤为：<br> 打开ArcGIS Desktop 10.2.2，【Geoprocessing】–&gt;【Python】，输入如下代码：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span> numpy<span class="token punctuation">,</span> matplotlib
<span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>version<span class="token punctuation">,</span> numpy<span class="token punctuation">.</span>__version__<span class="token punctuation">,</span> matplotlib<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>可以看到，ArcGIS Desktop 10.2.2中得到的结果如下：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token punctuation">(</span><span class="token string">'2.7.5 (default, May 15 2013, 22:43:36) [MSC v.1500 32 bit (Intel)]'</span><span class="token punctuation">,</span> <span class="token string">'1.7.1'</span><span class="token punctuation">,</span> <span class="token string">'1.3.0'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>也就是Python 2.7.5， numpy 1.7.1，matplotlib 1.3.0<br> （2）创建虚拟python环境<br> 先将Anaconda的环境置为32bit （因为ArcGIS Desktop默认用的是32位的Python），然后再创建环境。<br> 在Anaconda Prompt窗口（<strong>右键以管理员身份运行</strong>）中，输入以下命令行，创建目录以准备自动下载和安装各种第三方包：</p>
<pre class="line-numbers language-python"><code class="language-python">set CONDA_FORCE_32BIT<span class="token operator">=</span><span class="token number">1</span>
conda create <span class="token operator">-</span>n arc1022 python<span class="token operator">=</span><span class="token number">2.7</span><span class="token punctuation">.</span><span class="token number">5</span> numpy<span class="token operator">=</span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">1</span> matplotlib<span class="token operator">=</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>这样就创建好了新的Python环境，其名称为<strong>arc1022</strong>。</p>
<blockquote>
<p>当然，如果你暂时不想安装第三方包，可以只用输入：</p>
<pre class="line-numbers language-python"><code class="language-python">conda create <span class="token operator">-</span>n arc1022<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</blockquote>
<p>默认的Python环境为<strong>base</strong>，要激活刚创建的arc1022虚拟环境，请输入<code>conda activate arc1022</code><br>然后，就可以在arc1022环境中使用conda安装各种包了。例如：</p>
<pre class="line-numbers language-python"><code class="language-python">conda install scipy
conda install pandas<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="将Anaconda里的第三方包集成到ArcGIS"><a href="#将Anaconda里的第三方包集成到ArcGIS" class="headerlink" title="将Anaconda里的第三方包集成到ArcGIS"></a>将Anaconda里的第三方包集成到ArcGIS</h2><p><strong>里所谓的集成，其实只是让ArcGIS自带的Python知道本机的哪个目录里还有合适第三方包</strong>。</p>
<p>上面的Miniconda是安装在<strong>C:\Python27\Miniconda2</strong>这个目录，并且用conda create命令创建的目录是<strong>arc1022</strong>，则所有用conda install xxx 新安装的第三方包都在下面这个目录里：</p>
<pre><code> C:\Python27\Miniconda2\envs\arc1022\Lib\site-packages</code></pre>
<p>下面把该目录告诉ArcGIS 10.2.2自带的Python 2.7.5，以便它能import该目录下的第三方包。</p>
<ol>
<li><p>创建一个后缀名为pth的文件，例如：<strong>findArc1022inMiniconda.pth</strong>，该文件里只需要一行文本：</p>
<pre><code> C:\Python27\Miniconda2\envs\arc1022\Lib\site-packages</code></pre>
<p> 这样，arcgis就知道到arc1022环境所在的目录下去找第三方包了。</p>
</li>
<li><p>将这个pth文件拷贝到ArcGIS自带Python的第三方包存放目录中，这个目录是：</p>
<pre><code>C:\Python27\ArcGIS10.2\Lib\site-packages</code></pre>
</li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.jianshu.com/p/f3d58072c85d" target="_blank">ArcGIS 10.2.2利用Anaconda集成scipy和pandas</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>arcpy</category>
      </categories>
      <tags>
        <tag>arcpy</tag>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>python中arcpy库的应用！</title>
    <url>/posts/892c256e/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>遇到的使用<code>aracpy</code> 处理数据的方法！</p>
<a id="more"></a>

<h1 id="环境变量设置"><a href="#环境变量设置" class="headerlink" title="环境变量设置"></a>环境变量设置</h1><p><code>arcpy.env.workspace</code>到底是个什么东西？</p>
<p>环境变量可以在<strong>应用程序级别</strong>以及<strong>工具级别</strong>下进行设置，应用程序级别环境设置是最高级别，也是应用于所有工具的默认设置。工具级别环境设置会直接继承来自应用程序级别的环境设置。</p>
<p>Python脚本中可以通过<code>arcpy</code>中的<code>env</code>类来获取并设置环境变量，这些变量都是读/写属性。应用程序级别和工具级别环境设置都可以在脚本中调用且都可以应用于通过脚本运行的所有工具。</p>
<p>需要注意的是，在脚本中的环境设置仅应用于当前执行的脚本。<br>脚本中最为常用的环境变量设置就是<code>arcpy.env.workspace()</code>，该变量用于定义当前脚本的工作目录（或者称为工作空间）。<strong>由于在脚本中设置了当前工作空间，脚本的其他位置也就不需要引用数据集的完整路径，这会让代码更为简洁，不过还是需要引用工作空间下的数据集名称。</strong></p>
<p>代码为例：</p>
<pre class="line-numbers language-python"><code class="language-python">arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">'d: \ Data '</span>   
Rasters <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListRasters <span class="token punctuation">(</span> <span class="token string">"*"</span><span class="token punctuation">,</span><span class="token string">' TIF '</span><span class="token punctuation">)</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>Rasters相当于获取了D:\Data目录目录中所有TIF格式的数据</p>
<p>另外一个简单的例子：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy 
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> <span class="token string">"C:/ArcpyBook/Ch6"</span> 
arcpy<span class="token punctuation">.</span>Buffer_analysis<span class="token punctuation">(</span><span class="token string">"Streams.shp"</span><span class="token punctuation">,</span><span class="token string">"Streams_Buffer.shp"</span><span class="token punctuation">,</span><span class="token string">"200 Feet"</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> arcpy<span class="token punctuation">.</span>getMessages<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>相当于对C:/ArcpyBook/Ch6目录中的Streams.shp文件进行200Feet的缓冲区分析，同时将缓冲结果保存在C:/ArcpyBook/Ch6目录下的Streams_Buffer.shp文件。</p>
<p>参考：<a href="http://zhihu.geoscene.cn/question/13958">arcpy.env.workspace到底是个什么东西？</a> </p>
<h1 id="Exists检查文件是否存在"><a href="#Exists检查文件是否存在" class="headerlink" title="Exists检查文件是否存在"></a>Exists检查文件是否存在</h1><p>语法：<code>arcpy.Exists(&lt;dataset&gt;)</code></p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">"E:\gis class\arcpy_1"</span>
fc <span class="token operator">=</span> <span class="token string">"point.shp"</span>
arcpy<span class="token punctuation">.</span>Exists<span class="token punctuation">(</span>fc<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 返回结果为true or false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Describe函数描述数据"><a href="#Describe函数描述数据" class="headerlink" title="Describe函数描述数据"></a>Describe函数描述数据</h1><p>语法：<code>&lt;variable&gt; = arcpy.Describe(&lt;input dataset&gt;)</code></p>
<pre class="line-numbers language-python"><code class="language-python">arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">"E:\gis class\arcpy_1"</span>
fc <span class="token operator">=</span> <span class="token string">"point.shp"</span>
desc <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>Describe<span class="token punctuation">(</span>fc<span class="token punctuation">)</span>       <span class="token comment" spellcheck="true"># 获取包含数据集属性的描述对象</span>
<span class="token keyword">print</span> desc<span class="token punctuation">.</span>shapeType        <span class="token comment" spellcheck="true"># 获取该要素类的形状类型</span>
<span class="token keyword">print</span> desc<span class="token punctuation">.</span>path         <span class="token comment" spellcheck="true">#获取存储路径</span>
sr <span class="token operator">=</span> desc<span class="token punctuation">.</span>spatialReference      <span class="token comment" spellcheck="true">#获取空间参考</span>
<span class="token keyword">print</span> sr<span class="token punctuation">.</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>输出结果:</p>
<pre><code>Point
E:\gis class\arcpy_1
Unknown</code></pre>
<h2 id="读取栅格数据的脚点坐标、影像名、坐标系"><a href="#读取栅格数据的脚点坐标、影像名、坐标系" class="headerlink" title="读取栅格数据的脚点坐标、影像名、坐标系"></a>读取栅格数据的脚点坐标、影像名、坐标系</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace<span class="token operator">=</span><span class="token string">"C:\Python27"</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    descRaster<span class="token operator">=</span>arcpy<span class="token punctuation">.</span>Describe<span class="token punctuation">(</span><span class="token string">"D:\\data3\\4026.0-540.0.tif"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#os.path.join(root,file)</span>
    ext<span class="token operator">=</span>descRaster<span class="token punctuation">.</span>extent
    name1<span class="token operator">=</span>descRaster<span class="token punctuation">.</span>name
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"XMin: %f"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>ext<span class="token punctuation">.</span>XMin<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"XMax: %f"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>ext<span class="token punctuation">.</span>XMax<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"YMin: %f"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>ext<span class="token punctuation">.</span>YMin<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"YMax: %f"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>ext<span class="token punctuation">.</span>YMax<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token string">"name,is,%s"</span><span class="token operator">%</span>name1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="返回数据-列表函数）"><a href="#返回数据-列表函数）" class="headerlink" title="返回数据(列表函数）"></a>返回数据(列表函数）</h1><h2 id="ListFeatureClasses函数"><a href="#ListFeatureClasses函数" class="headerlink" title="ListFeatureClasses函数"></a>ListFeatureClasses函数</h2><p><code>ListFeatureClasses</code>函数返回当前工作空间中的要素类列表</p>
<p>语法：<code>ListFeatureClasses ( { wild_card }, { feature_type }, { feature_dataset } ) </code> { }为可选参数</p>
<p>例：<code>ListFeatureClasses ( {“w*”, “point” )</code>  ——返回文件名以w开头，并且要素类型是点的所有要素类</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">"E:\gis class\arcpy_1"</span>
fclist <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListFeatureClasses<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 返回包含要素类的列表</span>
<span class="token keyword">print</span> fclist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>输出结果:</p>
<pre><code>[u'line.shp', u'point.shp']</code></pre>
<h2 id="ListRasters函数"><a href="#ListRasters函数" class="headerlink" title="ListRasters函数"></a>ListRasters函数</h2><p><code>ListRasters</code>函数返回当前工作空间中的矢量数据集列表</p>
<p>语法：<code>ListRasters ( { wild_card }, { raster_type } ) </code>  与ListFeatureClasses函数相似</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">"E:\gis class\arcpy_1"</span>
rslist <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListRaster<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">"tif"</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">#返回该工作空间中数据类型为TIFF影像的栅格数据集列表</span>
<span class="token keyword">print</span> rslist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="ListFields函数"><a href="#ListFields函数" class="headerlink" title="ListFields函数"></a>ListFields函数</h2><p><code>ListFields</code>函数返回某个要素类属性表的字段对象列表</p>
<p>语法：<code>ListFields( dataset , { wild_card }， { field_type} )</code></p>
<p>ListFields函数返回的是字段列表对象，读取列表属性要使用for循环</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">"E:\gis class\data0408"</span>
fc <span class="token operator">=</span> <span class="token string">"现状道路.shp"</span>
fieldlist <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListFields<span class="token punctuation">(</span>fc<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 返回字段列表对象，包括（字段名、别名、类型和长度）</span>
<span class="token keyword">for</span> field <span class="token keyword">in</span> fieldlist<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># ListFields函数返回的是对象，所以要使用for循环读取对象的各个属性</span>
    <span class="token keyword">print</span> <span class="token string">"field name :{0} "</span> <span class="token string">" field length : {1} "</span> <span class="token string">" filed type : {2}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>field<span class="token punctuation">.</span>name<span class="token punctuation">,</span>str<span class="token punctuation">(</span>field<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span>field<span class="token punctuation">.</span>type<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>输出结果</p>
<pre><code>field name :FID  field length : 4  filed type : OID
field name :Shape  field length : 0  filed type : Geometry
field name :Layer  field length : 254  filed type : String
field name :a  field length : 4  filed type : SmallInteger</code></pre>
<h1 id="栅格数据进行投影坐标转换"><a href="#栅格数据进行投影坐标转换" class="headerlink" title="栅格数据进行投影坐标转换"></a>栅格数据进行投影坐标转换</h1><p>将栅格数据集从一种投影变换到另一种投影。</p>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-python"><code class="language-python">ProjectRaster_management <span class="token punctuation">(</span>in_raster<span class="token punctuation">,</span> 
                          out_raster<span class="token punctuation">,</span> 
                          out_coor_system<span class="token punctuation">,</span> 
                          <span class="token punctuation">{</span>resampling_type<span class="token punctuation">}</span><span class="token punctuation">,</span>
                          <span class="token punctuation">{</span>cell_size<span class="token punctuation">}</span><span class="token punctuation">,</span> 
                          <span class="token punctuation">{</span>geographic_transform<span class="token punctuation">}</span><span class="token punctuation">,</span> 
                          <span class="token punctuation">{</span>Registration_Point<span class="token punctuation">}</span><span class="token punctuation">,</span>
                          <span class="token punctuation">{</span>in_coor_system<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参数：</p>
<ul>
<li><code>in_raster</code> :输入栅格数据集。</li>
<li><code>out_raster</code> :要创建的输出栅格数据集。</li>
<li><code>out_coor_system</code> :输入栅格待投影到的目标坐标系。默认值将基于“输出坐标系”环境设置进行设定。</li>
<li>其它为可选参数。</li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>对影像数据进行批量投影坐标转换：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
<span class="token keyword">import</span> fnmatch
<span class="token keyword">import</span> os

<span class="token keyword">def</span> <span class="token function">projecttaster</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span class="token punctuation">:</span>
    names <span class="token operator">=</span> fnmatch<span class="token punctuation">.</span>filter<span class="token punctuation">(</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'*.tif'</span><span class="token punctuation">)</span>
    src_files <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>src<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">]</span>
    out_coor_system <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token string">"WGS 1984.prj"</span><span class="token punctuation">)</span>
    dst_files <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">]</span>

    <span class="token keyword">for</span> src_file<span class="token punctuation">,</span> dst_file <span class="token keyword">in</span> zip<span class="token punctuation">(</span>src_files<span class="token punctuation">,</span> dst_files<span class="token punctuation">)</span><span class="token punctuation">:</span>
        arcpy<span class="token punctuation">.</span>ProjectRaster_management<span class="token punctuation">(</span>src_file<span class="token punctuation">,</span> dst_file<span class="token punctuation">,</span> out_coor_system<span class="token punctuation">)</span>
        <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'%s    has done!'</span><span class="token operator">%</span>src_file<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    src <span class="token operator">=</span> r<span class="token string">''</span>
    dst <span class="token operator">=</span> r<span class="token string">''</span>
    projecttaster<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参考：<a href="https://desktop.arcgis.com/zh-cn/arcmap/10.5/tools/data-management-toolbox/project-raster.htm">投影栅格</a> </p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>arcpy</category>
      </categories>
      <tags>
        <tag>arcpy</tag>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel点导入ArcGIS生成点文件</title>
    <url>/posts/9088ec4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>将excel点数据导入ArcGIS生成点文件</p>
<a id="more"></a>

<h1 id="软件导入"><a href="#软件导入" class="headerlink" title="软件导入"></a>软件导入</h1><ol>
<li><p>ArcGIS导入点数据的方法</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019143852.png" alt="image-20201019140747977" style="zoom:50%;">

<p>​    </p>
<p>选择excel文件，会提示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019143906.png" alt="image-20201019140925967" style="zoom:80%;">

<p>解决方案：</p>
<p>使用ArcGIS10.2及以上版本。【转换工具箱】中有【excel转表】工具，转换后即可打开。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019143921.png" alt="image-20201019141050954" style="zoom:80%;">

<p>选要转换的文件和转换后表保存的位置。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019143942.png" alt="image-20201019143244495" style="zoom:80%;">

<p>重新添加点数据：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019143954.png" alt="image-20201019140747977" style="zoom:80%;">

<p>点导入之后还需要添加相应的地理坐标和投影坐标：</p>
<ul>
<li><p>选择添加的点：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019150125.png" alt="image-20201019145909367" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20201019150136.png" alt="image-20201019150011408" style="zoom: 50%;">







</li>
</ul>
</li>
</ol>
<h1 id="利用python-转换："><a href="#利用python-转换：" class="headerlink" title="利用python 转换："></a>利用python 转换：</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-python"><code class="language-python">ExcelToTable<span class="token punctuation">(</span>Input_Excel_File<span class="token punctuation">,</span> Output_Table<span class="token punctuation">,</span> <span class="token punctuation">{</span>Sheet<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>数据类型</th>
</tr>
</thead>
<tbody><tr>
<td>Input_Excel_File</td>
<td>要转换的 Microsoft Excel 文件。</td>
<td>File</td>
</tr>
<tr>
<td>Output_Table</td>
<td>输出表。</td>
<td>Table</td>
</tr>
<tr>
<td>Sheet（可选）</td>
<td>要导入的 Excel 文件中特定工作表的名称。如果未指定，则使用工作簿中的第一个工作表。</td>
<td>String</td>
</tr>
</tbody></table>
<h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><p>Excel 转表 (ExcelToTable) 示例（Python 窗口）</p>
<p>以下 Python 窗口脚本演示了如何在即时模式下使用 Excel 转表 (ExcelToTable) 函数。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> <span class="token string">"c:/data"</span>
arcpy<span class="token punctuation">.</span>ExcelToTable_conversion<span class="token punctuation">(</span><span class="token string">"data.xls"</span><span class="token punctuation">,</span> <span class="token string">"outgdb.gdb"</span><span class="token punctuation">,</span> <span class="token string">"Sheet1"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>Excel 转表 (ExcelToTable) 示例 2（独立脚本）</p>
<p>将 Microsoft Excel 文件的各个工作表导入地理数据库的各个表中。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> xlrd
<span class="token keyword">import</span> arcpy
<span class="token keyword">def</span> <span class="token function">importallsheets</span><span class="token punctuation">(</span>in_excel<span class="token punctuation">,</span> out_gdb<span class="token punctuation">)</span><span class="token punctuation">:</span>
    workbook <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span>in_excel<span class="token punctuation">)</span>
    sheets <span class="token operator">=</span> <span class="token punctuation">[</span>sheet<span class="token punctuation">.</span>name <span class="token keyword">for</span> sheet <span class="token keyword">in</span> workbook<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'{} sheets found: {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>len<span class="token punctuation">(</span>sheets<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">','</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>sheets<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> sheet <span class="token keyword">in</span> sheets<span class="token punctuation">:</span>
        <span class="token comment" spellcheck="true"># The out_table is based on the input excel file name</span>
        <span class="token comment" spellcheck="true"># a underscore (_) separator followed by the sheet name</span>
        out_table <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>
            out_gdb<span class="token punctuation">,</span>
            arcpy<span class="token punctuation">.</span>ValidateTableName<span class="token punctuation">(</span>
                <span class="token string">"{0}_{1}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>in_excel<span class="token punctuation">)</span><span class="token punctuation">,</span> sheet<span class="token punctuation">)</span><span class="token punctuation">,</span>
                out_gdb<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Converting {} to {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>sheet<span class="token punctuation">,</span> out_table<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment" spellcheck="true"># Perform the conversion</span>
        arcpy<span class="token punctuation">.</span>ExcelToTable_conversion<span class="token punctuation">(</span>in_excel<span class="token punctuation">,</span> out_table<span class="token punctuation">,</span> sheet<span class="token punctuation">)</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    importallsheets<span class="token punctuation">(</span><span class="token string">'c:/data/data.xls'</span><span class="token punctuation">,</span>
                    <span class="token string">'c:/data/outgdb.gdb'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/conversion/excel-to-table.htm" target="_blank">Excel 转表 (转换)</a> </li>
<li><a href="https://blog.csdn.net/weixin_43105618/article/details/90748721" target="_blank">excel点导入arcgis生成点文件</a>  </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>ArcGIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>三大相关性检验</title>
    <url>/posts/517e3c05/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>三个相关性系数（pearson, spearman, kendall）反应的都是两个变量之间变化趋势的方向以及程度，其值范围为-1到+1，0表示两个变量不相关，正值表示正相关，负值表示负相关，值越大表示相关性越强。</p>
<p>通常情况下通过以下取值范围判断变量的相关强度：<br>0.8-1.0   极强相关<br>0.6-0.8   强相关<br>0.4-0.6   中等程度相关<br>0.2-0.4   弱相关<br>0.0-0.2   极弱相关或无相关</p>
<a id="more"></a>

<h1 id="一、皮尔森相关性系数"><a href="#一、皮尔森相关性系数" class="headerlink" title="一、皮尔森相关性系数"></a>一、皮尔森相关性系数</h1><p>person correlation coefficient(皮尔森相关性系数)</p>
<h2 id="计算公式"><a href="#计算公式" class="headerlink" title="计算公式"></a>计算公式</h2><p>$$<br>\begin{align}<br>\rho_{X, Y}&amp;  = \frac{\operatorname{cov}(X, Y)}{\sigma_{X} \sigma_{Y}} \ &amp; = \frac{E\left(\left(X-\mu_{X}\right)\left(Y-\mu_{Y}\right)\right)}{\sigma_{X} \sigma_Y} \&amp; = \frac{E(X Y)-E(X) E(Y)}{\sqrt{E\left(X^{2}\right)-E^{2}(X)} \sqrt{E\left(Y^{2}\right)-E^{2}(Y)}}<br>\end{align}<br>$$</p>
<p>统计学之三大相关性系数（pearson、spearman、kendall）<br>重点关注第一个等号后面的公式，最后面的是推导计算，暂时不用管它们。看到没有，两个变量(X, Y)的皮尔森相关性系数($ρ_{X,Y}$)等于它们之间的协方差cov(X,Y)除以它们各自标准差的乘积(σX, σY)。</p>
<p>公式的分母是变量的标准差，这就意味着计算皮尔森相关性系数时，变量的标准差不能为0（分母不能为0），也就是说你的两个变量中任何一个的值不能都是相同的。如果没有变化，用皮尔森相关系数是没办法算出这个变量与另一个变量之间是不是有相关性的。</p>
<h2 id="数据要求"><a href="#数据要求" class="headerlink" title="数据要求"></a>数据要求</h2><ul>
<li><strong>正态分布</strong><br>它是协方差与标准差的比值，并且在求皮尔森相关性系数以后，通常还会用t检验之类的方法来进行皮尔森相关性系数检验，而 t 检验是基于数据呈正态分布的假设的。 </li>
<li><strong>实验数据之间的差距不能太大</strong><br> 比如：研究人跑步的速度与心脏跳动的相关性，如果人突发心脏病，心跳为0（或者过快与过慢），那这时候我们会测到一个偏离正常值的心跳，如果我们把这个值也放进去进行相关性分析</li>
</ul>
<h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token comment" spellcheck="true">#原始数据</span>
X1<span class="token operator">=</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
Y1<span class="token operator">=</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.9</span><span class="token punctuation">,</span> <span class="token number">2.7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3.5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

X1<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#平均值# 3.5</span>
Y1<span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#2.4</span>
X1<span class="token punctuation">.</span>var<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#方差#3.5</span>
Y1<span class="token punctuation">.</span>var<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#2.9760000000000004</span>

X1<span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#标准差不能为0# 1.8708286933869707</span>
Y1<span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#标准差不能为0#1.725108692227826</span>
X1<span class="token punctuation">.</span>cov<span class="token punctuation">(</span>Y1<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#协方差#3.0600000000000005</span>

X1<span class="token punctuation">.</span>corr<span class="token punctuation">(</span>Y1<span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token string">"pearson"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#皮尔森相关性系数 #0.948136664010285</span>
X1<span class="token punctuation">.</span>cov<span class="token punctuation">(</span>Y1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>X1<span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span>Y1<span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#皮尔森相关性系数 # 0.948136664010285</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="二、斯皮尔曼相关性系数"><a href="#二、斯皮尔曼相关性系数" class="headerlink" title="二、斯皮尔曼相关性系数"></a>二、斯皮尔曼相关性系数</h1><p>spearman correlation coefficient(斯皮尔曼相关性系数)</p>
<p>斯皮尔曼相关性系数，通常也叫斯皮尔曼秩相关系数。“秩”，可以理解成就是一种顺序或者排序，那么它就是根据原始数据的排序位置进行求解，这种表征形式就没有了求皮尔森相关性系数时那些限制。</p>
<h2 id="计算公式-1"><a href="#计算公式-1" class="headerlink" title="计算公式"></a>计算公式</h2><p>$$<br>\rho_{s}=1-\frac{6 \sum d_{i}^{2}}{n\left(n^{2}-1\right)}<br>$$</p>
<p>计算过程就是：首先对两个变量（X, Y）的数据进行排序，然后记下排序以后的位置（X’, Y’），（X’, Y’）的值就称为秩次，秩次的差值就是上面公式中的 $d_i$，n就是变量中数据的个数，最后带入公式就可求解结果。举个例子吧，假设我们实验的数据如下：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201016164927.jpg" alt="20170816145416809" style="zoom:67%;">

<p>带入公式，求得斯皮尔曼相关性系数：$ρs= 1-6*(1+1+1+9)/6*35=0.657$</p>
<h2 id="数据要求-1"><a href="#数据要求-1" class="headerlink" title="数据要求"></a>数据要求</h2><p>因为是定序，所以我们不用管X和Y这两个变量具体的值到底差了多少，只需要算一下它们每个值所处的排列位置的差值，就可以求出相关性系数了。</p>
<p>而且，即便在变量值没有变化的情况下，也不会出现像皮尔森系数那样分母为0而无法计算的情况。另外，即使出现异常值，由于异常值的秩次通常不会有明显的变化（比如过大或者过小，那要么排第一，要么排最后），所以对斯皮尔曼相关性系数的影响也非常小！</p>
<p>由于斯皮尔曼相关性系数没有那些数据条件要求，适用的范围就广多了。</p>
<h2 id="实例代码"><a href="#实例代码" class="headerlink" title="实例代码"></a>实例代码</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token comment" spellcheck="true">#原始数据</span>
X1<span class="token operator">=</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
Y1<span class="token operator">=</span>pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0.9</span><span class="token punctuation">,</span> <span class="token number">2.7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3.5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#处理数据删除Nan</span>
x1<span class="token operator">=</span>X1<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span>
y1<span class="token operator">=</span>Y1<span class="token punctuation">.</span>dropna<span class="token punctuation">(</span><span class="token punctuation">)</span>
n<span class="token operator">=</span>x1<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span>
x1<span class="token punctuation">.</span>index<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>n<span class="token punctuation">)</span>
y1<span class="token punctuation">.</span>index<span class="token operator">=</span>np<span class="token punctuation">.</span>arange<span class="token punctuation">(</span>n<span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#分部计算</span>
d<span class="token operator">=</span><span class="token punctuation">(</span>x1<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>index<span class="token operator">-</span>y1<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span>
dd<span class="token operator">=</span>d<span class="token punctuation">.</span>to_series<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>sum<span class="token punctuation">(</span><span class="token punctuation">)</span>

p<span class="token operator">=</span><span class="token number">1</span><span class="token operator">-</span>n<span class="token operator">*</span>dd<span class="token operator">/</span><span class="token punctuation">(</span>n<span class="token operator">*</span><span class="token punctuation">(</span>n<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#s.corr()函数计算</span>
r<span class="token operator">=</span>x1<span class="token punctuation">.</span>corr<span class="token punctuation">(</span>y1<span class="token punctuation">,</span>method<span class="token operator">=</span><span class="token string">'spearman'</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span>p<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#0.942857142857143 0.9428571428571428</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="三、肯德尔相关性系数"><a href="#三、肯德尔相关性系数" class="headerlink" title="三、肯德尔相关性系数"></a>三、肯德尔相关性系数</h1><p>kendall correlation coefficient(肯德尔相关性系数)</p>
<p>在统计学中，肯德尔相关系数是以<a href="http://en.wikipedia.org/wiki/Maurice_Kendall">Maurice Kendall</a>命名的，并经常用希腊字母τ（tau）表示其值。肯德尔相关系数是一个用来测量两个随机变量相关性的统计值。一个肯德尔检验是一个无参数假设检验，它使用计算而得的相关系数去检验两个随机变量的统计依赖性。肯德尔相关系数的取值范围在-1到1之间，当τ为1时，表示两个随机变量拥有一致的等级相关性；当τ为-1时，表示两个随机变量拥有完全相反的等级相关性；当τ为0时，表示两个随机变量是相互独立的。</p>
<p>肯德尔相关性系数，又称肯德尔秩相关系数，它也是一种秩相关系数，不过它<strong>所计算的对象是分类变量</strong>。</p>
<h2 id="计算公式-2"><a href="#计算公式-2" class="headerlink" title="计算公式"></a>计算公式</h2><p>假设两个随机变量分别为X、Y（也可以看做两个集合），它们的元素个数均为N，两个随即变量取的第i（1&lt;=i&lt;=N）个值分别用$Xi、Yi$表示。X与Y中的对应元素组成一个元素对集合XY，其包含的元素为(Xi, Yi)（1&lt;=i&lt;=N）。当集合XY中任意两个元素$(Xi, Yi)$与$(Xj, Yj)$的排行相同时（也就是说当出现情况1或2时；情况1：Xi&gt;Xj且Yi&gt;Yj，情况2：Xi&lt;Xj且Yi&lt;Yj），这两个元素就被认为是一致的。当出现情况3或4时（情况3：Xi&gt;Xj且Yi&lt;Yj，情况4：Xi&lt;Xj且Yi&gt;Yj），这两个元素被认为是不一致的。当出现情况5或6时（情况5：Xi=Xj，情况6：Yi=Yj），这两个元素既不是一致的也不是不一致的。</p>
<p>这里有三个公式计算肯德尔相关系数的值：</p>
<p>公式一：<br>$$<br>T a u-b=\frac{C-D}{\sqrt{(N 3-N)(N 3-N 2)}}<br>$$<br>其中C表示XY中拥有一致性的元素对数（两个元素为一对）；D表示XY中拥有不一致性的元素对数。</p>
<p>注意：这一公式仅适用于集合X与Y中均不存在相同元素的情况（集合中各个元素唯一）。</p>
<p>公式二：<br>$$<br>T a u-b=\frac{C-D}{\sqrt{(N 3-N 1)(N 3-N 2)}}<br>$$</p>
<p>注意：这一公式适用于集合X或Y中存在相同元素的情况（当然，如果X或Y中均不存在相同的元素时，公式二便等同于公式一）。</p>
<p>其中C、D与公式一中相同；<br>$$<br>N 3=\frac{1}{2} N(N-1), \quad N 1=\sum_{i=1}^{s} \frac{1}{2} U_{i}\left(U_{i}-1\right) \quad, \quad N 2=\sum_{i=1}^{t} \frac{1}{2} V_{i}\left(V_{i}-1\right)<br>$$<br>N1、N2分别是针对集合X、Y计算的，现在以计算N1为例（N2的计算可以类推，在集合Y的基础上计算而得）：</p>
<p>X集合中所有重复元素个数：将X中的相同元素分别组合成小集合，s表示集合X中拥有的小集合数（例如X包含元素：1 2 3 4 3 3 2，那么这里得到的s则为2，因为只有2、3有相同元素），Ui表示第i个小集合所包含的元素数。</p>
<p>公式三：<br>$$<br>T a u-c=\frac{C-D}{\frac{1}{2} N^{2} \frac{M-1}{M}}<br>$$<br>注意：这一公式中没有再考虑集合X、或Y中存在相同元素给最后的统计值带来的影响。公式三的这一计算形式仅适用于用表格表示的随机变量X、Y之间相关系数的计算（下面将会介绍）。</p>
<p>参数M稍后会做介绍。</p>
<p>通常人们会将两个随机变量的取值制作成一个表格，例如有10个样本，对每个样本进行两项指标测试X、Y（指标X、Y的取值均为1到3）。根据样本的X、Y指标取值，得到以下二维表格（表）：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201016165002.png" alt="1551331-20200306200737036-367067751" style="zoom:80%;">

<p>由表可以得到X及Y的可以以集合的形式表示为：</p>
<p>X={1, 1, 2, 2, 2, 2, 2, 3, 3, 3}；</p>
<p>Y={1, 2, 1, 1, 2, 2, 3, 2, 3, 3}；</p>
<p>得到X、Y的集合形式后就可以使用以上的公式一或公式二计算X、Y的肯德尔相关系数了（注意公式一、二的适用条件）。</p>
<p>这里需要注意的是：公式二也可以用来计算表格形式表示的二维变量的肯德尔相关系数，不过它一般用来计算由正方形表格表示的二维变量的肯德尔相关系数，公式三则只是用来计算由长方形表格表示的二维变量的Kendall相关系数。这里给出公式三中字母M的含义，M表示长方形表格中行数与列数中较小的一个。表的行数及列数均为三。</p>
<h2 id="适用范围"><a href="#适用范围" class="headerlink" title="适用范围"></a>适用范围</h2><p>肯德尔相关系数与斯皮尔曼相关系数对数据条件的要求相同。</p>
<h2 id="代码示例-1"><a href="#代码示例-1" class="headerlink" title="代码示例"></a>代码示例</h2><pre class="line-numbers language-python"><code class="language-python">Dataframe<span class="token punctuation">.</span>corr<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'kendall'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 返回相关关系矩阵

<span class="token keyword">from</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">import</span> kendalltau

kendalltau<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> 返回系数和P值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> pandas <span class="token keyword">import</span> DataFrame
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
x<span class="token operator">=</span><span class="token punctuation">[</span>a <span class="token keyword">for</span> a <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token comment" spellcheck="true">#构造一元二次方程，非线性关系</span>
<span class="token keyword">def</span> <span class="token function">y_x</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">2</span><span class="token operator">*</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">4</span>
y<span class="token operator">=</span><span class="token punctuation">[</span>y_x<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> x<span class="token punctuation">]</span>

data<span class="token operator">=</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span>x<span class="token punctuation">,</span><span class="token string">'y'</span><span class="token punctuation">:</span>y<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true">#查看data的数据结构</span>
data<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 
   x   y
<span class="token number">0</span>  <span class="token number">0</span>   <span class="token number">4</span>
<span class="token number">1</span>  <span class="token number">1</span>   <span class="token number">6</span>
<span class="token number">2</span>  <span class="token number">2</span>  <span class="token number">12</span>
<span class="token number">3</span>  <span class="token number">3</span>  <span class="token number">22</span>
<span class="token number">4</span>  <span class="token number">4</span>  <span class="token number">36</span>

data<span class="token punctuation">.</span>corr<span class="token punctuation">(</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 
          x         y
x  <span class="token number">1.000000</span>  <span class="token number">0.967736</span>
y  <span class="token number">0.967736</span>  <span class="token number">1.000000</span>

data<span class="token punctuation">.</span>corr<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'spearman'</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 
     x    y
x  <span class="token number">1.0</span>  <span class="token number">1.0</span>
y  <span class="token number">1.0</span>  <span class="token number">1.0</span>

data<span class="token punctuation">.</span>corr<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'kendall'</span><span class="token punctuation">)</span>
Out<span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 
     x    y
x  <span class="token number">1.0</span>  <span class="token number">1.0</span>
y  <span class="token number">1.0</span>  <span class="token number">1.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>因为y经由函数构造出来，x和y的相关系数为1，但从实验结构可知pearson系数，针对非线性数据有一定的误差。 </p>
<h1 id="四、案例"><a href="#四、案例" class="headerlink" title="四、案例"></a>四、案例</h1><p>举个例子说一下这三者分别适用的情况，主要说一下kendall，毕竟其他两个上期已经讲过了。比如10个病人做检查，检查结果数据如下：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201016164956.jpg" alt="v2-543cdbc8d92f50eedf062d67c966703a_720w" style="zoom:80%;">



<p>a 身高与体重的相关性，pearson相关系数</p>
<p>b 身高与病情程度的相关性，spearman或者kendall相关系数</p>
<p>c 性别与身高的相关性，Kendall相关系数</p>
<p>d 性别与病情程度的相关性，Kendall相关系数</p>
<p>像b情况为什么两者都适用呢？是因为此时初步诊断这个变量即可以看作定类变量，也可以看作定序变量，至少我个人是这么理解的，但有兴趣和有空闲的同学不妨试验一下结果如何。</p>
<p>性别请先自行转换成数值，比如0和1，再进行计算。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://blog.csdn.net/zhaozhn5/article/details/78392220" target="">三大统计相关系数：Pearson、Spearman秩相关系数、kendall等级相关系数</a> </li>
<li><a href="https://zhuanlan.zhihu.com/p/33465271" target="">Kendall相关系数详解-案例版</a></li>
<li><a href="https://www.cnblogs.com/shona/p/12430665.html" target="">Pearson、Spearman秩相关系数、kendall等级相关系数</a> </li>
<li><a href="https://www.cnblogs.com/yjd_hycf_space/p/11537153.html" target="">三大相关系数：pearson, spearman, kendall</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>statistics</category>
      </categories>
  </entry>
  <entry>
    <title>基于ArcGIS实现山体阴影和晕渲</title>
    <url>/posts/59ed33ea/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>基于ArcGIS实现山体阴影和晕渲</p>
<a id="more"></a>

<ol>
<li><p>启动ArcMap，加载栅格数据DEM:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143145.png" alt="image-20201015142318133" style="zoom: 50%;">
</li>
<li><p>在搜索窗口中搜索“山体阴影”（或Hillshade）工具(或在ArcToolbox中打开“山体阴影”（或Hillshade）工具，输入数据源选择DEM图层，其他参数默认)</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143156.png" alt="image-20201015141539982" style="zoom: 67%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143202.png" alt="image-20201015141657853" style="zoom: 67%;">
</li>
<li><p>单击<strong>OK</strong>，生成新的栅格数据图层HillSha_dem；</p>
</li>
<li><p>在内容列表中，右键单击HillSha_dem图层，选择Properties；</p>
</li>
<li><p>打开图层属性窗口，切换到Display页，设置图层透明度为35%，如图；</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143206.png" alt="image-20201015141901592" style="zoom: 67%;">
</li>
<li><p>单击<strong>确定</strong>，关闭图层属性窗口；</p>
</li>
<li><p>在内容列表中，将HillSha_dem图层移至DEM图层上方，查看地图效果，如图</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143211.png" alt="image-20201015142030425" style="zoom: 50%;">
</li>
<li><p>在内容列表中，右键单击DEM图层，选择Properties；</p>
</li>
<li><p>打开图层属性窗口，切换到Symbology页，选择Stretched，设置Stretch Type为Min-Max，选择带有晕渲效果的色带，如图:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143221.png" alt="image-20201015142217927" style="zoom:67%;">
</li>
<li><p>单击<strong>确定</strong>，查看地图效果，如图。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143226.png" alt="image-20201015142257444" style="zoom: 50%;">





</li>
</ol>
<p>参考</p>
<ul>
<li><a href="https://malagis.com/arcgis-mapping-works-3-2-moutain-shadow-hill-shading.html" target="_blank">ArcGIS制图手册(3-2)山体阴影和晕渲</a></li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>ArcGIS</category>
      </categories>
  </entry>
  <entry>
    <title>Zotero+Word2016参考文献中英文混排，解决et al和等的问题</title>
    <url>/posts/590781cc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>[Zotero+Word]Zotero+Word2016参考文献中英文混排，解决et al和等的问题</p>
<a id="more"></a>

<h1 id="Zotero-参考文献中英文混排"><a href="#Zotero-参考文献中英文混排" class="headerlink" title="Zotero 参考文献中英文混排"></a>Zotero 参考文献中英文混排</h1><p>由于现在的csl不支持多语言，在用chinese-gb7714-1987-numeric或chinese-gb7714-2005-numeric的csl生成的参考文献英文作者超过3个后面也是“等”（正确的应该是et al），如图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930140951.jpg" alt="v2-b48002efe470182914ac230815b339d7_r" style="zoom: 67%;">

<p>下面的方法可以实现将英文作者后面的“等”替换为“et al”，而中文作者后面保持不变。</p>
<ol>
<li><p>在word 2016中依次点击开发工具-宏（如果没有开发工具，也可在视图中找到“宏”），在宏名下面的文本框中随便输入一个名称（如abc），点击“创建”。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141100.jpg" alt="v2-e42a584fa8b1d42ed7f9b60dab90d641_720w" style="zoom:80%;">
</li>
<li><p>将Sub abc到End Sub全部删除，用下面的代码替换，</p>
<pre><code>Sub deng2etal()
'
' deng2etal macro
' English等 -&gt; english, et al
'
    With Selection.Find
        .Forward = True
        .ClearFormatting
        .Text = "(&lt;[A-z]@, )等"
        With .Replacement
            .ClearFormatting
            .Text = "\1et al"
        End With
        .Wrap = wdFindStop
        .Execute Replace:=wdReplaceAll, MatchWildcards:=True
    End With
End Sub</code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141055.png" alt="v2-0e3c9f3e43300d7752daa78a3d6968a7_720w" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141050.jpg" alt="v2-213c002c0fe09b9f454447a54b93a31c_720w" style="zoom:80%;">
</li>
<li><p>然后关闭宏编辑窗口。</p>
</li>
<li><p>依次点击开发工具-宏（如果没有开发工具，也可在视图中找到“宏”），点击deng2etal，再点击“运行”，效果如图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141045.jpg" alt="v2-e2a6772979e68ab6fbe091d8def6e241_720w" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141125.jpg" alt="v2-e8733afc8f057fe91c71784dd8c87287_720w" style="zoom:80%;">



</li>
</ol>
<ol start="5">
<li><p>当然也可以为这个宏分配一个按钮，点击快速访问工具栏最后的向下箭头，选择“其他命令(M)…”，</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141108.jpg" alt="v2-5f7f465487af11498b6f958f1268f9ad_720w" style="zoom:80%;">



</li>
</ol>
<ol start="6">
<li><p>然后在“从下列位置选择命令（C)”处点击 “宏”，找到刚才创建的宏，点击“添加”，再点“确定”返回。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141112.jpg" alt="v2-ab6f9d13f65e272659dca736d1d5980c_720w" style="zoom:80%;">
</li>
<li><p>在此步骤也可以为宏设置其他按钮形状，添加后，选中这个宏，再点“修改”，选择喜欢的按钮形状，然后点“确定”返回即可。此时快速访问工具栏上就会有这个宏的按钮了，用时点击即可。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141117.jpg" alt="v2-ec9140449ffea7868fbd2b719277cafc_720w" style="zoom:80%;">

</li>
</ol>
<h1 id="其它问题"><a href="#其它问题" class="headerlink" title="其它问题"></a>其它问题</h1><ol>
<li>参考文献是用chinese-gb7714-1987-…或chinese-gb7714-2005-…等csl生成的参考文献，也就是英文作者超过3个后面是“等”。</li>
<li>其他参考文献管理软件如Mendeley，EndNote生成的参考文献同样适合。</li>
<li>要在最后定稿后再运行此宏，参考文献更新后需要重新运行。</li>
<li>方法来源于：<a href="https://zhuanlan.zhihu.com/p/53594081">滏阳河边捉蚯蚓：自定义宏批量修改csl生成参考文献书目的错误</a>。</li>
<li>“宏”可以在“视图”或“开发工具”中找到。</li>
<li>如果需要“等”前有逗号，形如：“, 等”，请参见：<a href="https://zhuanlan.zhihu.com/p/60029219">johnmy：Zotero+Word2016参考文献中英文混排，解决et al和等的问题，另一思路</a></li>
<li>2019.4.14修改：由于zotero升级，修改了“等”前面没有逗号的bug</li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li>转:<a href="https://zhuanlan.zhihu.com/p/58237038" target="_blank">[Zotero+Word]Zotero+Word2016参考文献中英文混排，解决et al和等的问题</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/53594081" target="_blank">自定义宏批量修改csl生成参考文献书目的错误</a> </li>
<li><a href="https://zhuanlan.zhihu.com/p/31326415" target="_blank">四步实现自定义 Zotero 参考文献格式</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Zotreo</tag>
      </tags>
  </entry>
  <entry>
    <title>推断统计:参数估计</title>
    <url>/posts/bd504bf7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>参数估计</p>
<a id="more"></a>

<p>注：在统计学的应用中，参数估计和假设检验是最重要的两个方面。参数估计是利用样本的信息，对总体的未知参数做估计。是典型的“以偏概全”</p>
<p>区间估计是除点估计之外的另一类参数估计。相对于点估计只给出一个具体的数值，区间估计能够给出一个估计的范围。</p>
<h1 id="一、参数及参数的估计"><a href="#一、参数及参数的估计" class="headerlink" title="一、参数及参数的估计"></a>一、参数及参数的估计</h1><p><strong>参数</strong>是总体分布中的参数，反映的是总体某方面特征的量。例如：合格率，均值，方差，中位数等。<strong>参数估计</strong>问题是利用从总体抽样得到的信息来估计总体的某些参数或者参数的某些函数。</p>
<h2 id="估计值与估计量"><a href="#估计值与估计量" class="headerlink" title="估计值与估计量"></a>估计值与估计量</h2><h2 id="问题的一般提法"><a href="#问题的一般提法" class="headerlink" title="问题的一般提法"></a>问题的一般提法</h2><p>设有一个统计总体，总体的分布函数为 $F(x,θ)$，其中θ为未知参数。现从该总体取样本 $X_{1}, X_{2}, \ldots, X_{n}$，要依据样本对参数θ作出估计，或估计θ的某个已知函数 $g(θ)$。这类问题称为参数估计。</p>
<h2 id="参数估计分类"><a href="#参数估计分类" class="headerlink" title="参数估计分类"></a>参数估计分类</h2><ul>
<li>点估计，其中点估计又可以分为矩估计和最大似然估计；</li>
<li>区间估计</li>
</ul>
<p>例如，估计降雨量：预计今年的降雨量为550mm，这是点估计；预计今年的降雨量为500 - 600mm，这是区间估计。</p>
<h1 id="二、点估计"><a href="#二、点估计" class="headerlink" title="二、点估计"></a>二、点估计</h1><p><strong>点估计（Point estimation）</strong></p>
<p><strong>点估计</strong>也称<strong>定值估计</strong>，它是以<a href="https://wiki.mbalib.com/wiki/%E6%8A%BD%E6%A0%B7">抽样</a>得到的<a href="https://wiki.mbalib.com/wiki/%E6%A0%B7%E6%9C%AC%E6%8C%87%E6%A0%87">样本指标</a>作为<a href="https://wiki.mbalib.com/wiki/%E6%80%BB%E4%BD%93%E6%8C%87%E6%A0%87">总体指标</a>的估计量，并以样本指标的实际值直接作为总体未知参数的估计值的一种推断方法。 </p>
<p>点估计的方法有<a href="https://wiki.mbalib.com/w/index.php?title=%E7%9F%A9%E4%BC%B0%E8%AE%A1%E6%B3%95&amp;action=edit">矩估计法</a>、<a href="https://wiki.mbalib.com/wiki/%E9%A1%BA%E5%BA%8F%E7%BB%9F%E8%AE%A1%E9%87%8F%E6%B3%95">顺序统计量法</a>、<a href="https://wiki.mbalib.com/wiki/%E6%9C%80%E5%A4%A7%E4%BC%BC%E7%84%B6%E6%B3%95">最大似然法</a>、<a href="https://wiki.mbalib.com/wiki/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95">最小二乘法</a>等。</p>
<h2 id="矩估计"><a href="#矩估计" class="headerlink" title="矩估计"></a>矩估计</h2><p>在<a href="https://wiki.mbalib.com/wiki/%E7%BB%9F%E8%AE%A1%E5%AD%A6">统计学</a>中，矩是指以期望为基础而定义的数字特征，一般分为原点矩和中心矩。</p>
<p>设 $X$ 为<a href="https://wiki.mbalib.com/wiki/%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F">随机变量</a>，对任意正整数k，称 $E\left(X^{k }\right)$ 为随机变量 $X$ 的 k 阶原点矩，记为：<br>$$<br>m_k = E\left(X^{k }\right)<br>$$<br>当k＝1时，<br>$$<br>m_1 = E(X) = \mu<br>$$<br><strong>可见一阶原点矩为随机变量X的数学期望</strong>。</p>
<p>把 $C_{k }=E[X-E(X)]^{k}$  称为以$E(X)$为中心的k阶中心矩。</p>
<p>显然，当k＝2时<br>$$<br>C_{2 }=E[X-E(X)]^{2}<br>$$<br>可见二阶中心矩为随机变量X的<a href="https://wiki.mbalib.com/wiki/%E6%96%B9%E5%B7%AE">方差</a>。</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200601131841.png"></center>

<p>矩估计法简便、直观，比较常用，但是矩估计法也有其局限性。首先，它要求总体的k阶原点矩存在，若不存在则无法估计；其次，矩估计法不能充分地利用估计时已掌握的有关总体分布形式的信息。</p>
<p>通常设 $θ$ 为总体X的待估计参数，一般用样本 $X_{1}, X_{2}, \cdots, X_{n}$  构成一个统计量 $\hat{\theta}=\hat{\theta}\left(X_{1}, X_{2}, \Lambda, X_{n}\right)$ 来估计 $θ$ ，则称 $\hat{\theta}$ 为θ的<strong>估计量</strong>。对于样本的一组数值 $x_{1}, x_{2}, \cdots, x_{n}$ 称θ的<strong>估计值</strong>。于是点估计即是寻求一个作为待估计参数θ的估计量  $\hat{\theta}(x_{1}, x_{2}, \cdots, x_{n})$ 的问题。但是必须注意，对于样本的不同数值，估计值是不相同的。</p>
<h2 id="极大似然估计"><a href="#极大似然估计" class="headerlink" title="极大似然估计"></a>极大似然估计</h2><p><strong>最大似然估计</strong>（英语：maximum likelihood estimation，缩写为MLE），也称<strong>极大似然估计</strong></p>
<p>最大似然估计的目的就是：利用已知的样本结果，反推最有可能（最大概率）导致这样结果的参数值。</p>
<p>原理：极大似然估计是建立在极大似然原理的基础上的一个统计方法，是概率论在统计学中的应用。极大似然估计提供了一种给定观察数据来评估模型参数的方法，即：“模型已定，参数未知”。通过若干次试验，观察其结果，利用试验结果得到某个参数值能够使样本出现的概率为最大，则称为极大似然估计。</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200601163935.png"></center>

<h3 id="如果总体X为离散型"><a href="#如果总体X为离散型" class="headerlink" title="如果总体X为离散型"></a>如果总体X为离散型</h3><p>假设分布率为 $P=p(x ; \theta)$，x 是发生的样本，$θ$ 是代估计的参数，$p(x ; \theta)$表示估计参数为θ时，发生x的的概率。</p>
<p>那么当我们的样本值为：$x_{1}, x_{2}, \ldots, x_{n}$ 时，<br>$$<br>\begin{equation}L(\theta)=L\left(x_{1}, x_{2}, \ldots, x_{n} ; \theta\right)=\prod_{i=1}^{n} p\left(x_{i} ; \theta\right)\end{equation}<br>$$<br>其中$L(θ)$ 成为样本的似然函数。</p>
<p>假设 </p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928110243.svg" alt="MommyTalk1601256515259" style="zoom:98%;">

<p>有 $\hat{\theta}$ 使得$ L(θ)$  的取值最大，那么  $\hat{\theta}$  就叫做参数 $\theta$ 的极大似然估计值。</p>
<h3 id="如果总体X为连续型"><a href="#如果总体X为连续型" class="headerlink" title="如果总体X为连续型"></a>如果总体X为连续型</h3><p>基本和上面类似，只是概率密度为 $f(x ; \theta)$ ，替代p。<br>$$<br>\begin{equation}L(\theta)=\prod_{i=1}^{n} f\left(x_{i} ; \theta\right)\end{equation}<br>$$<br>解法</p>
<ol>
<li>构造似然函数 $L(θ)$ </li>
<li>取对数：$lnL(θ)$</li>
<li>求导，计算极值</li>
<li>解方程，得到 $θ$ </li>
</ol>
<h2 id="点估计的评价"><a href="#点估计的评价" class="headerlink" title="点估计的评价"></a>点估计的评价</h2><p>由于存在不同的方法对总体中的未知参数进行估计，利用这些不同的方法得到的估计值也不同。因此就涉及到如何评价不同估计量的好坏的问题。</p>
<p>常用的评价准则有以下四条：</p>
<ul>
<li>无偏性准则</li>
<li>有效性准则</li>
<li>均方误差准则</li>
<li>相合性准则</li>
</ul>
<h3 id="无偏性准则"><a href="#无偏性准则" class="headerlink" title="无偏性准则"></a>无偏性准则</h3><p>无偏性是通过比较参数和参数估计量的期望来判断的。</p>
<p><strong>定义：</strong>若参数θ的估计值 $\hat{\theta}=\hat{\theta}\left(X_{1}, X_{2}, \ldots, X_{n}\right)$ 满足<br>$$<br>E(\hat{\theta})=\theta<br>$$<br>则称$\hat{\theta}$是θ的一个无偏估计量。</p>
<p>若$E(\hat{\theta}) \neq \theta$ ，那么$|E(\hat{\theta})-\theta|$ 称为估计量$\hat{\theta}$ 的偏差，若$\lim _{n \rightarrow \infty} E(\hat{\theta})=\theta$ ，则称是$\hat{\theta}$的$\theta$渐进无偏估计量。</p>
<p><strong>无偏性的统计意义：</strong></p>
<p>无偏性的统计意义是指在大量重复试验下，由$\hat{\theta}\left(X_{1}, X_{2}, \ldots, X_{n}\right)$ 给出的估计的平均值恰好是θ，从而无偏性保证了没$\hat{\theta}$有系统误差。 </p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928110403.png" alt="image-20200928104921265" style="zoom:80%;">

<h3 id="有效性"><a href="#有效性" class="headerlink" title="有效性"></a>有效性</h3><p>如果两种方法得到的结果都是无偏估计，那么这两种方法怎么区分好坏呢？这时候就可以用到有效性了。有效性是根据方差来判断估计值的好坏，方差较小的无偏估计量是一种更有效的估计量。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928110411.png" alt="image-20200928105055408" style="zoom:67%;">

<h3 id="均方误差"><a href="#均方误差" class="headerlink" title="均方误差"></a>均方误差</h3><p>在实际应用中，均方误差准则比无偏性准则更重要！</p>
<p><strong>定义：</strong>设$X_{1}, X_{2}, \ldots, X_{n}$ 是从带参数θ的总体中抽出的样本，要估计θ，若采用$\hat{\theta}$作为参数θ的点估计，则其误差为.$\hat{\theta}-\theta$ 这个误差随样本$X_{1}, X_{2}, \ldots, X_{n}$的具体取值而定，也是随机的，因而其本身无法取为优良性指标. 我们取它的平方以消除符号，然后取均值，可得估计量$\hat{\theta}$的均方误差（误差平方的平均），<br>$$<br>E\left[(\hat{\theta}-\theta)^{2}\right]<br>$$<br>记为 $\operatorname{MSE}(\hat{\theta})$, 若$\hat{\theta}$是θ的无偏估计，则有$\operatorname{MSE}(\hat{\theta})=D(\hat{\theta})$</p>
<p>均方误差作为$\hat{\theta}$误差大小从整体角度的一个衡量，这个量越小，就表示$\hat{\theta}$的误差平均来说比较小，因而也就越优. 由定义可以看出来，均方误差小并不能保证$\hat{\theta}$在每次使用时一定给出小的误差，它有时也可以有较大的误差，但这种情况出现的机会比较少.</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928110420.png" alt="image-20200928105820791">

<h3 id="相合性"><a href="#相合性" class="headerlink" title="相合性"></a>相合性</h3><h1 id="三、区间估计"><a href="#三、区间估计" class="headerlink" title="三、区间估计"></a>三、区间估计</h1><p>用点估计 $\hat{\theta}\left(X_{1}, X_{2}, \ldots, X_{n}\right)$ 来估计总体的未知参数 $\theta$ ，一旦我们获得了样本观察值  $\left(x_{1}, x_{2}, \ldots, x_{n}\right)$</p>
<p>将它代入   $\hat{\theta}\left(X_{1}, X_{2}, \ldots, X_{n}\right)$  即可得到 $θ$ 的一个估计值。这很直观，也很便于使用。但是，点估计值只提供了$ θ$ 的一个近似值，并没有反映这种近似的精确度。同时，由于 $θ$ 本身是未知的，我们也无从知道这种估计的误差大小。因此，我们希望估计出一个真实参数所在的范围，并希望知道这个范围以多大的概率包含参数真值，这就是参数的区间估计问题。</p>
<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>设总体 $X \sim F(x ; \theta)$ ，$\theta$ 是待估计参数，若对给定的 $\alpha (0&lt;\alpha &lt;1)$ , 存在两个统计量 ：$\underline{\theta}=\underline{\theta}\left(X_{1}, X_{2}, \cdots, X_{n}\right), \quad \bar{\theta}=\bar{\theta}\left(X_{1}, X_{2}, \cdots, X_{n}\right)$ 使得 $P(\underline{\theta}&lt;\theta&lt;\overline{\boldsymbol{\theta}})=1-\alpha, \quad \boldsymbol{\theta} \in \Theta$ 则称随机区间 $(\underline{\theta}, \bar{\theta})$为 $\theta$ 的置信度为 $1-\alpha$ 的置信区间， $\underline{\theta}, \bar{\theta}$  分别成为置信下限和置信上限， $1-\alpha$ 成为置信度或置信水平。 </p>
<p>区间估计的几点说明：</p>
<ul>
<li>置信区间的长度  $\bar{\theta}-\underline{\theta}$  反映了<strong>估计的精度</strong>，  $\bar{\theta}-\underline{\theta}$  越小，估计精度越高。</li>
<li>$\alpha$ 反映了估计的可信度。$\alpha$ 越小，$1-\alpha$ 越大，估计的可信度越高；但通常会导致   $\bar{\theta}-\underline{\theta}$   增大。从而导致估计的精度降低。</li>
<li>$\alpha$ 给定后，置信区间的选取不唯一，通常选取 $\bar{\theta}-\underline{\theta}$   最小的区间。</li>
</ul>
<h2 id="置信区间的含义"><a href="#置信区间的含义" class="headerlink" title="置信区间的含义"></a>置信区间的含义</h2><p>以$\alpha=0.01$为例，此时置信度为99。假设反复抽取样本1000次，则得到1000个随机区间$(\underline{\theta}, \bar{\theta})$  ,在这1000个区间中，包含值的大约有990个，而不包含 $\theta$ 值的大约有10个。</p>
<h2 id="统计量"><a href="#统计量" class="headerlink" title="统计量"></a>统计量</h2><p>统计量的概念存在于样本中，是对样本某个指标的概括，例如上面例子中选出来的100位学生的平均身高就是一个统计量。统计量区别于”个体量”，具有以下两个特点：</p>
<ul>
<li>不包含任何未知数；</li>
<li>包含所有样本的信息。</li>
</ul>
<p>因此只要样本确定，统计量的值就可以直接计算出来。例如一旦选定100位学生，他们的平均身高就可以计算出来。</p>
<p><strong>定义</strong></p>
<p>样本的不包含任何未知参数的函数。通常可以通过构造统计量的方式，从样本中提取有用的信息来研究总体的分布以及各种特征数。</p>
<p>常用统计量：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928110749.svg" alt="MommyTalk1601258070766">

<p>从上面可以看到：样本的均值等于样本的1阶原点矩；但是样本的方差不等于样本的2阶中心距（在总体中这两者是相等的）；</p>
<p><strong>用统计量估计总体的数字特征</strong></p>
<p>当总体数字特征未知时，</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928110756.svg" alt="MommyTalk1601260653628">

<p>以上估计的理论基础就是大数定律。值得注意的是，总体的均值μ是一个数，可能已知，也可能未知；而样本均值 $\bar{X}$是一个随机变量，依赖于样本值。</p>
<p>统计量的一些特点：</p>
<ul>
<li><p>统计量可以用于对总体中的未知参数进行点估计；</p>
</li>
<li><p>有些统计量的分布是明确的，例如“三大统计分布”所代表的统计量；</p>
<p>“三大抽样分布”都是统计量的分布，这些统计量的分布形式是明确的（有具体的数学公式，不包含未知参数），这也是为什么这三类分布在统计学中如此重要的原因之一。因为事实上大部分的统计量要么很难确定其分布，要么含有未知参数。</p>
</li>
</ul>
<h2 id="枢轴量"><a href="#枢轴量" class="headerlink" title="枢轴量"></a>枢轴量</h2><p>定义：设总体 $X$ 有概率密度（或分布律）$f(x;θ)$ ，其中 $θ$ 是待估的未知参数。设 $X_1,…,X_n$ 是一个样本，记：<br>$$<br>\begin{equation}G=G\left(X_{1}, \ldots, X_{n} ; \theta\right)\end{equation}<br>$$<br>为样本和待估参数 $θ$ 的函数，如果 $G$ 的分布已知，不依赖于任何参数，就称 $G$ 为枢轴量。</p>
<p>由上述定义可以看出枢轴量的几个特点：</p>
<ul>
<li>与某个待估参数有关（事实上枢轴量法主要被用于未知参数的区间估计）；</li>
<li>本身含有未知参数（待估参数），因此不具有“可观察性”，也就是说即使选定了样本也无法计算出确定的值；</li>
<li>其分布是明确的（有具体的数学公式，不包含未知参数）。</li>
</ul>
<p>一个比较常见的例子：均值或方差未知的正态分布转换成标准正态分布时，随机变量中还是包含未知参数，但是其分布中却不包含任何未知参数。因此标准化之后的随机变量是一个枢轴量。</p>
<p>一般正态分布与标准正态分布之间的关系： 当 $X \sim N(\mu, \sigma) \text { 时, } \frac{X-\mu}{\sigma} \sim N(0,1)$ </p>
<h3 id="枢轴量法需要解决的问题"><a href="#枢轴量法需要解决的问题" class="headerlink" title="枢轴量法需要解决的问题"></a>枢轴量法需要解决的问题</h3><p>枢轴量法作为区间估计的主要方法，<strong>要求解的问题</strong>如下：</p>
<p>设总体X的分布含有未知参数 $\theta, X_{1}, \ldots, X_{n}$ 是一次抽样得到的样本。</p>
<p>如何给出θ的置信水平为1−α的双侧置信区间(或单侧置信上限、单侧置信下限)？</p>
<p><strong>求解步骤：</strong></p>
<p> (1) 找一个随机变量 $G$，该随机变量需要满足以下两个条件： </p>
<ul>
<li>分布已知；</li>
<li>是总体未知参数θ和样本$X_{1}, \ldots, X_{n}$ 的函数</li>
</ul>
<p>(2) 找$a&lt;b$，使 $P(a&lt;G&lt;b)≥1−α$ </p>
<p>(3)从  $a \lt G \lt b$ 解出 $\hat{\theta}_L \lt \theta \lt \hat{\theta}_U$</p>
<p> $(\hat{\theta}_L , \hat{\theta}_U)$就是置信度为1−α的双侧置信区间。</p>
<h3 id="边界a-b的选择"><a href="#边界a-b的选择" class="headerlink" title="边界a,b的选择"></a><strong>边界a,b的选择</strong></h3><p>对于枢轴量G，满足P(a&lt;G&lt;b)≥1−α的a,b可能有很多，这时可以参考下面的原则来进行选择：</p>
<p>(1) 根据Neyman原则：求a和b使得区间长度最短；</p>
<p>(2) 如果最优解不存在或比较复杂，对连续总体，常取a和b满足 $P\left(G\left(X_{1}, \ldots, X_{n} ; \theta\right) \leq a\right)=P\left(G\left(X_{1}, \ldots, X_{n} ; \theta\right) \geq b\right)=\alpha / 2$ </p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928111014.png" alt="image-20200928100912717">



<h3 id="枢轴量的构造"><a href="#枢轴量的构造" class="headerlink" title="枢轴量的构造"></a>枢轴量的构造</h3><p>枢轴量$G(X1,…,Xn;θ)$的构造，通常从θ的点估计 $\hat{\theta}$(如极大似然估计，矩估计等)出发，根据θ的分布(或包含θ的函数的分布)进行改造而得。</p>
<h3 id="常见枢轴量"><a href="#常见枢轴量" class="headerlink" title="常见枢轴量"></a>常见枢轴量</h3><p>从区间估计的求解流程和上面的例子可以看出来，如果要使用枢轴量法来作区间估计，找到合适的枢轴量是关键。在上面的例子中，由于总体的分布已知，因此对总体的均值 μ 进行估计的时候，先用样本均值  $\bar{X}$来进行点估计，然后再使用样本均值构造服从 t 分布的枢轴量来确定区间的边界a,b.</p>
<ul>
<li>下面所有的枢轴量都是跟<strong>总体均值和方差</strong>有关的，因此我们能估计的也仅限于这两个参数；</li>
<li>总体方差已知和未知是两种不同的情况，构造出来的枢轴量属于不同的分布；</li>
<li>具有两个正态总体时，可以估计两个不同总体均值的差或方差的比值.</li>
</ul>
<h4 id="单个正态总体-N-μ-σ-2-情形"><a href="#单个正态总体-N-μ-σ-2-情形" class="headerlink" title="单个正态总体 $N(μ,σ^2)$情形"></a><strong>单个正态总体 $N(μ,σ^2)$情形</strong></h4><p><strong>(1) μ的枢轴量：</strong></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928111028.svg" alt="MommyTalk1601259495972">

<p><strong>(2) $σ^2$的枢轴量：</strong></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928111032.svg" alt="MommyTalk1601259614208">



<h4 id="二个正态总体-N-left-mu-1-sigma-1-2-right-N-left-mu-2-sigma-2-2-right-的情形"><a href="#二个正态总体-N-left-mu-1-sigma-1-2-right-N-left-mu-2-sigma-2-2-right-的情形" class="headerlink" title="二个正态总体 $N\left(\mu_{1}, \sigma_{1}^{2}\right), N\left(\mu_{2}, \sigma_{2}^{2}\right)$)的情形"></a><strong>二个正态总体 $N\left(\mu_{1}, \sigma_{1}^{2}\right), N\left(\mu_{2}, \sigma_{2}^{2}\right)$)的情形</strong></h4><p><strong>(1) $μ_1−μ_2$的枢轴量</strong>：</p>
<ul>
<li><p>$σ_1^2,σ_2^2$ 已知时</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928111038.svg" alt="MommyTalk1601259904271">
</li>
<li><p>$σ_1^2=σ_2^2$ 已知时</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928111046.svg" alt="MommyTalk1601259990129">

<p>其中  $S_{w}^{2}=\frac{\left(n_{1}-1\right) S_{1}^{2}+\left(n_{2}-1\right) S_{2}^{2}}{n_{1}+n_{2}-2}, S_{w}=\sqrt{S_{w}^{2}}$</p>
</li>
</ul>
<p><strong>(2) $\frac{\sigma_{1}^{2}}{\sigma_{2}^{2}}$ 的枢轴量</strong></p>
<p> $σ_1,σ_2$ 未知时</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928111051.svg" alt="MommyTalk1601260176899">



<h4 id="其他总体均值的区间估计"><a href="#其他总体均值的区间估计" class="headerlink" title="其他总体均值的区间估计"></a>其他总体均值的区间估计</h4><p>设总体X的均值为μ，方差为 $σ^2$，非正态分布或不知分布形式. 样本为 $X_{1}, \ldots, X_{n}$</p>
<p>当n充分大(一般n&gt;30)时，有中心极限定理知， $\bar{X} \sim N\left(\mu, \sigma^{2} / n\right)$ , 因此：<br>$$<br>\frac{\bar{X}-\mu}{\sigma / \sqrt{n}} \sim N(0,1)<br>$$<br>以上分布为近似分布</p>
<ul>
<li><p>当 $σ^2$ 已知时，μ的置信水平为 $1−α$ 的近似置信区间为<br>$$<br>\begin{equation}\left(\bar{X}-z_{\alpha / 2} \sigma / \sqrt{n}, \bar{X}+z_{\alpha / 2} \sigma / \sqrt{n}\right)\end{equation}<br>$$</p>
</li>
<li><p>当 $σ^2$ 未知时，以样本方差 $S^2$代入，得近似置信区间为<br>$$<br>\left(\bar{X}-z_{\alpha / 2} S / \sqrt{n}, \bar{X}+z_{\alpha / 2} S / \sqrt{n}\right)<br>$$</p>
</li>
</ul>
<h2 id="统计量-vs-枢轴量"><a href="#统计量-vs-枢轴量" class="headerlink" title="统计量 vs 枢轴量"></a>统计量 vs 枢轴量</h2><p>再次比较一下这两个量的异同：</p>
<ul>
<li>枢轴量和统计量都是样本的函数，但是枢轴量中还包含未知参数（待估计参数）；</li>
<li>枢轴量和统计量的分布都是某种抽样分布，与样本本身所属的总体分布不同；</li>
<li>枢轴量的分布不依赖于任何未知参数，统计量的分布常依赖于未知参数；</li>
<li>如果将枢轴量中的未知参数用某个已知的估计量替代，那么枢轴量就变成统计量了；</li>
<li>统计量常用于点估计和假设检验；</li>
<li>枢轴量常用于区间估计。</li>
</ul>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200928111126.png" alt="image-20200928104105993">



<h1 id="四、一个总体参数的区间估计"><a href="#四、一个总体参数的区间估计" class="headerlink" title="四、一个总体参数的区间估计"></a>四、一个总体参数的区间估计</h1><h2 id="1、总体均值的区间估计"><a href="#1、总体均值的区间估计" class="headerlink" title="1、总体均值的区间估计"></a>1、总体均值的区间估计</h2><h3 id="正态总体、方差已知，或非正态总体、大样本"><a href="#正态总体、方差已知，或非正态总体、大样本" class="headerlink" title="正态总体、方差已知，或非正态总体、大样本"></a>正态总体、方差已知，或非正态总体、大样本</h3><img src="https://raw.githubusercontent.com/HG95/image/master/20200928153501.png" alt="image-20200928153407823" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200928153507.png" alt="image-20200928153435384" style="zoom:80%;">



<p>例题：</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200608232103.png"></center>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200608232314.png"></center>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200608232445.png"></center>

<h3 id="正态总体、方差未知、小样本"><a href="#正态总体、方差未知、小样本" class="headerlink" title="正态总体、方差未知、小样本"></a>正态总体、方差未知、小样本</h3><img src="https://raw.githubusercontent.com/HG95/image/master/20200928153901.png" alt="image-20200928153850414" style="zoom:80%;">

<p>例题：</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200608232828.png"></center>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><img src="https://raw.githubusercontent.com/HG95/image/master/20200928143559.png" alt="image-20200928141153732" style="zoom: 50%;">

<h2 id="2、总体比例的区间估计"><a href="#2、总体比例的区间估计" class="headerlink" title="2、总体比例的区间估计"></a>2、总体比例的区间估计</h2><center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200601174256.png"></center>

<p>例题：</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200608231343.png"></center>



<h2 id="3、总体方差分布的区间估计"><a href="#3、总体方差分布的区间估计" class="headerlink" title="3、总体方差分布的区间估计"></a>3、总体方差分布的区间估计</h2><center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200601174420.png"></center>

<p>例题:</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200608233029.png"></center>

<h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p align="center">一个总体参数的估计及所使用的分布</p>

<img src="https://raw.githubusercontent.com/HG95/image/master/20200928143539.png" alt="待估参数" style="zoom: 50%;">

<h1 id="五、两个总体参数的区间估计"><a href="#五、两个总体参数的区间估计" class="headerlink" title="五、两个总体参数的区间估计"></a>五、两个总体参数的区间估计</h1><p>对于两个总体，所关心的参数主要有两个总体的均值之差 $\mu_1-\mu_2$ , 两个总体的比例之差 $\pi_1 -\pi_2$ 、两个总体的方差之比 $\sigma_1^2 / \sigma_2^2$ 等。</p>
<h2 id="1、两个总体均值之差区间估计"><a href="#1、两个总体均值之差区间估计" class="headerlink" title="1、两个总体均值之差区间估计"></a>1、两个总体均值之差区间估计</h2><p>设两个总体的均值分别为 $\mu_1$ 和 $\mu_2$ .从两个总体中分别抽取样本量为$n_1$ 和 $n_1$ 的两个随机样本，其样本均值分别为 $\bar{x_1}$ 和 $\bar{x_2}$ 。两个总体均值之差 $μ_1 - μ_2$ 的估计量显然是两个样本的均值之差 $\bar{x_1}-\bar{x_2}$ 。</p>
<h3 id="两个总体均值之差的估计：独立样本"><a href="#两个总体均值之差的估计：独立样本" class="headerlink" title="两个总体均值之差的估计：独立样本"></a>两个总体均值之差的估计：独立样本</h3><h4 id="1-大样本的估计"><a href="#1-大样本的估计" class="headerlink" title="(1) 大样本的估计"></a>(1) 大样本的估计</h4><center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609084316.png"></center>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200601190444.png"></center>

<h4 id="2-小样本的估计"><a href="#2-小样本的估计" class="headerlink" title="(2) 小样本的估计"></a>(2) 小样本的估计</h4><p>在两个样本都为小样本的情况下，为估计两个总体的均值之差，需要作出以下</p>
<p>假定:</p>
<ul>
<li>两个总体都服从正态分布。</li>
<li>两个随机样本独立地分别抽自两个总体。</li>
</ul>
<p>在上述假定下，无论样本量的大小，两个样本均值之差都服从正态分布。<strong>当两个总体方差 $\sigma_1^2$ 和  $\sigma_1^2$  已知时</strong>，可用式(7.13) 建立两个总体均值之差的置信区间。<strong>当 $\sigma_1^2$ 和  $\sigma_1^2$  未知时</strong>，有以下几种情况。</p>
<ol>
<li><p>当两个总体的方差 $\sigma_1^2$ 和  $\sigma_1^2$  未知但相等时</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609085147.png"></center>

<p>例题：</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609085417.png"></center>



</li>
</ol>
<ol start="2">
<li><p>当两个总体的方差 $\sigma_1^2$ 和  $\sigma_1^2$  未知并且不相等时</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609085807.png"></center>

<p>例题：</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609085958.png"></center>



</li>
</ol>
<h3 id="两个总体均值之差的估计：匹配样本"><a href="#两个总体均值之差的估计：匹配样本" class="headerlink" title="两个总体均值之差的估计：匹配样本"></a>两个总体均值之差的估计：匹配样本</h3><p>在例7.7中使用的是两个独立的样本，但使用独立样本来估计两个总体均值之差存在着潜在的弊端。比如，在对每种方法随机指派12个工人时，偶尔可能会将技术比较差的12个工人指定给方法1，而将技术较好的12个工人指定给方法2.这种不公平的指派可能会掩盖两种方法组装产品所需时间的真正差异。为解决这一问题，可以使用<strong>匹配样本</strong>(matchedsample).即一个样本中的数据与另一个样本中的数据相对应。比如，先指定12个工人用第-一种方法组装产品，然后再让这12个工人用第二种方法组装产品，这样得到的两种方法组装产品的数据就是匹配数据。匹配样本可以消除由于样本指定的不公平造成的两种方法组装时间上的</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609090607.png"></center>

<p>例题：</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609090730.png"></center>

<h2 id="2、两个总体比例之差的区间估计"><a href="#2、两个总体比例之差的区间估计" class="headerlink" title="2、两个总体比例之差的区间估计"></a>2、两个总体比例之差的区间估计</h2><center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609091045.png"></center>

<p>例题：</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609091403.png"></center>

<h2 id="3、两个总体方差比的区间估计"><a href="#3、两个总体方差比的区间估计" class="headerlink" title="3、两个总体方差比的区间估计"></a>3、两个总体方差比的区间估计</h2><center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609091726.png"></center>

<p>例题：</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609092057.png"></center>



<h1 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h1><img src="https://raw.githubusercontent.com/HG95/image/master/20200928154351.png" alt="image-20200928152819789" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200928154344.png" alt="image-20200928152849259" style="zoom:80%;"><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>statistics</category>
      </categories>
  </entry>
  <entry>
    <title>平均值，标准差，方差，协方差、相关系数的区别与联系</title>
    <url>/posts/dc5d043f/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>平均值，标准差，方差，协方差都属于统计数学；期望属于概率数学。</p>
<a id="more"></a>

<h1 id="均值-期望"><a href="#均值-期望" class="headerlink" title="均值(期望)"></a>均值(期望)</h1><p>在<a href="https://zh.wikipedia.org/wiki/%E6%A6%82%E7%8E%87%E8%AE%BA">概率论</a>和<a href="https://zh.wikipedia.org/wiki/%E7%BB%9F%E8%AE%A1%E5%AD%A6">统计学</a>中，一个离散性<a href="https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F">随机变量</a>的<strong>期望值</strong>（或<strong>数学期望</strong>，亦简称<strong>期望</strong>，物理学中称为<strong>期待值</strong>）是试验中每次可能的结果乘以其结果概率的<a href="https://zh.wikipedia.org/wiki/%E5%92%8C">总和</a>。</p>
<p>均值描述的是样本集合的中间点。</p>
<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>设$P(x)$是一个离散概率分布函数，自变量的取值范围为{ $x_{1}, x_{2},, x_{n}$}。 </p>
<p>其期望被定义为：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222645.svg" alt="MommyTalk1599817844027" style="zoom:80%;">

<p>设 $p(x)$是一个连续概率密度函数。其期望为：<br>$$<br>\begin{array}{c}<br>E(x) = \int_{-\infty}^{+\infty} x p(x) d x<br>\end{array}<br>$$</p>
<h2 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h2><p>1、线性运算规则</p>
<p>期望服从线性性质（可以很容易从期望的定义公式中导出）。因此线性运算的期望等于期望的线性运算：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222658.svg" alt="MommyTalk1599818126754">

<p>2、乘积的期望:</p>
<p>一般来说，乘积的期望不等于期望的乘积，除非<strong>变量相互独立</strong>。因此，如果x和y相互独立，则<br>$$<br>E(x y)=E(x) E(y)<br>$$<br>期望的运算构成了统计量的运算基础，因为方差、协方差等统计量本质上是一种特殊的期望。</p>
<h1 id="方差"><a href="#方差" class="headerlink" title="方差"></a>方差</h1><p><strong>方差</strong>（英语：Variance），<a href="https://zh.wikipedia.org/wiki/%E6%87%89%E7%94%A8%E6%95%B8%E5%AD%B8">应用数学</a>里的专有名词。在<a href="https://zh.wikipedia.org/wiki/%E6%A6%82%E7%8E%87%E8%AE%BA">概率论</a>和<a href="https://zh.wikipedia.org/wiki/%E7%BB%9F%E8%AE%A1%E5%AD%A6">统计学</a>中，一个<a href="https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F">随机变量</a>的<strong>方差</strong>描述的是它的离散程度，<strong>也就是该变量离其</strong><a href="https://zh.wikipedia.org/wiki/%E6%9C%9F%E6%9C%9B%E5%80%BC">期望值</a>(均值)<strong>的距离。</strong></p>
<p>方差（variance)是在概率论和统计方差衡量随机变量或一组数据时离散程度的度量。概率论中方差用来度量随机变量和其数学期望（即均值）之间的偏离程度。统计中的方差（样本方差）是各个数据分别与其平均数之差的平方的和的平均数。在许多实际问题中，研究方差即偏离程度有着重要意义。方差是衡量源数据和期望值相差的度量值。</p>
<p>而标准差给我们描述的是样本集合的各个样本点到均值的距离之平均。</p>
<p>以这两个集合为例，[0, 8, 12, 20]和[8, 9, 11, 12]，两个集合的均值都是10，但显然两个集合的差别是很大的，计算两者的标准差，前者是8.3后者是1.8，显然后者较为集中，故其标准差小一些，标准差描述的就是这种“散布度”。之所以除以n-1而不是n，是因为这样能使我们以较小的样本集更好地逼近总体的标准差，即统计上所谓的“无偏估计”。而方差则仅仅是标准差的平方。</p>
<h2 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h2><p>方差是一种特殊的期望，被定义为：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222708.svg" alt="MommyTalk1599828942690">

<h2 id="性质-1"><a href="#性质-1" class="headerlink" title="性质"></a>性质</h2><p>这个定义涵盖了连续、离散、或两者都有的随机变量。方差亦可当作是随机变量与自己本身的<a href="https://zh.wikipedia.org/wiki/%E5%85%B1%E8%AE%8A%E7%95%B0%E6%95%B8">协方差</a>(或<a href="https://zh.wikipedia.org/wiki/%E5%8D%8F%E6%96%B9%E5%B7%AE">协方差</a>)：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222743.svg" alt="MommyTalk1599876596197" style="zoom:80%;">

<p>1、展开表示</p>
<p>反复利用期望的线性性质，可以算出方差的另一种表示形式：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222737.svg" alt="MommyTalk1599829001389">

<p>2、常数的方差</p>
<p>常数的方差为0，由方差的展开表示很容易推得。</p>
<p>3、线性组合的方差</p>
<p>方差不满足线性性质，两个变量的线性组合方差计算方法如下：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222749.svg" alt="MommyTalk1599829079367">

<p>4、独立变量的方差</p>
<p>如果两个变量相互独立，则：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222754.svg" alt="MommyTalk1599829148693">

<p>两个随机变量合的方差为：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222800.svg" alt="MommyTalk1599876729539">

<h1 id="方差和标准差的区别"><a href="#方差和标准差的区别" class="headerlink" title="方差和标准差的区别"></a>方差和标准差的区别</h1><p><strong>那么问题来了，既然有了方差来描述变量与均值的偏离程度，那又搞出来个标准差干什么呢？</strong></p>
<p>方差与我们要处理的数据的量纲是不一致的，多了个平方，虽然能很好的描述数据与均值的偏离程度，但是处理结果是不符合我们的直观思维的。 而标准差的根号就抵消了这个平方，就能相对直观了描述数据与均值之间的偏离程度。</p>
<p>举个例子：一个班级里有60个学生，平均成绩是70分，标准差是9，方差是81，成绩服从正态分布，那么我们通过方差不能直观的确定班级学生与均值到底偏离了多少分，通过标准差我们就很直观的得到学生成绩分布在[61,79]范围的概率为0.6826，即约等于下图中的34.2%*2</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222809.png" alt="20170104181533024" style="zoom:80%;">

<p>标准差和均值的量纲（单位）是一致的，在描述一个波动范围时标准差比方差更方便。</p>
<h1 id="均方差、均方误差的区别"><a href="#均方差、均方误差的区别" class="headerlink" title="均方差、均方误差的区别"></a>均方差、均方误差的区别</h1><p>方差的平方根被称为标准差(standard deviation)。简单来说，标准差是一组数值自<strong>平均值</strong>分散开来的程度的一种测量观念。一个较大的标准差，代表大部分的数值和其平均值之间差异较大；一个较小的标准差，代表这些数值较接近平均值。</p>
<p>标准差（Standard Deviation） ，中文环境中又常称均方差，但不同于均方误差（mean squared error，<u>均方误差是各数据偏离<strong>真实值</strong>的距离平方和的平均数</u>，也即误差平方和的平均数，计算公式形式上接近方差，<u>它的开方叫均方根误差</u>，均方根误差才和标准差形式上接近），标准差是离均差平方和平均后的方根，用σ表示。标准差是方差的算术平方根。</p>
<p>从上面定义我们可以得到以下几点：<br>1、均方差就是标准差，标准差就是均方差<br>2、均方差不同于均方误差<br>3、均方误差是各数据偏离真实值的距离平方和的平均数</p>
<p>举个例子：我们要测量房间里的温度，很遗憾我们的温度计精度不高，所以就需要测量5次，得到一组数据$[x_1,x_2,x_3,x_4,x_5]$,假设温度的真实值是 $x$，数据与真实值的误差 $e=x-x_i$</p>
<p>那么均方误差:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222815.svg" alt="MommyTalk1601015529577" style="zoom:80%;">

<p>总的来说，<strong>均方差是数据序列与均值的关系</strong>，而<strong>均方误差是数据序列与真实值之间的关系</strong>，所以我们只需要搞清楚真实值和均值之间的关系就行了。</p>
<h1 id="协方差"><a href="#协方差" class="headerlink" title="协方差"></a>协方差</h1><p><strong>协方差</strong>（Covariance）在<a href="https://zh.wikipedia.org/wiki/%E6%A6%82%E7%8E%87%E8%AE%BA">概率论</a>和<a href="https://zh.wikipedia.org/wiki/%E7%BB%9F%E8%AE%A1%E5%AD%A6">统计学</a>中用于衡量两个变量的总体<a href="https://zh.wikipedia.org/wiki/%E8%AF%AF%E5%B7%AE">误差</a>。而<a href="https://zh.wikipedia.org/wiki/%E6%96%B9%E5%B7%AE">方差</a>是协方差的一种特殊情况，即当两个变量是相同的情况。<br><a href="https://zh.wikipedia.org/wiki/%E6%9C%9F%E6%9C%9B%E5%80%BC">期望值</a>分别为 $E(X) = \mu$与 $E(X) = \nu $ 的两个具有有限二阶<a href="https://zh.wikipedia.org/wiki/%E7%9F%A9_(%E6%95%B8%E5%AD%B8)">矩</a>的<a href="https://zh.wikipedia.org/wiki/%E5%AE%9E%E6%95%B0">实数</a><a href="https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E5%8F%98%E9%87%8F">随机变量</a><em>X</em> 与<em>Y</em> 之间的<strong>协方差</strong>定义为：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222821.svg" alt="MommyTalk1599877428261">

<p>协方差表示的是两个变量的总体的<a href="https://zh.wikipedia.org/wiki/%E8%AF%AF%E5%B7%AE">误差</a>，这与只表示一个变量误差的<a href="https://zh.wikipedia.org/wiki/%E6%96%B9%E5%B7%AE">方差</a> 不同。 如果两个<a href="https://zh.wikipedia.org/wiki/%E5%8F%98%E9%87%8F">变量</a>的变化趋势一致，<u>也就是说如果其中一个大于自身的期望值，另外一个也大于自身的期望值，那么两个变量之间的协方差就是正值。 如果两个变量的变化趋势相反，即其中一个大于自身的期望值，另外一个却小于自身的期望值，那么两个变量之间的协方差就是负值。</u></p>
<p>协方差只表示线性相关的方向，取值正无穷到负无穷。</p>
<p>如果<em>X</em> 与<em>Y</em> 是<a href="https://zh.wikipedia.org/wiki/%E7%B5%B1%E8%A8%88%E7%8D%A8%E7%AB%8B%E6%80%A7">统计独立</a>的，那么二者之间的协方差就是0，这是因为:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222827.svg" alt="MommyTalk1599877540529">



<h2 id="性质-2"><a href="#性质-2" class="headerlink" title="性质"></a>性质</h2><p>如果<em>X</em> 与<em>Y</em> 是实数随机变量，<em>a</em> 与<em>b</em> 是常数，那么根据协方差的定义可以得到：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222832.svg" alt="MommyTalk1599877708200">



<p>协方差也只能处理二维问题，那维数多了自然就需要计算多个协方差，也就是协方差矩阵。</p>
<h1 id="相关系数"><a href="#相关系数" class="headerlink" title="相关系数"></a>相关系数</h1><p>对于相关系数，从它的公式入手。一般情况下，相关系数的公式为：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925222837.svg" alt="MommyTalk1599877851373">

<p>用X、Y的协方差除以X的标准差和Y的标准差。</p>
<p>所以，相关系数也可以看成协方差：<strong>一种剔除了两个变量量纲影响、标准化后的特殊协方差</strong>。</p>
<p>既然是一种特殊的协方差，那它：</p>
<p>1、也可以反映两个变量变化时是同向还是反向，如果同向变化就为正，反向变化就为负。</p>
<p>2、由于它是标准化后的协方差，因此更重要的特性来了：<strong>它消除了两个变量变化幅度的影响，而只是单纯反应两个变量每单位变化时的相似程度。</strong></p>
<p>参考</p>
<ul>
<li><a href="https://www.zhihu.com/question/20852004" target="_blank">如何通俗易懂地解释「协方差」与「相关系数」的概念？</a> </li>
<li><a href="https://blog.csdn.net/Leyvi_Hsing/article/details/54022612" target="_blank">方差、标准差、均方差、均方误差区别总结</a>  </li>
<li><a href="https://blog.csdn.net/u013066730/article/details/83029619" target="_blank">平均值，标准差，方差，协方差，期望，均方误差</a>   </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>statistics</category>
      </categories>
  </entry>
  <entry>
    <title>集成学习三大法宝-bagging、boosting、stacking</title>
    <url>/posts/ba9591fe/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a>

<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>方差分析</title>
    <url>/posts/99b548ed/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200715115052.png" alt="方差分析(F检验)" style="zoom:67%;"></center>

<a id="more"></a>

<h1 id="方差齐性检验"><a href="#方差齐性检验" class="headerlink" title="方差齐性检验"></a>方差齐性检验</h1><p>目的：方差齐性是方差分析和一些均数比较 $t$ 检验的重要前提，利用 $F$ 检验进行方差齐性检验是最原始的，但对数据要求比较高。</p>
<p>要求：样本来自两个独立的、服从正态分布的总体。</p>
<h2 id="检验原理"><a href="#检验原理" class="headerlink" title="检验原理"></a>检验原理</h2><p>记两独立总体为：</p>
<p>$$<br>\begin{equation}X_{1} \sim N\left(\mu_{1}, \sigma_{1}^{2}\right), \quad X_{2} \sim N\left(\mu_{2}, \sigma_{2}^{2}\right)\end{equation}<br>$$</p>
<p>从两总体中抽取的样本为：</p>
<p>$$<br>\begin{equation}X_{1 i}\left(i=1,2, \cdots, n_{1}\right), \quad X_{2 j}\left(j=1,2, \cdots, n_{2}\right)\end{equation}<br>$$<br>定义样本均值和样本方差：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925111428.svg" alt="equation" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200925111432.svg" alt="equation (1)" style="zoom:80%;">



<p>方差齐性双侧检验的原假设和备择假设：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925111628.svg" alt="MommyTalk1601003761108" style="zoom:80%;">


<p>由 $F$分布的构造定义：</p>
<p>$$<br>\begin{equation}\frac{s_{1}^{2} / \sigma_{1}^{2}}{s_{2}^{2} / \sigma_{2}^{2}} \sim F\left(n_{1}-1, n_{2}-1\right)\end{equation}<br>$$<br>其中 $$n_{1}-1, n_{2}-1$$ 分别为<strong>分子自由度和分母自由度</strong>。</p>
<p>在 $H_0$成立的条件下，即 $$\sigma_{1}^{2}=\sigma_{2}^{2}$$ 成立的条件下：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200715113207.svg" alt="equation (1)">

<p>一般约定取较大的方差作为分子，较小的方差作为分母，这样计算出来的 $F&gt;1$，缩小了范围，便于查表做出结论。给定显著性水平 $\alpha$，利用样本数据计算统计量<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200715113403.svg" alt="equation (2)" style="zoom:80%;"> ，若 <img src="https://raw.githubusercontent.com/HG95/image/master/20200925111236.svg" alt="MommyTalk1601003500615" style="zoom:80%;"> ，这在一次抽样中几乎是不可能发生的（其发生的可能性为  $p$ 值）此时拒绝原假设，认为方差不齐，否则就不拒绝原假设（即认为方差齐）。</p>
<p>对于单侧检验：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200715113735.svg" alt="equation (4)" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200715113740.svg" alt="equation (5)" style="zoom:80%;">

<p>若 <img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200715113901.svg" alt="equation (6)">，则拒绝原假设，否则不拒绝原假设。</p>
<h1 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h1><p><strong>方差分析</strong>(analysis of variance, ANOVA) 是通过检验各总体均值是否相等来判断分类型自变量对数值型因变量是否有显著影响</p>
<p>在研究一个（或多个）分类型自变量与一个数值型因变量之间的关系时，方差分析就是其中的主要方法之一。</p>
<p>【例 10.1】为了对几个行业的服务质量进行评价，消费者协会在四个行业分别抽取了不同的企业作为样本。最近 一年中消费者对总共23家企业投诉的次数如下表:</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618113932.png" alt="image-20200618092330763" style="zoom: 33%;"></center>

<p>一般而言，受到投诉的次数越多，说明服务的质量越差。消费者协会想知道这几个行业之间的服务质量是否有显著差异。</p>
<p>要分析四个行业之间的服务质量是否有显著差异，实际上也就是要判断行业对被投诉次数是否有显著影响，作出这种判断最终被归结为检验这四个行业被投诉次数的均值是否相等。如果它们的均值相等，就意味着行业对被投诉次数是没有影响的，也就是它们之间的服务质量没有显著差异；如果均值不全相等，则意味着行业对被投诉次数是有影响的，它们之间的服务质量应该有显著差异。</p>
<p>要分析四个行业之间的服务质量是否有显著差异，实际上也就是要判断行业对被投诉次数是否有显著影响，作出这种判断最终被归结为检验这四个行业被投诉次数的均值是否相等。如果它们的均值相等，就意味着行业对被投诉次数是没有影响的，也就是它们之间的服务质量没有显著差异;如果均值不全相等，则意味着行业对被投诉次数是有影响的，它们之间的服务质量应该有显著差异。</p>
<p>在方差分析中，所要检验的对象称为<strong>因素</strong>或<strong>因子</strong>(factor)。 因素的不同表现称为<strong>水平</strong>或<strong>处理</strong>(treatment)。 每个因子水平下得到的样本数据称为<strong>观测值</strong>。</p>
<p>例如在本例中，要分析行业对被投诉次数是否有显著影响。这里的<u>行业是要检验的对象，称为因素或因子</u>; 零售业、旅游业、航空公司、家电制造业是行业这一因素的具体表现，称为水平或处理; <u>在每个行业下得到的样本数据(被投诉次数)称为观测值</u>。由于这里只涉及行业一个因素，因此称为单因素4水平的试验。因素的每一个水平可以看做一个总体，如零售业、旅游业、航空公司、家电制造业可以看做4个总体，上 面的数据可以看做从这4个总体中抽取的样本数据。</p>
<p>在只有一个因素的方差分析（称为单因素方差分析）中，涉及<strong>两个变量：一个是分类型自变量，一个是数值型因变量。</strong>例如，在上面的例子中，要研究行业对被投诉次数是否有影响，这里的行业就是自变量，它是一个分类型变量，零售业、旅游业、航空公司、家电制造业就是行业这个自变量的具体取值，称为行业这个因素的水平或处理。被投诉次数是因变量，它是一个数值型变量，不同的被投诉次数就是因变量的取值。方差分析要研究的就是行业对被投诉次数是否有显著影响。</p>
<h1 id="基本思想和原理"><a href="#基本思想和原理" class="headerlink" title="基本思想和原理"></a>基本思想和原理</h1><h2 id="1-图形描述"><a href="#1-图形描述" class="headerlink" title="1. 图形描述"></a>1. 图形描述</h2><p>可以绘制各个总体的 箱线图，或者带有均值的散点图</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618114015.png" alt="Snipaste_2020-06-18_10-35-54 (1)" style="zoom:50%;"></center>

<p>从散点图可以看出，不同行业被投诉的次数是有明显差异的，而且，即使是在同一个行业，不同企业被投诉的次数也明显不同。从图中可以看出，家电制造业被投诉的次数较多，而航空公司被投诉的次数较少。这表明行业与被投诉次数之间有一定的关系。如果行业与被投诉次数之间没有关系，那么它们被投诉次数的均值应该差不多相同，在散点图上所呈现的模式就应该很接近。</p>
<h2 id="2-误差分解"><a href="#2-误差分解" class="headerlink" title="2. 误差分解"></a>2. 误差分解</h2><p><strong>随机误差</strong></p>
<p>因素的同一水平(总体)下，样本各观察值之间的差异 ，比如，同一行业下不同企业被投诉次数是不同的 。这种差异可以看成是随机因素的影响，称为随机误差</p>
<p><strong>系统误差</strong></p>
<p>因素的不同水平(不同总体)下，各观察值之间的差异 ， 比如，不同行业之间的被投诉次数之间的差异 。 这种差异可能是由于抽样的随机性所造成的，也可能是由 于行业本身所造成的，后者所形成的误差是由系统性因素 造成的，称为系统误差</p>
<p>首先，注意到在同一行业(同一个总体)中，样本的各观测值是不同的。例如，在零售业中，所抽取的7家企业之间被投诉的次数是不同的。由于企业是随机抽取的，因此它们之间的差异可以看成是随机因素的影响造成的，或者说是由抽样的随机性所造成的随机误差。这种来自水平内部的数据误差也称为<strong>组内误差</strong>。例如，零售业中所抽取的7家企业被投诉次数之间的误差就是组内误差，<u>它反映了一个样本内部数据的离散程度。显然，组内误差只含有随机误差。</u></p>
<p>其次，不同行业(不同总体)之间的观测值也是不同的。来自不同水平之间的数据误差称为<strong>组间误差</strong>。这种差异可能是由抽样本身形成的随机误差，也可能是由行业本身的系统性因素造成的系统误差。因此，组间误差是随机误差和系统误差的总和。例如，四个行业被投诉次数之间的误差就是组间误差，<u>它反映了不同样本之间数据的离散程度</u>。</p>
<p>在方差分析中，数据的误差用平方和 (sum of squares) 表示的。称为方差</p>
<p><strong>总平方和</strong>(sum of squares for total,  $SST$) 反应全部数据误差大小的平方和。例如，所抽取的全部 23 家企业被投诉次数之间的误差平方和，<u>它反映了全部观测值的离散状况</u></p>
<p><strong>组内平方和</strong> (sum of squares of error, $SSE$) 反映组内误差大小的平方和，也称误差平方和或残差平方和。例如，每个样本内部的数据平方和加在一起就是组内平方和，<u>它反映每个样本内观测值的离散状况。</u></p>
<p><strong>因素平方和</strong> (sum of squares for factor A, $SSA$) 它反映组间误差大小的平方和，也称为因素平方和。例如，四个行业被投诉次数之间的误差平方和就是组间平方和，<u>它反映样本均值之间的差异程度</u></p>
<p><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618173828.png" alt="Untitled Diagram"></p>
<h2 id="3-误差分析"><a href="#3-误差分析" class="headerlink" title="3. 误差分析"></a>3. 误差分析</h2><ul>
<li>若因素不同水平对试验指标没有影响，则组间误差中 只包含随机误差，没有系统误差。这时，组间误差与组内误差经过平均后的数值就应该很接近，它们的比值就会接近1</li>
<li>若因素不同水平对试验指标有影响，在组间误差中除 了包含随机误差外，还会包含有系统误差，这时组间 误差平均后的数值就会大于组内误差平均后的数值， 它们之间的比值就会大于1</li>
<li>当这个比值大到某种程度时，就可以说不同水平之间 存在着显著差异，也就是自变量对因变量有影响</li>
</ul>
<h1 id="方差分析中的基本假定"><a href="#方差分析中的基本假定" class="headerlink" title="方差分析中的基本假定"></a>方差分析中的基本假定</h1><h2 id="方差分析中有三个基本假定："><a href="#方差分析中有三个基本假定：" class="headerlink" title="方差分析中有三个基本假定："></a>方差分析中有三个基本假定：</h2><p>（1）<strong>每一个总体都应服从正态分布</strong>。也就是说，对于因素的每一个水平，其观察值是来自服从正态分布总体的简单随机样本</p>
<p>（2）<strong>各个总体的方差 $\sigma^2$ 必须相同</strong>。也就是说，各组观察数据是从具有相同方差的正态总体中抽取的。</p>
<p>（3）观测值是独立的。例如，在例10.1中，要求每个被抽中的企业被投诉的次数都与其他企业被投诉的次数独立。</p>
<h2 id="问题的一般提法"><a href="#问题的一般提法" class="headerlink" title="问题的一般提法"></a>问题的一般提法</h2><p><strong>如果原假设成立</strong>，即 $H_{0}: \mu_{1}=\mu_{2}=\mu_{3}=\mu_{4}$</p>
<ul>
<li>四个行业被投诉次数的均值都相等</li>
<li>意味着每个样本都来自均值为 $\mu$、方差为 $\sigma^2$ 的同一正态 总体</li>
</ul>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618172809.png" alt="Snipaste_2020-06-18_11-24-46 (1)" style="zoom: 50%;"></center>

<p><strong>若备择假设成立</strong>，即 $H1 ：\mu_i (i=1,2,3,4)$不全相等 </p>
<ul>
<li>至少有一个总体的均值是不同的 </li>
<li>四个样本分别来自均值不同的四个正态总体</li>
</ul>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618172833.png" alt="Snipaste_2020-06-18_11-26-44 (1)" style="zoom: 50%;"></center>

<h1 id="单因素方差分析"><a href="#单因素方差分析" class="headerlink" title="单因素方差分析"></a>单因素方差分析</h1><p>根据所分析的分类型自变量的多少，方差分析可分为单因素方差分析和双因素方差分析。</p>
<h2 id="单因素方差分析-1"><a href="#单因素方差分析-1" class="headerlink" title="单因素方差分析"></a>单因素方差分析</h2><p>当方差分析中只涉及一个分类型自变量时称为<strong>单因素方差分析</strong>(one-way analysis of variance，One Way ANOVA) 。单因素方差分析研究的是一个分类型自变量对-一个数值型因变量的影响。例如，要检验不同行业被投诉次数的均值是否相等，这里只涉及行业-一个因素，因而属于单因素方差分析。</p>
<h2 id="1-数据结构"><a href="#1-数据结构" class="headerlink" title="1. 数据结构"></a>1. 数据结构</h2><p>进行单因素方差分析时，需要得到下面的数据结构。</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618172858.png" alt="Snipaste_2020-06-18_11-38-33 (1)" style="zoom: 33%;"></center>

<p>为叙述方便，在单因素方差分析中，用 $A$ 表示因素，因素的 $k$ 个水平(总体)分别用 $A_1, A_2, ..，A_k$ 表示，每个观测值用 $x_{ij}(i=1，2，..，k; j=1, 2，.，. n)$ 表示，即 $xij$ 表示第 $i$ 个水平(总体)的第 $j$ 个观测值。例如，$x_{21}$  表示第二个水平的第一个观测值。其中，从不同水平中所抽取的样本量可以相等，也可以不相等。</p>
<h2 id="2-分析步骤"><a href="#2-分析步骤" class="headerlink" title="2. 分析步骤"></a>2. 分析步骤</h2><p>为检验自变量对因变量是否有显著影响，首先需要提出 “两个变量在总体中没有关系”的原假设，然后构造一个用于检验的统计量来检验这一假设是否成立。具体来说，方差分析包括提出假设、构造检验的统计量、统计决策等步骤。</p>
<h3 id="提出假设"><a href="#提出假设" class="headerlink" title="提出假设"></a>提出假设</h3><p>在方差分析中，原假设所描述的是在按照自变量的取值分成的类中，因变量的均值相等。因此，检验因素的 $k$ 个水平(总体)的均值是否相等，需要提出如下形式的假设:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925104130.svg" alt="MommyTalk1601000826658" style="zoom:80%;">


<p>式中， $\mu_i$ 为第 $i$ 个总体的均值。</p>
<p>注意：拒绝原假设，只表明至少有两个总体 的均值不相等，并不意味着所有的均值都不 相等</p>
<h3 id="构造检验的统计量"><a href="#构造检验的统计量" class="headerlink" title="构造检验的统计量"></a>构造检验的统计量</h3><p>为检验 $H_0$。是否成立，需要确定检验的统计量。如何构造统计量呢? 在此结合例 10.1 的数据结构说明其计算过程。</p>
<h4 id="（1）计算各样本的均值"><a href="#（1）计算各样本的均值" class="headerlink" title="（1）计算各样本的均值"></a>（1）计算各样本的均值</h4><p>假定从第 $i $ 个总体中抽取一个容量为 $n_i$ 的简单随机样本，令 $\bar{x_i}$ 为第 $i$ 个总体的样本均值，则有：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925104139.svg" alt="MommyTalk1601000706964" style="zoom:80%;">


<p>式中，$n_i$为第 $i$ 个总体的样本量; $x_{ij}$ 为第 $i$ 个总体的第 $j$ 个观测值。</p>
<h4 id="（2）计算全部观察值的总均值"><a href="#（2）计算全部观察值的总均值" class="headerlink" title="（2）计算全部观察值的总均值"></a>（2）计算全部观察值的总均值</h4><p>它是全部观测值的总和除以观测值的总个数，</p>
<p>$$<br>\begin{equation}\bar{\bar{x}}=\frac{\sum_{i=1}^{k} \sum_{j=1}^{n_{i}} x_{i j}}{n}=\frac{\sum_{i=1}^{k} n_{i} \bar{x}_{i}}{n}\end{equation}<br>$$</p>
<p>式中：$n= n_1+n_2+ \cdots +n_k $</p>
<p>根据上述两个步骤则有</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618172944.png" alt="Snipaste_2020-06-18_15-37-07 (1)" style="zoom: 33%;"></center>

<h4 id="（3）计算各误差平方和"><a href="#（3）计算各误差平方和" class="headerlink" title="（3）计算各误差平方和"></a>（3）计算各误差平方和</h4><p>为构造检验的统计量，在方差分析中，需要计算三个误差平方和，它们是总平方和、组间平方和(因素平方和)、组内平方和(误差平方和或残差平方和)。</p>
<p>1）<strong>总平方和</strong> (sum of squares for total), 记为 $SST$ .<u>全部观察值 $x_{ij}$与总平均值 $\bar{\bar{x}}$的离差平方和 ，反映全部观察值的离散状况。</u> 计算公式为：</p>
<p>$$<br>\begin{equation}S S T=\sum_{i=1}^{k} \sum_{j=1}^{n_{i}}\left(x_{i j}-\bar{\bar{x}}\right)^{2}\end{equation}<br>$$</p>
<p>前例的计算结果为：</p>
<p>$$<br>\begin{aligned}<br>S S T &amp;=(57-47.869565)^{2}+\ldots+(58-47.869565)^{2} \<br>&amp;=115.9295<br>\end{aligned}<br>$$</p>
<p>2）<strong>组间平方和</strong> (sum of squares for factor A)，记为 $SSA$ , 它是各组均值元 $x_i (i=1, 2, .，k)$ 与总均值 $\bar{\bar{x}}$的误差平方和，<u>反映各样本均值之间的差异程度</u>，因此又称为因素平方和。<strong>该平方和既包括随机误差，也包括系统误差</strong></p>
<p>其计算公式为:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925104156.svg" alt="MommyTalk1601000572129" style="zoom:80%;">


<p>前例的计算结果为：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925104202.svg" alt="MommyTalk1601001032328" style="zoom:80%;">

<p>3）<strong>组内平方和</strong> (sum of squares of error), 它是每个水平或组的各样本数据与其组平均值的离差平方和，</p>
<p><u>反映每个样本各观察值的离散状况</u>，又称组内平方和，<u>该平方和反映的是随机误差的大小</u>。计算公式为：</p>
<p>$$<br>\begin{equation}S S E=\sum_{i=1}^{k} \sum_{j=1}^{n_{i}}\left(x_{i j}-\bar{x}_{i}\right)^{2}\end{equation}<br>$$</p>
<p>前例的计算结果为：</p>
<p>零售业：$$\sum_{j=1}^{7}\left(x_{1 j}-\bar{x}_{1}\right)^{2}=(57-49)^{2}+(66-49)^{2}+\cdots+(44-49)^{2}=700$$</p>
<p>旅游业：$$\sum_{j=1}^{6}\left(x_{2 j}-\bar{x}_{2}\right)^{2}=(68-48)^{2}+(39-48)^{2}+\cdots+(51-48)^{2}=924$$</p>
<p>航空业：$$\sum_{j=1}^{5}\left(x_{3 j}-\bar{x}_{3}\right)^{2}=(31-35)^{2}+(49-35)^{2}+\cdots+(40-35)^{2}=434$$</p>
<p>家电制造：$$\sum_{j=1}^{5}\left(x_{4 j}-\bar{x}_{4}\right)^{2}=(44-59)^{2}+(51-59)^{2}+\cdots+(58-59)^{2}=650$$</p>
<p>然后将其加总可以得到：$$S S E=700+924+434+650=2708$$</p>
<p>三个平方和的关系</p>
<p>总离差平方和($SST$)、水平项离差平方和 ($SSA$) 、误差项离差平方和 ($SSE$)之间的关系</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618173036.png" alt="Snipaste_2020-06-18_16-04-26 (1)" style="zoom:50%;"></center>

<p>前例的计算结果为：$$4164.608696=1456.608696+2708$$</p>
<br>

<p>三个平方和的作用</p>
<ul>
<li>$SST$ 反映全部数据总的误差程度；$SSE$ 反映随机误差 的大小；$SSA$ 反映随机误差和系统误差的大小 。</li>
<li>如果原假设成立，则表明没有系统误差，组间平方和 $SSA$ 除以自由度后的均方与组内平方和$SSE$ 和除以自由度后的均方差异就不会太大；如果组间均方显著地大于组内均方，说明各水平(总体)之间的差异不仅有随机误差，还有系统误差 。</li>
<li>判断因素的水平是否对其观察值有影响，实际上就是比 较组间方差与组内方差之间差异的大小</li>
</ul>
<h4 id="（4）计算统计量"><a href="#（4）计算统计量" class="headerlink" title="（4）计算统计量"></a>（4）计算统计量</h4><p>由于各误差平方和的大小与观测值的多少有关，为了消除观测值多少对误差平方和大小的影响，需要将其平均，也就是用各平方和除以它们所对应的自由度，这一结果称为<strong>均方</strong>(mean square，$MS$)，也称为方差。三个平方和所对应的自由度分别为:</p>
<ul>
<li>$SST$  的自由度为 $n-1$ ，其中 $n$ 为全部观察值的个数。</li>
<li>$SSA$ 的自由度为 $k-1$ ，其中 $k$ 为因素水平(总体)的个数。</li>
<li>$SSE$ 的自由度为 $n-k$ .</li>
</ul>
<p><strong>组间方差</strong>：$SSA$ 的均方，记为 $MSA$ ，计算公式 为</p>
<p>$$<br>\begin{equation}M S A=\frac{S S A}{k-1}\end{equation}<br>$$</p>
<p>前例的计算结果为：$M S A=\frac{1456.608696}{4-1}=485.536232$$</p>
<p><strong>组内方差</strong>：$SSE$ 的均方，记为$MSE$ ，计算公式为</p>
<p>$$<br>\begin{equation}M S E=\frac{S S E}{n-k}\end{equation}<br>$$</p>
<p>前例的计算结果为：$M S E=\frac{2708}{23-4}=142.526316$</p>
<p>计算检验统计量 $F$ </p>
<p>将 $MSA$ 和 $MSE$ 进行对比，即得到所需要的检验统计量 $F$ </p>
<p>当 $H_0$为真时，二者的比值服从分子自由度为 $k-1$、分母自由度为 $n-k$ 的 $F $ 分布，即</p>
<p>$$<br>\begin{equation}F=\frac{M S A}{M S E} \sim F(k-1, n-k)\end{equation}<br>$$</p>
<p>前例的计算结果为：$F=\frac{485.536232}{142.526316}=3.406643$</p>
<h3 id="统计决策"><a href="#统计决策" class="headerlink" title="统计决策"></a>统计决策</h3><p>将统计量的值 $F$ 与给定的显著性水平$\alpha$ 的临界 值 $F_{\alpha}$进行比较，作出对原假设 $H_0$的决策</p>
<ul>
<li>根据给定的显著性水平$\alpha$ ，在 $F$ 分布表中查找与第一 自由度$df_1 ＝k-1$、第二自由度 $df_2 =n-k $相应的临界值 $F_{\alpha}$ </li>
<li>若$F&gt;F_{\alpha} $，则拒绝原假设 $H_0 $，表明均值之间的差异 是显著的，所检验的因素对观察值有显著影响</li>
<li>若$F&lt;F_{\alpha} $, 则不能拒绝原假设 $H_0 $, 表明所检验的因 素对观察值没有显著影响</li>
</ul>
<h3 id="方差分析表"><a href="#方差分析表" class="headerlink" title="方差分析表"></a>方差分析表</h3><p>为使计算过程更加清晰，通常将上述过程的内容列在一张表内，这就是<strong>方差分析表</strong> (analysis of variance table) </p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618173133.png" alt="image-20200618163926632" style="zoom:67%;"></center>

<p>结果输出：</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618173202.png" alt="image-20200618165149637" style="zoom:67%;"></center>

<p>表中的“SUMMARY”部分是有关各样本的一些描述统计量，它们可以作为方差分析的参考信息。“方差分析”部分即为方差分析表，其中，$SS$ 表示平方和; $df$ 为自由度; $MS$ 表示均方; $F$ 为检验的统计量; $P-value$ 为用于检验的 $P$ 值; $F crit $ 为给定的 $\alpha$ 水平下的临界值。</p>
<p>从方差分析表可以看到，由于$F=3.406 643&gt;F_{0.05}(3，19)=3. 127 354$，所以拒绝原假设Ho，表明$$\mu_{1}, \mu_{2}, \mu_{3}, \mu_{4}$$ 之间的差异是显著的，即行业对被投诉次数的影响是显著的。</p>
<p>在进行决策时，可以直接利用方差分析表中的 $P$ 值与显著性水平 $\alpha$ 的值进行比较。若 $P&lt;\alpha $，则拒绝$H_0$; 若$P&gt;\alpha$，则不拒绝$H_0$。在本例中，$P=0. 038765&lt;\alpha=0.05$，所以拒绝 $H_0$。</p>
<blockquote>
<p>回顾： P-value</p>
<p><strong>P值就是当原假设为真时所得到的样本观察结果或更极端结果出现的概率</strong>。如果P值很小，说明这种情况发生的概率很小，而如果出现了，根据小概率原理，我们就有理由拒绝原假设，<strong>P值越小，我们拒绝原假设的理由就越充分。</strong> </p>
</blockquote>
<h3 id="关系强度的测量"><a href="#关系强度的测量" class="headerlink" title="关系强度的测量"></a>关系强度的测量</h3><p>例10.1 的方差分析结果显示，不同行业被投诉次数的均值之间有显著差异，这意味着行业(自变量)与被投诉次数(因变量)之间的关系是显著的。</p>
<p>上例中的数据，给出了组间平方和(组间SS)，它度量了自变量(行业)对因变量(被投诉次数)的影响效应。实际上，只要组间平方和(SSA)不等于零，就表明两个变量之间有关系(只是是否显著的问题)。当<strong>组间平方和比组内平方和(SSE)大</strong>，而且大到一定程度时，就意味着两个变量之间的关系显著，大得越多，表明它们之间的关系就越强; 反之，<strong>当组间平方和比组内平方和小时</strong>，就意味着两个变量之间的关系不显著，小得越多，表明它们之间的关系就越弱。</p>
<p>可以用组间平方和($SSA$) 占总平方和($SST$) 的大小来反映，这一比例记为 $R^2$ , 即</p>
<p>$$<br>R^{2}=\frac{S S A(\text { 组间平方和 })}{S S T(\text { 总平方和 })}<br>$$</p>
<p>前述例题 $R^2$<br>$$<br>R^{2}=\frac{S S A}{S S T}=\frac{1456.608696}{4146.608696}=0.349759=34.9759 %<br>$$</p>
<p>$R=0.591404$</p>
<p>结论：</p>
<ul>
<li>行业(自变量)对投诉次数(因变量)的影响效应占总效应的 34.9759%，而残差效应则占 65.0241%。即行业对投诉 次数差异解释的比例达到近 35%，而其他因素(残差变量) 所解释的比例近为65%以上, 尽管 $R^2$ 并不高，但行业被投诉次数的影响已经达到统计上显著的程度。</li>
<li>$R=0.591404$ ，表明行业与投诉次数之间有中等以上的关系\</li>
</ul>
<h1 id="双因素方差分析"><a href="#双因素方差分析" class="headerlink" title="双因素方差分析"></a>双因素方差分析</h1><p>two-way analysis of variance</p>
<p>单因素方差分析只是考虑一个分类型自变量对数值型因变量的影响。在对实际问题的研究中，有时需要考虑几个因素对试验结果的影响。例如，分析影响彩电销售量的因素时，需要考虑品牌、销售地区、价格、质量等多个因素的影响。当方差分析中涉及两个分类型自变量时，称为<strong>双因素方差分析</strong>(two-way analysis of variance)。</p>
<p>【例 10.3】有4个品牌的彩电在 个品牌的彩电在5个地区销售，为分析彩电的品牌(品牌因素)和销售地区(地区因素)对销售量是否有影响对销售量是否有影响， 对每种品牌在各地区的销售量取得以下数据 对每种品牌在各地区的销售量取得以下数据。试分析品牌和 销售地区对彩电的销售量是否有显著影响 销售地区对彩电的销售量是否有显著影响？( $\alpha$=0.05)</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618202900.png" alt="image-20200618190613000" style="zoom: 50%;"></center>

<p>分析两个因素(行因素Row和列因素Column)对试验结果的影响 。</p>
<p>如果两个因素对试验结果的影响是相互独立的，分别判断行因素和列因素对试验数据的影响，这时的双因素方差分 析称为<strong>无交互作用的双因素方差分</strong>析或<strong>无重复双因素方差分析</strong>(Two-factor without replication)</p>
<p>如果除了行因素和列因素对试验数据的单独影响外，两个 因素的搭配还会对结果产生一种新的影响，这时的双因素 方差分析称为<strong>有交互作用的双因素方差分析</strong>或<strong>可重复双因 素方差分析</strong> (Two-factor with replication )</p>
<h2 id="1、双因素方差分析的基本假定"><a href="#1、双因素方差分析的基本假定" class="headerlink" title="1、双因素方差分析的基本假定"></a>1、双因素方差分析的基本假定</h2><ol>
<li><p>每个总体都服从正态分布</p>
<p>对于因素的每一个水平，其观察值是来自正态 分布总体的简单随机样本</p>
</li>
<li><p>各个总体的方差必须相同</p>
<p>对于各组观察数据，是从具有相同方差的总体 中抽取的</p>
</li>
<li><p>观察值是独立的</p>
</li>
</ol>
<h2 id="2、无交互作用的双因素方差分析"><a href="#2、无交互作用的双因素方差分析" class="headerlink" title="2、无交互作用的双因素方差分析"></a>2、无交互作用的双因素方差分析</h2><h3 id="1-数据结构-1"><a href="#1-数据结构-1" class="headerlink" title="(1) 数据结构"></a>(1) 数据结构</h3><center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618203444.png" alt="Snipaste_2020-06-18_19-13-26 (1)" style="zoom:80%;"></center>

<ul>
<li><p>$\bar{x_{i}}$ 是行因素的第 $i$ 个水平下各观察值的平均值 个水平下各观察值的平均值</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925112208.svg" alt="MommyTalk1601002486399" style="zoom:80%;">
</li>
<li><p>$\bar{x_{.j}}$ 是列因素的第 $j$ 个水平下的各观察值的均值 个水平下的各观察值的均值</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925112212.svg" alt="MommyTalk1601002522487" style="zoom:80%;">
</li>
<li><p>$\bar{\bar{x}}$ 是全部 $kr$ 个样本数据的总平均值：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925112215.svg" alt="MommyTalk1601002603288" style="zoom:80%;">



</li>
</ul>
<p>与单因素方差分析类似，双因素方差分析也包括提出假设、构造检验的统计量、统计决策等步骤。</p>
<h3 id="2-提出假设"><a href="#2-提出假设" class="headerlink" title="(2) 提出假设"></a>(2) 提出假设</h3><p>为了检验两个因素的影响，需要对两个因素分别提出如下假设。</p>
<p><strong>对行因素提出的假设为:</strong></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925112106.svg" alt="MommyTalk1601001856405" style="zoom:80%;">

<p>式中， $\mu_i$ 为列因素的第 $i$个水平的值。</p>
<p><strong>对列因素提出的假设为</strong>：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925112110.svg" alt="MommyTalk1601002243179" style="zoom:80%;">

<p>式中， $\mu_j$ 为列因素的第 $j$个水平的值。</p>
<h3 id="3-构造检验统计量"><a href="#3-构造检验统计量" class="headerlink" title="(3) 构造检验统计量"></a>(3) 构造检验统计量</h3><p><strong>计算平方和</strong></p>
<p>总误差平方和：</p>
<p>$$<br>\begin{equation}S S T=\sum_{i=1}^{k} \sum_{j=1}^{r}\left(x_{i j}-\bar{\bar{x}}\right)^{2}\end{equation}<br>$$</p>
<p>行因素误差平方和:</p>
<p>$$<br>\begin{equation}S S R=\sum_{i=1}^{k} \sum_{j=1}^{r}\left(\bar{x}_{i .}-\bar{\bar{x}}\right)^{2}\end{equation}<br>$$</p>
<p>列因素误差平方和</p>
<p>$$<br>\begin{equation}S S C=\sum_{i=1}^{k} \sum_{j=1}^{r}\left(\bar{x}_{j}-\bar{\bar{x}}\right)^{2}\end{equation}<br>$$</p>
<p>随机误差项平方和</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200925112349.svg" alt="MommyTalk1601002746014" style="zoom:80%;">


<p>上述平方和的关系为：</p>
<p>$$<br>\begin{equation}\mathrm{SST}=\mathrm{SSR}+\mathrm{SSC}+\mathrm{SSE}\end{equation}<br>$$</p>
<p><strong>计算均方(MS)</strong></p>
<ul>
<li><p>误差平方和除以相应的自由度</p>
</li>
<li><p>三个平方和的自由度分别是</p>
<ul>
<li>总离差平方和$SST$ 的自由度为 $ kr-1$ </li>
<li>行因素的离差平方和 $SSR$ 的自由度为 $k-1$</li>
<li>列因素的离差平方和 $SSC$ 的自由度为 $r-1$</li>
<li>随机误差平方和$SSE$ 的自由度为 $(k-1)×(r-1)$</li>
</ul>
</li>
</ul>
<p>行因素的均方，记为 $MSR$，计算公式为</p>
<p>$$<br>\begin{equation}M S R=\frac{S S R}{k-1}\end{equation}<br>$$</p>
<p>列因素的均方，记为MSC ，计算公式为</p>
<p>$$<br>\begin{equation}M S C=\frac{S S C}{r-1}\end{equation}<br>$$</p>
<p>随机误差项的均方，记为 $MSE$ ，计算公式为</p>
<p>$$<br>\begin{equation}M S E=\frac{S S E}{(k-1)(r-1)}\end{equation}<br>$$</p>
<p>为检验<strong>行因素</strong>对因变量的影响是否显著，采用下面的统计量:</p>
<p>$$<br>\begin{equation}F_{R}=\frac{M S R}{M S E} \sim F(k-1,(k-1)(r-1))\end{equation}<br>$$</p>
<p>为检验<strong>列因素</strong>的影响是否显著，采用下面的统计量:</p>
<p>$$<br>\begin{equation}F_{C}=\frac{M S C}{M S E} \sim F(r-1,(k-1)(r-1))\end{equation}<br>$$</p>
<p><strong>统计决策</strong></p>
<p>计算出检验统计量后，根据给定的显著性水平 $\alpha$ 和两个自由度，查 $F$ 分布表得到相应的临界值 $F_{\alpha}$，然后将 $F_R$ 和 $F_C$与 $F_{\alpha}$进行比较。</p>
<ul>
<li>若 $F_R&gt;F_{\alpha}$ ，则拒绝原假设 $H_0$ ，表明均值之间的差异 是显著的，即所检验的行因素对观察值有显著影响 </li>
<li>若 $F_C &gt; F_{\alpha}$ ，则拒绝原假设 $H_0$ ，表明均值之间有显著差异，即所检验的列因素对观察值有显著影响</li>
</ul>
<p>为使计算过程更加清晰，通常将上述过程的内容列成方差分析表：</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618203404.png" alt="image-20200618201016063" style="zoom:80%;"></center>

<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618203859.png" alt="Snipaste_2020-06-18_20-12-58 (1)" style="zoom:80%;"></center>

<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618204022.png" alt="Snipaste_2020-06-18_20-14-01 (1)" style="zoom:80%;"></center>

<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618204710.png" alt="Snipaste_2020-06-18_20-14-44 (1)" style="zoom:80%;"></center>

<h3 id="4、关系强度的测量"><a href="#4、关系强度的测量" class="headerlink" title="4、关系强度的测量"></a>4、关系强度的测量</h3><p>行平方和(行SS)度量品牌对销售量的影响效应 </p>
<p> 列平方和(列SS)度量地区对销售量的影响效应 </p>
<p>两个平方和加在一起度量品牌和地区对销售量的联合效应 </p>
<p> 联合效应与总平方和的比值定义为 $R^2$</p>
<p>$$<br>\begin{equation}R^{2}=\frac{\text { 联合效应 }}{\text { 总效应 }}=\frac{S S R+S S C}{S S T}\end{equation}<br>$$</p>
<p>其平方根 $R$ 反映这两个自变量合起来与因变量之间的关系强度</p>
<p>$$<br>R^{2}=\frac{S S R+S S C}{S S T}=\frac{13004.55+2011.70}{17888.95}=0.8394=83.94 %<br>$$</p>
<p>品牌因素和地区因素合起来总共解释了销售量差异的83.94% </p>
<p>$R=0.9162$，表明品牌和地区两个因素联合与销售量有较强的关系</p>
<p>当然，也可以分别考察品牌和地区与销售量之间的关系，这就需要分别作每个自变量与销售量的单因素方差分析，并分别计算每个$R^2$。</p>
<h2 id="3、可重复双因素分析"><a href="#3、可重复双因素分析" class="headerlink" title="3、可重复双因素分析"></a>3、可重复双因素分析</h2><p>在上面的分析中，假定两个因素对因变量的影响是独立的，但如果两个因素搭配在一起会对因变量产生一种新的效应，就需要考虑交互作用对因变量的影响，这就是有交互作用的双因素方差分析。</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618204213.png" alt="Snipaste_2020-06-18_20-24-13 (1)" style="zoom:80%;"></center>

<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618204234.png" alt="Snipaste_2020-06-18_20-25-04 (1)" style="zoom:80%;"></center> 

<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618204435.png" alt="Snipaste_2020-06-18_20-25-56 (1)" style="zoom:80%;"></center>


<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618204352.png" alt="Snipaste_2020-06-18_20-27-04 (1)" style="zoom:80%;"></center>


<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200618204629.png" alt="Snipaste_2020-06-18_20-27-59 (1)" style="zoom:80%;"></center>







<p>参考：</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/139151375">一文详解F检验</a></li>
<li>王晨阳,王成.线性回归方程显著性的事先检验问题[J].延安大学学报(自然科学版),2005(02):32-34.</li>
<li><a href="https://www.zhihu.com/question/20983193">如何理解统计学中「自由度」这个概念？</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/33357167">数模系列(6)：方差分析（ANOVA）</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>statistics</category>
      </categories>
      <tags>
        <tag>ANOVA</tag>
      </tags>
  </entry>
  <entry>
    <title>推断统计:假设检验</title>
    <url>/posts/3677eeee/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>假设检验的原理以及相关的概念。</p>
<a id="more"></a>

<h1 id="参数估计和假设检验"><a href="#参数估计和假设检验" class="headerlink" title="参数估计和假设检验"></a>参数估计和假设检验</h1><p><strong>参数估计</strong>( parameter estimation) 和 <strong>假设检验</strong> ( hypothesis testing) 是统计推断的两个组成部分，它们都是利用样本对总体进行某种推断，但推断的角度不同。参数估计讨论的是用样本统计量估计总体参数的方法，总体参数 μ 在估计前是未知的。而在假设检验中，则是先对 μ 的值提出一个假设，然后利用样本信息去检验这个假设是否成立。</p>
<h1 id="假设检验-hypothesis-testing"><a href="#假设检验-hypothesis-testing" class="headerlink" title="假设检验( hypothesis testing)"></a>假设检验( hypothesis testing)</h1><p>包括参数和非参数检验：</p>
<ul>
<li>参数假设检验（parametric test）：总体的 分布形式已知，需要对总体的未知参数进行 假设检验。</li>
<li>非参数假设检验（non-parametric test）：对 总体分布形式所知甚少，需对未知分布函数 的形式及其他特征进行假设检验。</li>
</ul>
<blockquote>
<p>参数假设检验举例</p>
<p>根据1989年的统计资料，某地女性新生儿的平均体重为3190 克。为判断该地1990年的女性新生儿体重与1989年相比有无显著差异，从该地1990年的女性新生儿中随机抽取30人，测得其平均体重为3210克。从样本数据看，1990年女新生儿体重比 1989年略高，但这种差异可能是由于抽样的随机性带来的，也 许这两年新生儿的体重并没有显著差异。究竟是否存在显著差异？可以先假设这两年新生儿的体重没有显著差异，然后利用 样本信息检验这个假设能否成立。这是一个关于总体均值的假 设检验问题。</p>
</blockquote>
<h1 id="假设检验的原理"><a href="#假设检验的原理" class="headerlink" title="假设检验的原理"></a>假设检验的原理</h1><p>小概率原理。假设检验的基本思想是概率性质的<strong>反证法</strong>。(不同于纯数 学中的反证法)</p>
<p>什么是小概率？</p>
<ul>
<li>概率是0～1之间的一个数，因此小概率就是接近0的一个 数</li>
<li>著名的英国统计家 Ronald Fisher 把 20 分之 1 作为标准，也 就是0.05，从此0.05或比0.05小的概率都被认为是小概率</li>
<li>Fisher没有任何深奥的理由解释他为什么选择0.05，只是 说他忽然想起来的</li>
</ul>
<h2 id="什么是小概率原理"><a href="#什么是小概率原理" class="headerlink" title="什么是小概率原理"></a>什么是小概率原理</h2><ul>
<li><strong>小概率原理</strong>——发生概率很小的随机事件（小概率事件） 在一次实验中几乎是不可能发生的。</li>
<li>根据这一原理，可以先假设总体参数的某项取值为真， 也就是假设其发生的可能性很大，然后抽取一个样本 进行观察，如果样本信息显示出现了与事先假设相反的结果且与原假设差别很大，则说明原来假定的小概率事件在一次实验中发生了，这是一个违背小概率原 理的不合理现象，因此有理由怀疑和拒绝原假设；否则不能拒绝原假设。</li>
<li>检验中使用的小概率是检验前人为指定的。</li>
</ul>
<h2 id="小概率原理举例"><a href="#小概率原理举例" class="headerlink" title="小概率原理举例"></a>小概率原理举例</h2><p>某工厂质检部门规定该厂产品次品率不超过4％方能 出厂。今从1000件产品中抽出10件，经检验有4件次 品，问这批产品是否能出厂?</p>
<p>如果假设这批产品的次品率P≤4％，则可计算事件 “抽10件产品有4件次品”的出现概率为：<br>$$<br>\begin{equation}P_{10}(4)=C_{10}^{4}(0.04)^{4}(1-0.04)^{6}=0.00042\end{equation}<br>$$<br>可见，概率是相当小的，1万次实验中可能出现4次， 然而概率如此小的事件，在一次实验中居然发生了， 这是不合理的，而不合理的根源在于假设次品率 P≤4％ ，因而认为假设次品率P≤4％是不能成立的， 故按质检部门的规定，这批产品不能出厂。</p>
<p>可见，概率是相当小的，1万次实验中可能出现4次， 然而概率如此小的事件，在一次实验中居然发生了， 这是不合理的，而不合理的根源在于假设次品率 P≤4％ ，因而认为假设次品率P≤4％是不能成立的， 故按质检部门的规定，这批产品不能出厂。</p>
<p>可见，概率是相当小的，1万次实验中可能出现4次， 然而概率如此小的事件，在一次实验中居然发生了， 这是不合理的，而不合理的根源在于假设次品率 P≤4％ ，因而认为假设次品率P≤4％是不能成立的， 故按质检部门的规定，这批产品不能出厂。</p>
<h1 id="假设检验的基本思想"><a href="#假设检验的基本思想" class="headerlink" title="假设检验的基本思想"></a>假设检验的基本思想</h1><h1 id="假设检验的两个特点"><a href="#假设检验的两个特点" class="headerlink" title="假设检验的两个特点"></a>假设检验的两个特点</h1><ul>
<li>第一，<strong>假设检验采用逻辑上的反证法</strong>，即为了检验 一个假设是否成立，首先假设它是真的，然后对 样本进行观察，如果发现出现了不合理现象，则 可以认为假设是不合理的，拒绝假设。否则可以 认为假设是合理的，接受假设。</li>
<li>第二，假设检验采用的反证法带有概率性。所谓假 设的不合理不是绝对的，而是基于实践中广泛采用的 小概率事件几乎不可能发生的原则。至于事件的概率 小到什么程度才算是小概率事件，并没有统一的界定 标准，而是必须根据具体问题而定。如果一旦判断失 误，错误地拒绝原假设会造成巨大损失，那么拒绝原 假设的概率就应定的小一些；如果一旦判断失误，错 误地接受原假设会造成巨大损失，那么拒绝原假设的 概率就应定的大一些。</li>
<li>小概率通常用 $\alpha$ 表示，又称为<strong>检验的显著性水平</strong>。通 常取 $\alpha$  ＝0.05 或$\alpha$  ＝0.01，即把概率不超过 0.05 或 0.01 的事 件当作小概率事件。</li>
</ul>
<h1 id="原假设和备择假设"><a href="#原假设和备择假设" class="headerlink" title="原假设和备择假设"></a>原假设和备择假设</h1><h2 id="原假设"><a href="#原假设" class="headerlink" title="原假设"></a>原假设</h2><p>一种叫原假设，也叫零假设，用H0表示。原假设一般是统计者想要拒绝的假设。原假设的设置一般为：等于=、大于等于&gt;=、小于等于&lt;=。</p>
<h2 id="备择假设"><a href="#备择假设" class="headerlink" title="备择假设"></a>备择假设</h2><p>另外一种叫备择假设，用H1表示。备则假设是统计者想要接受的假设。备择假设的设置一般为：不等于、大于&gt;、小于&lt;。</p>
<p>例子在进行假设检验时，我们希望接受版本2的假设，想拒绝接受版本1的假设。所以我们的假设设置为：H0 ：μ版本1 &gt;= μ版本2 ，H1 : μ版本1 &lt; μ版本2。</p>
<p>为什么统计者想要拒绝的假设放在原假设呢？因为原假设备被拒绝如果出错的话，只能犯第I类错误，而犯第I类错误的概率已经被规定的显著性水平所控制。</p>
<h1 id="假设检验的两类错误"><a href="#假设检验的两类错误" class="headerlink" title="假设检验的两类错误"></a>假设检验的两类错误</h1><p>根据假设检验做出判断无非下述四种情况：</p>
<p>1、原假设真实， 并接受原假设，判断正确；</p>
<p>2、原假设不真实，且拒绝原假设，判断正确；</p>
<p>3、原假设真实， 但拒绝原假设，判断错误；</p>
<p>4、原假设不真实，却接受原假设，判断错误。</p>
<p>假设检验是依据样本提供的信息进行判断，有犯错误的可能。所犯错误有两种类型：一种是弃真错误，另一种是取伪错误。</p>
<p>弃真错误也叫第I类错误或α错误：它是指 原假设实际上是真的，但通过样本估计总体后，拒绝了原假设。明显这是错误的，我们拒绝了真实的原假设，所以叫弃真错误，这个错误的概率我们记为α。这个值也是显著性水平，在假设检验之前我们会规定这个概率的大小。</p>
<p>取伪错误也叫第II类错误或β错误：它是指 原假设实际上假的，但通过样本估计总体后，接受了原假设。明显者是错误的，我们接受的原假设实际上是假的，所以叫取伪错误，这个错误的概率我们记为β。</p>
<h1 id="显著性水平"><a href="#显著性水平" class="headerlink" title="显著性水平"></a>显著性水平</h1><p>显著性水平是指当原假设实际上正确时，检验统计量落在拒绝域的概率，简单理解就是犯弃真错误的概率。这个值是我们做假设检验之前统计者根据业务情况定好的。</p>
<p>显著性水平α越小，犯第I类错误的概率自然越小，一般取值：0.01、0.05、0.1等</p>
<p>当给定了检验的显著水平a=0.05时，进行双侧检验的Z值为1.96 。</p>
<p>当给定了检验的显著水平a=0.05时，进行单侧检验的Z值为1.645 。</p>
<p>当给定了检验的显著水平a=0.01时，进行双侧检验的Z值为2.58 。</p>
<p>当给定了检验的显著水平a=0.01时，进行单侧检验的Z值为2.33</p>
<h1 id="检验统计量"><a href="#检验统计量" class="headerlink" title="检验统计量"></a>检验统计量</h1><p>定义：据以对原假设和备择假设作出决策的某个样本统计量，称为检验统计量。</p>
<h1 id="拒绝域、接受域和临界值"><a href="#拒绝域、接受域和临界值" class="headerlink" title="拒绝域、接受域和临界值"></a>拒绝域、接受域和临界值</h1><p>在规定了检验的显著性水平 α 后，根据容量为 n 的样本，按照统计量的理论概率分布规律，可以确定据以判断拒绝和接受原假设的检验统计量的<strong>临界值</strong>。</p>
<p><strong>临界值</strong>将统计量的所有可能取值区间分为两互不相交的部分，即原假设的拒绝域和接受域。</p>
<p><strong>接受域</strong>: 原假设为真时允许范围内的变动，应该接受原假设。</p>
<p><strong>拒绝域</strong>: 当原假设为真时只有很小的概率出现，因而当统计量的结果落入这一区域便应拒绝原假设，这一区域便称作拒绝域。</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609164249.png"></center>

<h1 id="利用-P-值进行决策"><a href="#利用-P-值进行决策" class="headerlink" title="利用 P 值进行决策"></a>利用 P 值进行决策</h1><p>进行检验的程序可以根据检验统计量落人的区域作出是否拒绝原假设的决策。</p>
<p>在确定 α 以后，拒绝域的位置也就相应确定了，其好处是进行决策的界限清晰，但缺陷是进行决策面临的风险是笼统的。在上面的例子中，计算的 z=2.5，落入拒绝域，我们拒绝原假设，并知道犯弃真错误的概率(面临的风险)为0.05， 如果计算的 z=2.0，同样落人拒绝域，我们拒绝原假设面临的风险也是0.05。0.05 是一个通用的风险概率，这是用域表示的缺陷，但根据不同的样本结果进行决策，面临的风险事实上是有差别的。</p>
<p><strong>为了精确地反映决策的风险度，可以利用P值进行决策。</strong></p>
<p>为了解什么是P值，如前面的举例：根据随机抽样测得1990年的样本均值x=3210克，与1989年的总体均值3190克相差20克，异究竟是大还是小？换句话说，如果原假设成立，即1990年新生儿体重的与1989年新生儿体重的总体均值相同，那么随机抽取出n=100的样本3210克的概率有多大呢？我们把这个概率称为P值，所以P值就是当原假设为真时所得到的样本观察结果或更极端结果出现的概率。如果P值很小，说明这种情况发生的概率很小，而如果出现了，根据小概率原理，我们就有理由拒绝原假设，<strong>P值越小，我们拒绝原假设的理由就越充分。</strong></p>
<p>例题：由统计资料得知，1989年某地新生儿的平均体重为3190克，现从1990年的新生儿中随机抽取100个，测得其平均体重为3210克，问1990年的新生儿与1989年相比，体重有无显著差异？</p>
<p>解答：从调查结果看，1990年新生儿的平均体重3210克，比1989年新生儿的平均体重3190克增加了20克，但这20克的差异可能源于不同的情况。一种情况是，1990年新生儿的体重与1989年相比没有什么差别，20克的差异是由于抽样的随机性造成的；另一种情况是，抽样的随机性不可能造成20克这样大的差异，1990年新生儿的体重与1989年新生儿的体重相比确实有所增加。</p>
<p><strong>P值是通过计算得到的</strong>，P值的大小取决于三个因素，一个是样本数据与原假设之间的差异，在新生儿体重的例子里这个差异是20克;另一个是样本量，这里n=100;再一个是被假设参数的总体分布。在这个例子中计算出的P=0.012 42，这就是说，如果原假设成立，样本均值等于和大于3210克的概率只有0.012 42，这是很小的，由此我们可以拒绝原假设，得到与前面z值检验相同的结论，如图8–4所示。</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200610141105.png"></center>
P 值的长处是它反映了观察到的实际数据与原假设之间不一致的概率值，与传统的拒绝域范围相比，P是一个具体的值，这样就提供了更多的信息。如果事先确定了显著性水平，如 $\alpha$ =0.05，则在双侧检验中，P&gt;0. 025( $\alpha$ /2=0.025)不能拒绝原假设; 反之，P&lt;0. 025则拒绝原假设。在单侧检验中，P&gt;0. 05不能拒绝原假设，P&lt;0.05则拒绝原假设。当然，也可以直接使用 P 值进行决策，这时 P 值本身就代表了显著性水平。我们也可以使用P值，按照所需要的显著性水平进行判断和决策，具体做法就是用P值和需要的显著性水平进行比较。

<p>例题</p>
<p>某批发商欲从厂家购进一批灯泡，根据合同规定灯泡的使用寿命平均不能低于1 000小时。已知灯泡燃烧寿命服从正态分布，标准差为200小时。在总体中随机抽取了100个灯泡，得知样本均值为960小时，批发商是否应该购买这批灯泡?</p>
<p>这是一个单侧检验问题。显然，如果灯泡的燃烧寿命超过了1000小时，批发商是欢迎的，因为他用已定的价格(灯泡寿命为1000小时的价格)购进了更高质量的产品。因此，如果样本均值超过1000小时，他会购进这批灯泡。问题在于样本均值为960小时他是否应当购进。因为即便总体均值为1000小时，由于抽样的随机性，样本均值略小于1000小时的情况也是会经常出现的。在这种场合下，批发商更为关注可以容忍的下限，即当灯泡寿命低于什么水平时拒绝。于是检验的形式为:<br>$$<br>\begin{equation}\begin{array}{l}<br>H_{0}: \mu \geqslant 1000 \<br>H_{1}: \mu&lt;1000<br>\end{array}\end{equation}<br>$$</p>
<p>左单侧检验如下图所示($\alpha=0.5$) , 也可以把左单侧检验称为下限检验。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200924002359.png" alt="image-20200924000137151" style="zoom:80%;">

<p>解答：根据分析，采用左单侧检验。</p>
<p>在该例中已知 $\mu_0$=100，$\bar{x}$=960，$\sigma$=200，n=100，并假定显著性水平 $\alpha$=0.05.由上图可知拒绝域在左侧，所以临界值为负，即$z_{\alpha} = -1.645$. z的下标$\alpha$表示单侧检验。</p>
<p>进行检验的过程为：<br>$$<br>\begin{equation}\begin{array}{l}<br>H_{0}: \mu \geqslant 1000 \<br>H_{1: \mu}&lt;1000 \<br>z=\frac{\bar{x}-\mu_{0}}{\sigma / \sqrt{n}}=\frac{960-1000}{200 / \sqrt{100}}=-2<br>\end{array}\end{equation}<br>$$<br>由于 $|z|&gt;\left|z_{a}\right|$ ，即 $z$ 的值位于拒绝域内，所以拒绝 $H0$ , 即这批灯泡的使用寿命低于1000小时，批发商不应购买。</p>
<p>如果用 P 值进行检验，查表可得，统计量 $z$  的绝对值 2，与之对应 的函数值为 0.97725，由于这是单侧检验，故 P 值为：<br>$$<br>P=1-0.97725=0.02275<br>$$<br>在单侧检验中，用 P 值直接与 $\alpha$ 进行比较，由于 $P(0.02275)&lt;\alpha(0.05)$  ，故拒绝 $H0$。</p>
<p>如果在此例的假设检验中，显著性水平 $\alpha = 0.02$ , 则有 P&gt; $\alpha$ ,这时就不能拒绝$H0$。</p>
<h1 id="假设检验的步骤"><a href="#假设检验的步骤" class="headerlink" title="假设检验的步骤"></a>假设检验的步骤</h1><p>(一)、根据研究需要提出原假设 H0 和备择假设 H1</p>
<p>(二)、确定适当的检验统计量</p>
<p>(三)、确定显著性水平 α 和临界值及拒绝域</p>
<p>(四)、根据样本数据计算检验统计量的值(或 p值)</p>
<p>(五)、做出决策：(两种方法)</p>
<p>a. 将检验统计量的值和临界值比较，做出拒绝或接受原假设的决策。</p>
<p>b. 由步骤五的检验统计量计算 p 值，利用 p值确定时候拒绝原假设。</p>
<h1 id="样本均值和方差检验的场景"><a href="#样本均值和方差检验的场景" class="headerlink" title="样本均值和方差检验的场景"></a>样本均值和方差检验的场景</h1><p><strong>均值检验</strong>：适用于均值是否存在差别的问题，<u>反应的是集中趋势</u>。</p>
<p>单样本均值检验：测试某批产品是否正常，或者某个部件是否正常，以及评价风险是否在可控范围内等。视总体方差已知和未知分为z检验和t检验。api: stats.ttest_1samp</p>
<p>双样本均值检验：测试两个总体的均值是否有差别。<code>api: stats.ttest_ind</code>和<code>ttest_ind_from_stats</code></p>
<p>两条数据相减得到一列数据，再用单样本均值检验看其均值是否为0</p>
<p><strong>方差检验</strong>：适用方差是否存在差别的问题，<u>反应的离中趋势</u>。</p>
<p>这里要说明因素及其水平。假如收入是目标变量，它受学历的影响。那么学历是一个因素，学历的等级是水平。试验的目的是查看不同学历水平下的收入是否存在显著差别，或者说收入是否受学历的影响。</p>
<p>单因素方差分析：连续变量是否受某分类变量不同水平的影响。</p>
<p>多因素方差分析：已经过渡为一般线性模型，连续变量是否受某些分类变量的影响，以及分量变量对连续变量的影响是否受到别的分类变量的影响[交互项]。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>statistics</category>
      </categories>
      <tags>
        <tag>p-value</tag>
      </tags>
  </entry>
  <entry>
    <title>Graphics:QQ图(分位数图)</title>
    <url>/posts/36d720f0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>分位数图示法（Quantile Quantile Plot，简称 Q-Q 图）</p>
<a id="more"></a>

<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h1><p>分位数图示法（Quantile Quantile Plot，简称 Q-Q 图）</p>
<p> 统计学里Q-Q图（Q代表分位数）是一个概率图，用图形的方式<strong>比较两个概率分布</strong>，把他们的两个分位数放在一起比较。首先选好分位数间隔。图上的点（x,y）反映出其中一个第二个分布（y坐标）的分位数和与之对应的第一分布（x坐标）的相同分位数。因此，这条线是一条以分位数间隔为参数的曲线。如果两个分布相似，则该Q-Q图趋近于落在y=x线上。如果两分布线性相关，则点在Q-Q图上趋近于落在一条直线上，但不一定在y=x线上。Q-Q图可以用来可在分布的位置-尺度范畴上可视化的评估参数。</p>
<p>从定义中可以看出Q-Q图主要用于<strong>检验数据分布的相似性</strong>，如果要利用Q-Q图来对数据进行正态分布的检验，则可以令x轴为正态分布的分位数，y轴为样本分位数，如果这两者构成的点分布在一条直线上，就证明样本数据与正态分布存在线性相关性，即服从正态分布。</p>
<p>(自己的理解：qq图就是理论值和实际值的关系图，x=理论值，y=实际值。)</p>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>检验一序列值是否服从正态分布，序列为：$X=(x_1, x_2, , x_i , x_N),(N&gt;0)$</p>
<p>1、将原序列按升序从新排列</p>
<p>$$x_1 \leq x_2 ,\leq ,\leq x_i,\leq , \leq x_N$$</p>
<p>2、计算QQ序列</p>
<p>样本均值：$\bar{x}=\frac{\sum_{i=1}^{N} x i}{N}$</p>
<p>样本标准差：$\sigma=\sqrt{\frac{\sum(x_i-\bar{x})^{2}}{N-1}}$</p>
<p>分位数 :$Q_{i}=\frac{x_i-\bar{x}}{\sigma}, \quad t_{i}=\frac{i-0.5}{N}$ ,  通过查正太分布表可以得到 $t_i$ 对应的分位数 $P_{i}^{\prime}$</p>
<p>计算如下表所示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212405.png" alt="image-20200922202518466" style="zoom: 50%;">

<p>3、画出 QQ 图 ，分布呈直线，就是正态分布，如果这条线是y=x，则是标准正态分布。</p>
<h1 id="gofplots-ProbPlot"><a href="#gofplots-ProbPlot" class="headerlink" title="gofplots.ProbPlot"></a>gofplots.ProbPlot</h1><p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">statsmodels</span><span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>data<span class="token punctuation">,</span> 
                                             dist<span class="token operator">=</span><span class="token operator">&lt;</span>scipy<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>_continuous_distns<span class="token punctuation">.</span>norm_gen object<span class="token operator">></span><span class="token punctuation">,</span> 
                                             fit<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> 
                                             distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>Q-Q and P-P Probability Plots</p>
<p>可以接受指定dist参数的参数，也可以自动将其拟合。</p>
<p>参数：</p>
<ul>
<li><code>data</code> : <a href="https://numpy.org/doc/stable/glossary.html#term-array-like">array_like</a>  A 1d data array</li>
<li><code>dist</code> : callable, Compare x against dist. A scipy.stats or statsmodels distribution. The default is scipy.stats.distributions.norm (a standard normal). Can be a SciPy frozen distribution.</li>
<li><code>fit</code> : bool,  If fit is false, loc, scale, and distargs are passed to the distribution. If fit is True then the parameters for dist are fit automatically using dist.fit. The quantiles are formed from the standardized data, after subtracting the fitted loc and dividing by the fitted scale. fit cannot be used if dist is a SciPy frozen distribution.</li>
<li><code>distargs</code> : tuple,  A tuple of arguments passed to dist to specify it fully so dist.ppf may be called. distargs must not contain loc or scale. These values must be passed using the loc or scale inputs. distargs cannot be used if dist is a SciPy frozen distribution.</li>
<li><code>a</code> : float ,  Offset for the plotting position of an expected order statistic, for example. The plotting positions are given by (i - a)/(nobs - 2*a + 1) for i in range(0,nobs+1)</li>
<li><code>loc</code> : float, Location parameter for dist. Cannot be used if dist is a SciPy frozen distribution.</li>
<li><code>scale</code> : Scale parameter for dist. Cannot be used if dist is a SciPy frozen distribution.</li>
</ul>
<h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><table>
<thead>
<tr>
<th><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.ppplot.html#statsmodels.graphics.gofplots.ProbPlot.ppplot"><code>ppplot</code></a>([xlabel, ylabel, line, other, ax])</th>
<th>Plot of the percentiles of x versus the percentiles of a distribution.</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.probplot.html#statsmodels.graphics.gofplots.ProbPlot.probplot"><code>probplot</code></a>([xlabel, ylabel, line, exceed, ax])</td>
<td>Plot of unscaled quantiles of x against the prob of a distribution.</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.qqplot.html#statsmodels.graphics.gofplots.ProbPlot.qqplot"><code>qqplot</code></a>([xlabel, ylabel, line, other, ax])</td>
<td>Plot of the quantiles of x versus the quantiles/ppf of a distribution.</td>
</tr>
</tbody></table>
<blockquote>
<p>The three plotting methods are summarized below:</p>
<ul>
<li><p>ppplotProbability-Probability plot</p>
<p>Compares the sample and theoretical probabilities (percentiles).</p>
</li>
<li><p>qqplotQuantile-Quantile plot</p>
<p>Compares the sample and theoretical quantiles</p>
</li>
<li><p>probplotProbability plot</p>
<p>Same as a Q-Q plot, however probabilities are shown in the scale of the theoretical distribution (x-axis) and the y-axis contains unscaled quantiles of the sample data.</p>
</li>
</ul>
</blockquote>
<h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><table>
<thead>
<tr>
<th><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.sample_percentiles.html#statsmodels.graphics.gofplots.ProbPlot.sample_percentiles"><code>sample_percentiles</code></a></th>
<th>Sample percentiles(样本百分位数)</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.sample_quantiles.html#statsmodels.graphics.gofplots.ProbPlot.sample_quantiles"><code>sample_quantiles</code></a></td>
<td>sample quantiles(样本分位数)</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.sorted_data.html#statsmodels.graphics.gofplots.ProbPlot.sorted_data"><code>sorted_data</code></a></td>
<td>sorted data</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.theoretical_percentiles.html#statsmodels.graphics.gofplots.ProbPlot.theoretical_percentiles"><code>theoretical_percentiles</code></a></td>
<td>Theoretical percentiles (理论百分位数)</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.theoretical_quantiles.html#statsmodels.graphics.gofplots.ProbPlot.theoretical_quantiles"><code>theoretical_quantiles</code></a></td>
<td>Theoretical quantiles(理论分位数)</td>
</tr>
</tbody></table>
<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>The first example shows a Q-Q plot for regression residuals</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

data <span class="token operator">=</span> sm<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>longley<span class="token punctuation">.</span>load<span class="token punctuation">(</span>as_pandas<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
data<span class="token punctuation">.</span>exog <span class="token operator">=</span> sm<span class="token punctuation">.</span>add_constant<span class="token punctuation">(</span>data<span class="token punctuation">.</span>exog<span class="token punctuation">)</span>
model <span class="token operator">=</span> sm<span class="token punctuation">.</span>OLS<span class="token punctuation">(</span>data<span class="token punctuation">.</span>endog<span class="token punctuation">,</span> data<span class="token punctuation">.</span>exog<span class="token punctuation">)</span>
mod_fit <span class="token operator">=</span> model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span><span class="token punctuation">)</span>
res <span class="token operator">=</span> mod_fit<span class="token punctuation">.</span>resid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre><code># res

array([ 267.34002979,  -94.01394237,   46.28716779, -410.1146219 ,
        309.71459079, -249.3112153 , -164.04895636,  -13.18035684,
         14.30477263,  455.39409458,  -17.26892708,  -39.05504249,
       -155.54997356,  -85.67130801,  341.93151399, -206.75782516])</code></pre>
<pre class="line-numbers language-python"><code class="language-python">pplot<span class="token punctuation">.</span>theoretical_quantiles

<span class="token triple-quoted-string string">'''
array([-1.56472647, -1.18683143, -0.92889949, -0.72152228, -0.54139509,
       -0.37739194, -0.22300783, -0.07379127,  0.07379127,  0.22300783,
        0.37739194,  0.54139509,  0.72152228,  0.92889949,  1.18683143,
        1.56472647])
'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python">pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">)</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 1 - qqplot - residuals of OLS fit"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/img/20200923190101.png" alt="下载 (7)" style="zoom:80%;">

<p>qqplot of the residuals against quantiles of t-distribution with 4 degrees of freedom:</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">as</span> stats

pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">'''
pplot.theoretical_quantiles
array([-1.98853847, -1.39569844, -1.05006478, -0.79602407, -0.58782183,
       -0.40547071, -0.23806378, -0.07853211,  0.07853211,  0.23806378,
        0.40547071,  0.58782183,  0.79602407,  1.05006478,  1.39569844,
        1.98853847])
'''</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 2 - qqplot - residuals against quantiles of t-dist"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212417.png" alt="下载 (8)" style="zoom:80%;">

<p>qqplot against same as above, but with mean 3 and std 10:</p>
<pre class="line-numbers language-python"><code class="language-python">pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">'''
pplot.theoretical_quantiles
array([-16.88538475, -10.95698438,  -7.50064777,  -4.96024066,
        -2.87821833,  -1.05470709,   0.61936217,   2.21467888,
         3.78532112,   5.38063783,   7.05470709,   8.87821833,
        10.96024066,  13.50064777,  16.95698438,  22.88538475])
'''</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span><span class="token punctuation">)</span>
h <span class="token operator">=</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 3 - qqplot - resids vs quantiles of t-dist"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212423.png" alt="下载 (9)" style="zoom:80%;">

<p>Automatically determine parameters for t distribution including the loc and scale:</p>
<pre class="line-numbers language-python"><code class="language-python">pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">)</span>
h <span class="token operator">=</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 4 - qqplot - resids vs. quantiles of fitted t-dist"</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">'''
pplot.sample_quantiles
array([-1.79364223, -1.09036424, -0.90425585, -0.71746747, -0.68029695,
       -0.41116747, -0.37468074, -0.17080326, -0.0755211 , -0.05763963,
        0.06256732,  0.20244318,  1.16922377,  1.35455004,  1.49545161,
        1.99168324])

pplot.theoretical_quantiles
array([-1.56472676, -1.18683159, -0.92889958, -0.72152234, -0.54139512,
       -0.37739197, -0.22300784, -0.07379128,  0.07379128,  0.22300784,
        0.37739197,  0.54139512,  0.72152234,  0.92889958,  1.18683159,
        1.56472676])
'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212429.png" alt="下载 (10)" style="zoom:80%;">

<p>A second ProbPlot object can be used to compare two separate sample sets by using the other kwarg in the qqplot and ppplot methods.</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.25</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.75</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.75</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.25</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>

pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">'''
用的都是样本的分位数
pp_x.sample_quantiles.min()
-2.254490936888067
pp_y.sample_quantiles.min()
-1.89620626452838
'''</span>

fig <span class="token operator">=</span> pp_x<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">'45'</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 5 - qqplot - compare two sample sets"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>In qqplot, sample size of other can be equal or larger than the first. In case of larger, size of other samples will be reduced to match the size of the first by interpolation</p>
<pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.25</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.75</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.75</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.25</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">57</span><span class="token punctuation">)</span>
pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
fig <span class="token operator">=</span> pp_x<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_y<span class="token punctuation">)</span>
title <span class="token operator">=</span> <span class="token string">"Ex. 6 - qqplot - compare different sample sizes"</span>
h <span class="token operator">=</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>title<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212444.png" alt="下载 (12)" style="zoom:80%;">



<p>在ppplot中，其他样本和第一个样本的大小可以不同。 其他将用于估计经验累积分布函数（ECDF）。ECDF(x) will be plotted against p(x)=0.5/n, 1.5/n, …, (n-0.5)/n where x are sorted samples from the first.</p>
<pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.25</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.75</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.75</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.25</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">57</span><span class="token punctuation">)</span>
pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y<span class="token punctuation">.</span>ppplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_x<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 7A- ppplot - compare two sample sets, other=pp_x"</span><span class="token punctuation">)</span>
pp_x<span class="token punctuation">.</span>ppplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 7B- ppplot - compare two sample sets, other=pp_y"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212452.png" alt="下载 (13)" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212457.png" alt="下载 (14)" style="zoom:80%;">





<h1 id="gofplots-qqline"><a href="#gofplots-qqline" class="headerlink" title="gofplots.qqline"></a>gofplots.qqline</h1><p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python">statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>qqline<span class="token punctuation">(</span>ax<span class="token punctuation">,</span> line<span class="token punctuation">,</span> 
                                     x<span class="token operator">=</span>None<span class="token punctuation">,</span> y<span class="token operator">=</span>None<span class="token punctuation">,</span> 
                                     dist<span class="token operator">=</span>None<span class="token punctuation">,</span> fmt<span class="token operator">=</span><span class="token string">'r-'</span><span class="token punctuation">,</span> <span class="token operator">**</span>lineoptions<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>为qqplot绘制参考线。</p>
<p>参数： </p>
<ul>
<li><p><code>ax</code> : matplotlib轴实例, The axes on which to plot the line</p>
</li>
<li><p><code>line</code> : <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a> {“45”,”r”,”s”,”q”} , 与数据进行比较的参考线的选项。</p>
<ul>
<li>“45” - 45-degree line</li>
<li>“s”- standardized line, the expected order statistics are scaled by the standard deviation of the given sample and have the mean added to them</li>
<li>“r” - A regression line is fit</li>
<li>“q” - A line is fit through the quartiles.</li>
<li>None - By default no reference line is added to the plot.</li>
</ul>
</li>
<li><p><code>X </code> : <a href="https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray"><code>ndarray</code></a> </p>
<p>X data for plot. Not needed if line is “45”.</p>
</li>
<li><p><code>y</code><a href="https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray"><code>ndarray</code></a> </p>
<p>Y data for plot. Not needed if line is “45”.</p>
</li>
<li><p><code>dist</code> : <strong>scipy.stats.distribution</strong></p>
<p>A scipy.stats distribution, needed if line is “q”.</p>
</li>
<li><p><code>fmt</code> : <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a>, <code>optional</code> </p>
<p>Line format string passed to plot.</p>
</li>
</ul>
<ul>
<li><p><strong><em>\</em>lineoptions</strong></p>
<p>Additional arguments to be passed to the plot command.</p>
</li>
</ul>
<blockquote>
<p>There is no return value. The line is plotted on the given ax.</p>
</blockquote>
<h2 id="Examples-1"><a href="#Examples-1" class="headerlink" title="Examples"></a>Examples</h2><p>导入食品支出数据集。 在x轴上绘制年度食品支出，在y轴上绘制家庭收入。 使用qqline将回归线添加到绘图中。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqline

foodexp <span class="token operator">=</span> sm<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>engel<span class="token punctuation">.</span>load<span class="token punctuation">(</span>as_pandas<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
x <span class="token operator">=</span> foodexp<span class="token punctuation">.</span>exog
y <span class="token operator">=</span> foodexp<span class="token punctuation">.</span>endog

<span class="token comment" spellcheck="true">#x.shape  #(235, 1)</span>
<span class="token comment" spellcheck="true"># y.shape #(235,)</span>

ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span>foodexp<span class="token punctuation">.</span>exog_name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span>foodexp<span class="token punctuation">.</span>endog_name<span class="token punctuation">)</span>
qqline<span class="token punctuation">(</span>ax<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212534.png" alt="下载" style="zoom:80%;">

<h1 id="gofplots-qqplot"><a href="#gofplots-qqplot" class="headerlink" title="gofplots.qqplot"></a>gofplots.qqplot</h1><p>与 <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.probplot.html#scipy.stats.probplot"><code>scipy.stats.probplot</code></a> 类似。</p>
<p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python">statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>data<span class="token punctuation">,</span> 
                                     dist<span class="token operator">=</span><span class="token operator">&lt;</span>scipy<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>_continuous_distns<span class="token punctuation">.</span>norm_gen object<span class="token operator">></span><span class="token punctuation">,</span> 
                                     distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                                     a<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> 
                                     fit<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> line<span class="token operator">=</span>None<span class="token punctuation">,</span> 
                                     ax<span class="token operator">=</span>None<span class="token punctuation">,</span> <span class="token operator">**</span>plotkwargs<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Q-Q plot of the quantiles of x versus the quantiles/ppf of a distribution.</p>
<p>可以接受指定dist参数，也可以自动将其拟合。</p>
<p>参数：</p>
<ul>
<li><p><code>data</code> : A 1d data array.</p>
</li>
<li><p><code>dist</code> : <a href="https://docs.python.org/3/library/functions.html#callable"><code>callable</code></a> , Comparison distribution. The default is scipy.stats.distributions.norm (a standard normal).</p>
</li>
<li><p><code>distargs</code> :  元组，传递给 <code>dist</code> 分布的参数，让它能够调用 <code>ppf</code> 函数。</p>
</li>
<li><p><code>a</code> : float , Offset for the plotting position of an expected order statistic, for example. The plotting positions are given by (i - a)/(nobs - 2*a + 1) for i in range(0,nobs+1)</p>
</li>
<li><p><code>loc</code> : float , Location parameter for dist</p>
</li>
<li><p><code>scale</code> : float , Scale parameter for dist</p>
</li>
<li><p><code>fit</code> : bool, 如果fit为false，则将loc，scale和distargs传递到分布。 如果fit为True，则使用dist.fit自动拟合dist的参数。The quantiles are formed from the standardized data, after subtracting the fitted loc and dividing by the fitted scale.</p>
</li>
<li><p><code>line</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, “45”, “s”, “r”, “q”},  </p>
<p>Options for the reference line to which the data is compared:</p>
<ul>
<li>“45” - 45-degree line</li>
<li>“s” - standardized line, the expected order statistics are scaled by the standard deviation of the given sample and have the mean added to them</li>
<li>“r” - A regression line is fit</li>
<li>“q” - A line is fit through the quartiles.</li>
<li>None - by default no reference line is added to the plot.</li>
</ul>
</li>
<li><p><code>ax</code> : <a href="https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes"><code>AxesSubplot</code></a>, <code>optional</code> </p>
<p>If given, this subplot is used to plot in instead of a new figure being created.</p>
</li>
<li><p><strong><em>\</em>plotkwargs</strong></p>
<p>Additional matplotlib arguments to be passed to the plot command.</p>
</li>
</ul>
<p>返回值：</p>
<p><a href="https://matplotlib.org/api/_as_gen/matplotlib.figure.Figure.html#matplotlib.figure.Figure"><code>Figure</code></a></p>
<p>If ax is None, the created figure. Otherwise the figure to which ax is connected.</p>
<h2 id="Examples-2"><a href="#Examples-2" class="headerlink" title="Examples"></a>Examples</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt 
<span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqplot

data <span class="token operator">=</span> sm<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>longley<span class="token punctuation">.</span>load<span class="token punctuation">(</span>as_pandas<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

exog <span class="token operator">=</span> sm<span class="token punctuation">.</span>add_constant<span class="token punctuation">(</span>data<span class="token punctuation">.</span>exog<span class="token punctuation">)</span>
mod_fit <span class="token operator">=</span> sm<span class="token punctuation">.</span>OLS<span class="token punctuation">(</span>data<span class="token punctuation">.</span>endog<span class="token punctuation">,</span>exog<span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span><span class="token punctuation">)</span>
res <span class="token operator">=</span> mod_fit<span class="token punctuation">.</span>resid <span class="token comment" spellcheck="true"># residuals</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#res</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">267.34002979</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">94.01394237</span><span class="token punctuation">,</span>   <span class="token number">46.28716779</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">410.1146219</span> <span class="token punctuation">,</span>
        <span class="token number">309.71459079</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">249.3112153</span> <span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">164.04895636</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">13.18035684</span><span class="token punctuation">,</span>
         <span class="token number">14.30477263</span><span class="token punctuation">,</span>  <span class="token number">455.39409458</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">17.26892708</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">39.05504249</span><span class="token punctuation">,</span>
       <span class="token operator">-</span><span class="token number">155.54997356</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">85.67130801</span><span class="token punctuation">,</span>  <span class="token number">341.93151399</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">206.75782516</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python">fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212544.png" alt="下载 (1)" style="zoom:80%;">

<p>qqplot of the residuals against quantiles of t-distribution with 4 degrees of freedom:</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">as</span> stats
fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923213122.png" alt="下载 (2)" style="zoom:80%;">

<p>qqplot against same as above, but with mean 3 and std 10:</p>
<pre class="line-numbers language-python"><code class="language-python">fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923213116.png" alt="下载 (3)" style="zoom:80%;">



<p>Automatically determine parameters for t distribution including the loc and scale:</p>
<pre class="line-numbers language-python"><code class="language-python">fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212650.png" alt="下载 (4)" style="zoom:80%;">

<p>得到残差之后，也可以直接用 <code>qqplot</code> 进行绘制：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqplot

fig <span class="token operator">=</span> qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>line<span class="token operator">=</span><span class="token string">'45'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212641.png" alt="下载 (5)" style="zoom:80%;">







<h1 id="gofplots-qqplot-2samples"><a href="#gofplots-qqplot-2samples" class="headerlink" title="gofplots.qqplot_2samples"></a>gofplots.qqplot_2samples</h1><p>Q-Q Plot of two samples’ quantiles</p>
<p>Can take either two ProbPlot instances or two array-like objects, In the case of the latter, both inputs will be converted to ProbPlot instances using only the default values - so use ProbPlot instances if finer-grained control of the quantile</p>
<p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python">statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>qqplot_2samples<span class="token punctuation">(</span>data1<span class="token punctuation">,</span> data2<span class="token punctuation">,</span> 
                                              xlabel<span class="token operator">=</span>None<span class="token punctuation">,</span> ylabel<span class="token operator">=</span>None<span class="token punctuation">,</span> 
                                              line<span class="token operator">=</span>None<span class="token punctuation">,</span> ax<span class="token operator">=</span>None<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>参数：</p>
<ul>
<li><p><code>data1</code> : {<a href="https://numpy.org/doc/stable/glossary.html#term-array-like">array_like</a>, <a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.html#statsmodels.graphics.gofplots.ProbPlot"><code>ProbPlot</code></a>}   Data to plot along x axis.</p>
</li>
<li><p><code>data2</code> : {<a href="https://numpy.org/doc/stable/glossary.html#term-array-like">array_like</a>, <a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.html#statsmodels.graphics.gofplots.ProbPlot"><code>ProbPlot</code></a>}  Data to plot along y axis. Does not need to have the same number of observations as data 1.</p>
</li>
<li><p><code>xlabel</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a>} User-provided labels for the x-axis. If None (default), other values are used.</p>
</li>
<li><p><code>y</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a>} User-provided labels for the y-axis. If None (default), other values are used.</p>
</li>
<li><p><code>line</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, “45”, “s”, “r”, q”}</p>
<p>Options for the reference line to which the data is compared:</p>
<ul>
<li>“45” - 45-degree line</li>
<li>“s” - standardized line, the expected order statistics are scaled by the standard deviation of the given sample and have the mean added to them</li>
<li>“r” - A regression line is fit</li>
<li>“q” - A line is fit through the quartiles.</li>
<li>None - by default no reference line is added to the plot.</li>
</ul>
</li>
<li><p><code>ax</code> : <a href="https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes"><code>AxesSubplot</code></a>, <code>optional</code></p>
<p>If given, this subplot is used to plot in instead of a new figure being created.</p>
</li>
</ul>
<p>返回值：</p>
<ul>
<li><code>figure</code> : If ax is None, the created figure. Otherwise the figure to which ax is connected.</li>
</ul>
<blockquote>
<ol>
<li>Depends on matplotlib.</li>
<li>If data1 and data2 are not ProbPlot instances, instances will be created using the default parameters. Therefore, it is recommended to use ProbPlot instance if fine-grained control is needed in the computation of the quantiles.</li>
</ol>
</blockquote>
<h2 id="Examples-3"><a href="#Examples-3" class="headerlink" title="Examples"></a>Examples</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqplot_2samples

x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.5</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.0</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.0</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>

pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">)</span>
qqplot_2samples<span class="token punctuation">(</span>pp_x<span class="token punctuation">,</span> pp_y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923213106.png" alt="下载 (6)" style="zoom:80%;">



<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212928.png" alt="下载 (13)" style="zoom:80%;"><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>QQ图</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel:LOOKUP函数用法！</title>
    <url>/posts/5d5b464a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>使用VLOOKUP函数的时候，经常都会遇到一些麻烦事，那就是VLOOKUP查找只找到满足条件的第一个值就不找了，并且还只能从左往右查找，太多限制了。LOOKUP函数，可以完美的解决这两个问题，太好用了！</p>
<p>LOOKUP函数非常强大，有引用函数之王的称号。要想完全掌握它，必须了解它的5种常见用法和它的二分法查找原理。</p>
<a id="more"></a>

<h1 id="常规引用"><a href="#常规引用" class="headerlink" title="常规引用"></a>常规引用</h1><p>格式：LOOKUP（查找值，查找区域）</p>
<p>例1：根据姓名查找语文成绩，公式为<code>=LOOKUP(H2,C2:D19)</code></p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141614.png" alt="20180706113315661001" style="zoom:80%;">

<p>例2：根据姓名查找英语成绩，公式为：<code>=LOOKUP(H2,C2:F19)</code></p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141621.png" alt="20180706113316770002" style="zoom:80%;">

<p>通过这两个例子我们可以发现，LOOKUP在进行查找时公式的结构非常简单，<strong>查找值和要找的结果分别位于查找区域的首列和末列。</strong></p>
<p>但是仅仅了解这个用法是远远不够的，如果我们再试一个数据的话，有可能就会发现问题：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141626.png" alt="20180706113316228003" style="zoom:80%;">

<p>当查找姓名变成赵永福的时候，结果就不对了，这是因为<strong>LOOKUP**</strong>函数使用的是二分法查找**，也就是模糊匹配。</p>
<p>因此，在使用LOOKUP进行常规查找的时候，有一个非常重要的步骤，就是按照查找内容（姓名所在的c列）<strong>升序排序</strong>。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142058.png" alt="20180706113317304004" style="zoom:80%;">

<p>当我们排序以后，公式的结果立刻变成了正确的，是不是很神奇！</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142053.png" alt="20180706113317822005" style="zoom:80%;">

<p>这又引出了一个新的问题，如果数据不能排序的话，LOOKUP函数还能用吗？</p>
<p>肯定能用啊，下面来看看LOOKUP函数的第二种用法。</p>
<h1 id="精确查找的套路"><a href="#精确查找的套路" class="headerlink" title="精确查找的套路"></a><strong>精确查找的套路</strong></h1><p>格式：=LOOKUP（1,0/(查找范围=查找值),结果范围）</p>
<p>在I2单元格输入公式：<code>=LOOKUP(1,0/(C2:C19=H2)，D2:D19)</code>,</p>
<p>回车，可看到正确结果。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142046.png" alt="20180706113318909006" style="zoom:80%;">

<p>关于这个套路的1和0/到底是什么意思，也是提问率最高的问题之一，在未讲解二分法原理之前，简单来说一下公式的意思。1就是要查找的值，但是条件变了，不是直接查找姓名，而是根据姓名得到的一组逻辑值：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142040.png" alt="20180706113319722007" style="zoom:80%;">

<p>注意这里只有一个TRUE，也就是我们要找的姓名。</p>
<p>接下来用0除以这些逻辑值，在进行计算的时候逻辑值TRUE代表1，FALSE代表0，当分母为0也就是FALSE的时候，计算结果是错误值：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142034.jpg" alt="20180706113319379008" style="zoom:80%;">

<p>因此，LOOKUP的工作就变成了在一组数据中找1。由于这组数据只有一个0，其他都是错误值，<strong>二分法使得</strong> <strong>LOOKUP</strong> <strong>只能找到不大于查找值的最后一个数字</strong>，因此只能找到0，最后根据0的行位置（第2行）得到第三参数对应位置的数据，即D2就是我们需要的结果。</p>
<p>当对数组和逻辑值这两大要点掌握比较熟练的时候，这些内容就很好理解了。目前如果不能完全理解，记住这个套路就行：**<code>=LOOKUP（1,0/(查找范围=查找值),结果范围）</code>**。同时这个套路还能延伸出多条件精确查找用法：</p>
<p><code>=LOOKUP（1,0/((查找范围1=查找值1)* (查找范围2=查找值2)* (查找范围3=查找值3)),结果范围）</code></p>
<p>就是在每个查找范围内找到要找的值，得到的逻辑值相乘后同时符合多个条件的位置就是1，原理与单条件的一样。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142025.png" alt="20180706113319291009" style="zoom:80%;">

<h1 id="反向查找的套路"><a href="#反向查找的套路" class="headerlink" title="反向查找的套路"></a>反向查找的套路</h1><p>与我们熟知的VLOOKUP不同，使用LOOKUP函数进行反向查找时非常简单，</p>
<p>公式结构为：**<code>=LOOKUP（查找值，查找列，结果列）</code>**，</p>
<p>下面这个例子是按照姓名排序后再反向查找的效果：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142020.png" alt="20180706113319479010" style="zoom:80%;">



<p>如果数据不能排序的话，使用精确查找的套路：<code>=LOOKUP(1,0/(C2:C19=H8),B2:B19)</code></p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142014.png" alt="20180706113320897011" style="zoom:80%;">

<h1 id="按区间查找的套路"><a href="#按区间查找的套路" class="headerlink" title="按区间查找的套路"></a>按区间查找的套路</h1><p>据学生的总分给出相应的评语。50分以下的为“很差”，50-100分的为“差”，100-150分的为“一般”，150-200分的为“较好”，200-250分的为“优秀”，250分及以上的为“能手”。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142009.png" alt="20180706113320113012" style="zoom:80%;">

<p>这里用的公式为：</p>
<p><code>=LOOKUP(G2,{0,50,100,150,200,250;"很差","差","一般","较好","优秀","能手"})</code></p>
<p>按照评语的要求分成了六个等级，如果用if函数去做就很啰嗦，使用LOOKUP处理这类问题非常方便，公式结构也很简单：</p>
<p><code>=LOOKUP（分数值，{下限1, 下限2……;评语1,评语2……}）</code></p>
<p>在写这个公式的时候注意两点：</p>
<ol>
<li>LOOKUP的第二参数使用了常量<u>数组</u>，这里的大括号是手动输入的，括号内用一个分号分开，左边是每个等级的下限，例如50分以下这个表述里下限就是0，50-100的下限就是50，以此类推，每个数字之间用逗号分开；分号右边是对应的评语，评语应当使用引号，同时用逗号分开（公式里的所有符号都是英文状态下的）；</li>
<li>数字区间应当遵循升序的排列顺序，否则结果就会错误。</li>
</ol>
<h1 id="关于数据排序的重要性"><a href="#关于数据排序的重要性" class="headerlink" title="关于数据排序的重要性"></a>关于数据排序的重要性</h1><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142003.png" alt="20180706113320685013" style="zoom:67%;">

<p>当我们按照学号查找姓名的时候，发现会出现错误，学号也是按升序排列的啊，怎么会错？</p>
<p>这是一种最常见的错误，这里的学号升序排列只是我们感觉如此而已，实际上升序的效果是这样的：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141958.png" alt="20180706113321188014" style="zoom:67%;">

<p>在使用LOOKUP的时候，如果不使用精确查找的套路，切记一定要排序才能保证公式结果的正确性。</p>
<h1 id="二分法原理"><a href="#二分法原理" class="headerlink" title="二分法原理"></a>二分法原理</h1><p>按序号查找成绩，序号是升序排列的，公式<code>=LOOKUP(J2,A2:D19)</code>的结果正确。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141952.png" alt="20180707144605964001" style="zoom:67%;">

<h2 id="二分法查找原理"><a href="#二分法查找原理" class="headerlink" title="二分法查找原理"></a>二分法查找原理</h2><p>二分法查找是把查找范围中的数据按照个数一分为二找到位于中间位置的一个数据，中间值，然后用我们的查找值和中间值做比较。当中间值等于查找值时，直接去获取结果；当中间值小于查找值时，则向下继续进行二分法查找比较（也就是在不含中间值在内的下方的那一半数据中继续进行二分法查找）；当中间值大于查找值时，则向上继续进行二分法查找比较（也就是在不含中间值在内的上方的那一半数据中继续进行二分法查找）。如果如此二分到最后一个数据都未找到等于查找值的数据：最后一个数据小于查找值的，那就以最后一个数据的位置去获取结果值；最后一个数据大于查找值的，那就再向上找一个位置最靠近最后一个数据的小于或等于查找值的数据，再以这个数据的位置去获取结果。</p>
<p>结合上面的例子，具体看看如何通过序号5，找到语文成绩79的。</p>
<p>第一次比较：查找范围<code>A2~A19一共18个数据，中间位置是18÷2=9，即中间值是A10单元格的9。显然查找值5小于9，所以继续向上在A2~A9</code>中查找；</p>
<p>提示：*如果查找范围数据个数是单数，中间位置就是（个数+1）÷2，例如11行的话，中间位置就是（11+1）÷2=6；如果数据个数是偶数，中间位置就是（个数）÷2。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141945.png" alt="20180707144605830002 (1)" style="zoom:80%;">

<p>第二次比较：只有8个数据，中间位置是8÷2=4，中间值是A5单元格的4，查找值5大于4，所以继续向下在A6~A9中找。注意此时下面只有四个数，第一次查找时直接将9下面的数据都排除了。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141941.png" alt="20180707144605971003" style="zoom:67%;">

<p>第三次比较：4个数据，中间值是A7的6，查找值5小于6，所以向上找。此时只剩下一个数据A6单元格的5，与查找值一致，因此就得到5所对应的D列数据79。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141934.png" alt="20180707144605130004" style="zoom:67%;">



<h1 id="LOOKUP实现数据的四舍五入"><a href="#LOOKUP实现数据的四舍五入" class="headerlink" title="LOOKUP实现数据的四舍五入"></a>LOOKUP实现数据的四舍五入</h1><p>用LOOKUP解决了一个四舍五入的问题</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141929.png" alt="20180707144607014010" style="zoom:67%;">

<p>原来这个公式是用LOOKUP函数将一个数字百位以下全部舍去，实现了百分位取整。</p>
<p>在了解过二分法原理以后，是时候让LOOKUP还大家一个解释了。首先说明<code>ROW（A:A）*100</code>这部分。它其实就是得到了一组数字。为了让大家看明白，把 A:A 范围给小一点，用<code>=ROW(A1:A31)*100</code>作说明：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141924.jpg" alt="20180707144607494011" style="zoom:80%;">

<p>虽然单元格中只能看到一个100，实际上是31个数字，我们可以用f9功能键来看看具体内容：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141920.jpg" alt="20180707144607259012" style="zoom: 80%;">

<p>ROW函数用于获取单元格的行号，<code>ROW(A1:A31)*100</code>就是用A1到A31单元格的行号分别乘以100，得到一组百位取整的数据{100;200;300;……3000;3100}。</p>
<p>然后LOOKUP上场了。它要在上述得到的已经百位取整的数组中查找A1。因为数组是按升序排列的，所以查找A1的实质就是在数组中找**<u>小于等于A1的最大值</u>**。</p>
<p>以2517.32为例，唯有2500是小于它的最大值，因此结果就是2500。有兴趣的朋友可以自己用二分法原理去试试，看看对不对。</p>
<p>其他数字的查找方式都是如此。这个公式之所以巧妙，就是把一个四舍五入的问题变成了查找引用的问题，真是妙！</p>
<h1 id="LOOKUP进行数据提取"><a href="#LOOKUP进行数据提取" class="headerlink" title="LOOKUP进行数据提取"></a>LOOKUP进行数据提取</h1><p>原题如图所示提取学号：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141855.png" alt="20180707144608427014" style="zoom:67%;">

<p>用上图的第一个数据来解释。在N1单元格中输入“10张勇a”，然后在O1单元格中输入公式<code>=-LOOKUP(1,-LEFT(N1,ROW(1:9)))</code>提取学号。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141850.jpg" alt="20180707144608499015" style="zoom:67%;">

<p>LOOKUP不是引用函数吗，怎么又可以提取数字了？</p>
<p>LEFT函数的第二个参数使用了一个数组，ROW(1:9)相当于{1;2;3;4;5;6;7;8;9}。LEFT是把第一参数指定的数据从左边开始提取，提取的长度由第二参数来确定。 LEFT按照数组{1;2;3;4;5;6;7;8;9}提取，得到9个结果：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141845.jpg" alt="20180707144608966016" style="zoom:67%;">

<p>也就是从左边开始提取1位，2位……一直到9位。因为LEFT提取的结果都是文本类型，在LEFT前面加上负号，就可以把其中的文本型数字转为数值，文字变成错误值：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141840.jpg" alt="20180707144608831017" style="zoom:67%;">

<p>错误值被LOOKUP忽略，现在就变成了在{-1; -10}中找1。1比这组数据都大，<u><strong>根据二分法查找原理，二分后只能向下找，直到最后一位小于1的数据</strong></u>。因此，我们可以简单理解成：<u>当查找值大于查找范围中所有数据（不管是否是升序排列）时，LOOKUP的实质就是在找最后一个数据。</u></p>
<p>其实将公式中的1变成0也是可以的，因为0也比所有的负数大：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141835.jpg" alt="20180707144608301018" style="zoom:67%;">

<p>当前最后一个数是-10，所以我们在LOOKUP前面再加个负号，就变成10了，也就是我们需要提取的数字。</p>
<h1 id="LOOKUP-与合并单元格"><a href="#LOOKUP-与合并单元格" class="headerlink" title="LOOKUP()与合并单元格"></a>LOOKUP()与合并单元格</h1><p>原始格式</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141828.png" alt="image-20200914140801692" style="zoom:67%;">

<p>在 C 列分别显示对应的第一列的名称：</p>
<p>公式：<code>=LOOKUP("座",$A$1:A1)</code></p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141823.png" alt="image-20200914141031170" style="zoom:67%;">

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="http://www.itblw.com/graphic/139fcf04c051737b903bf13d4fbd1e8f.html" target="">LOOKUP函数用法全解</a></li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>Excel:VLOOKUP函数常用方法集合！</title>
    <url>/posts/9061c292/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>VLOOKUP函数是工作中最常用的一种查找函数，掌握好VLOOKUP函数能够极大提高工作的效率。</p>
<a id="more"></a>

<h1 id="函数解析"><a href="#函数解析" class="headerlink" title="函数解析"></a>函数解析</h1><p>VLOOKUP函数用于首列查找并返回指定列的值，字母“V”表示垂直方向。</p>
<p>VLOOKUP函数的语法如下：</p>
<pre class="line-numbers language-tex"><code class="language-tex">VLOOKUP（lookup_value，table_array，col_index_num，[range_lookup]）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>其中，第1参数<code>lookup_value</code>为要搜索的值，第2参数<code>table_array</code>为首列可能包含查找值的单元格区域或数组，第3参数<code>col_index_num</code>为需要从table_array中返回的匹配值的列号，第4参数<code>range_lookup</code>用于指定精确匹配或近似匹配模式。</p>
<p>当 <code>range_lookup</code>为TRUE、被省略或使用非零数值时，表示近似匹配模式，要求table_array第一列中的值必须按升序排列，并返回小于等于lookup_value的最大值对应列的数据。当参数为FALSE时（常用数字0或保留参数前的逗号代替），表示只查找精确匹配值，返回table_array的第一列中第一个找到的值，精确匹配模式不必对table_array第一列中的值进行排序。</p>
<p>如果使用精确匹配模式且第1参数为文本，则可以在第1参数中使用通配符问号（？）和星号（*）。VLOOKUP函数不区分字母大小写。</p>
<h1 id="基本查找"><a href="#基本查找" class="headerlink" title="基本查找"></a>基本查找</h1><p>A3:B7单元格区域为字母等级查询表，表示60分以下为E级、60<del>69分为D级、70</del>79分为C级、80~89分为B级、90分以上为A级。D:G列为初二年级1班语文测验成绩表，如何根据语文成绩返回其字母等级？</p>
<p>在H3:H13单元格区域中输入<code>=VLOOKUP（G3，$A$3:$B$7,2）</code></p>
<p>返回第二列</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141158.png" alt="image-20200914082729751" style="zoom: 67%;">

<h1 id="返回多列-一"><a href="#返回多列-一" class="headerlink" title="返回多列(一)"></a>返回多列(一)</h1><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141204.png" alt="image-20200914083539515" style="zoom:67%;">

<p>按照上面的方式输入公式</p>
<pre class="line-numbers language-tex"><code class="language-tex">=VLOOKUP(G4,$A$2:$E$13,2,0)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这里将数据源区域进行绝对引用。</p>
<p>然后下拉，得到查询结果：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141209.png" alt="image-20200914084423147" style="zoom: 50%;">

<p>但是将其向右,向下拉的时候，此时会匹配错误！</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141214.png" alt="image-20200914091057439" style="zoom: 50%;">

<p>解决方案：</p>
<p>姓名，语文，数学，英语，四列是挨着的，可以用<code>COLUMN()</code> 函数 返回要查找的列号：</p>
<p>完整公式：</p>
<pre class="line-numbers language-tex"><code class="language-tex">=VLOOKUP($G4,$A$3:$E$13,COLUMN(B2),0)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141220.png" alt="image-20200914091436040" style="zoom: 50%;">

<p>解释：</p>
<p><code>COLUMN(B2)</code> 返回的是列号，此时返回的是2，当向右侧拖动的时候，依次是 C2,D2,E2, <code>COLUMN</code> 返回的值依次是3，4，5，分别对应我们数据源中的语文，数学，英语列。</p>
<p>还有一点是对索引值的列号进行了绝对引用，因为当我们向右拖动公式的时候，要索引的列是不变的，需要将其进行绝对引用。</p>
<h1 id="返回多列-二"><a href="#返回多列-二" class="headerlink" title="返回多列(二)"></a>返回多列(二)</h1><p>上面的数据中，要查找的列和数据源中的列，都是挨着并且顺序是相同的，但是如果顺序不相同，该如何匹配呢？</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141224.png" alt="image-20200914094019765" style="zoom:67%;">

<p>此时再用 <code>COLUMN()</code> 函数就不太行了，此时可以用 <code>MATCH()</code> 函数，函数返回匹配值的列号。</p>
<p>例如要查找的英语在源数据中是第几列。</p>
<pre class="line-numbers language-tex"><code class="language-tex">=MATCH(K4,2:2,0)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>结果返回为5：</p>
<p>查询我们想要的结果：</p>
<pre class="line-numbers language-tex"><code class="language-tex">=VLOOKUP($J5,$A:$H,MATCH(K4,2:2,0))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141230.png" alt="image-20200914095704733" style="zoom:67%;">

<h1 id="关键字为多列-多条件-查询"><a href="#关键字为多列-多条件-查询" class="headerlink" title="关键字为多列(多条件)查询"></a>关键字为多列(多条件)查询</h1><p><code>VLOOKUP</code> 是以第一列为关键字进行查询的。当条件为多个时，该如何查询呢？</p>
<p>例如, 根据右侧的条件进行查询</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141236.png" alt="image-20200914102128243" style="zoom: 50%;">

<p><strong>方法一: 辅助列</strong></p>
<p>将要查超的关键字进行合并:</p>
<pre class="line-numbers language-tex"><code class="language-tex">=B2&C2&D2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141242.png" alt="image-20200914102552194" style="zoom: 67%;">

<p>在进行查询：</p>
<pre class="line-numbers language-tex"><code class="language-tex">=VLOOKUP(K3&L3&M3,A:H,7,0)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141247.png" alt="image-20200914103052904" style="zoom:67%;">

<p><strong>方法二:</strong> index+match</p>
<p>数组公式：</p>
<pre><code>=INDEX($G$2:$G$585,MATCH(K3&amp;L3&amp;M3,$B$2:$B$600&amp;$C$2:$C$600&amp;$D$2:$D$600,0))</code></pre>
<p>输入完公式后，<code>ctrl</code> + <code>shift</code> + <code>enter</code></p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141251.png" alt="image-20200914105857485" style="zoom:67%;">

<h1 id="表有合并单元格"><a href="#表有合并单元格" class="headerlink" title="表有合并单元格"></a>表有合并单元格</h1><p>查找函数VLOOKUP这个函数,大家喜闻乐见, 很多表中使用了合并单元格,这样就会导致正常的查找函数无法返回正确结果。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141256.png" alt="image-20200914111903406" style="zoom:67%;">

<p>使用一般的查找方式进行查找:</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141302.png" alt="image-20200914112134697" style="zoom: 67%;">

<p>解决：</p>
<p>使用 <code>LOOKUP()</code> 函数，</p>
<pre class="line-numbers language-tex"><code class="language-tex">=LOOKUP("座", $D$3:D3)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141308.png" alt="image-20200914112542483" style="zoom: 67%;">

<p>在要查找的地方进行公式输入：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141314.png" alt="image-20200914112810041" style="zoom:67%;">



<h1 id="LOOKUP-COLUMN快速填充做工资条"><a href="#LOOKUP-COLUMN快速填充做工资条" class="headerlink" title="LOOKUP+COLUMN快速填充做工资条"></a>LOOKUP+COLUMN快速填充做工资条</h1><p>Vlookup与COLUMN函数的嵌套也可以应用在制作工资条上，并且员工数越多，使用该法越方便。下表是某公司部分员工的工资表，现在要将其制作成工资条，如何完成呢？</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141412.png" alt="20190114174727555008" style="zoom:80%;">

<p>（1）可以将表格列表标题复制在H1:M1区域。</p>
<p>（2）9名员工，每名工资条3行，共需27行。选中G1:G27，输入任何一个输入数字后按Ctrl+Enter键填充。这一列是为双击向下填充准备的，避免员工人数多向下拖动填充的不便。</p>
<p>（3）在H2单元格输入序号1，然后在I2单元格中输入公式：</p>
<p>=VLOOKUP($H2,$A$2:$F$10, COLUMN(B2),)</p>
<p>（4）右拉填充公式。</p>
<p>（5）选中H1：M3区域，双击右下角填充句柄（小方块）向下填充即可完成工资条的制作。</p>
<p>操作演示请看↓↓↓</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141421.gif" alt="20190114174728818009" style="zoom: 67%;">

<h1 id="补充知识"><a href="#补充知识" class="headerlink" title="补充知识"></a>补充知识</h1><h2 id="1、MATCH-函数"><a href="#1、MATCH-函数" class="headerlink" title="1、MATCH()函数"></a>1、MATCH()函数</h2><p>Match函数是Excel中使用较为广泛的一个函数。其主要作用是：在“范围”单元格中搜索特定的项，然后返回该项在此区域中的相对位置。</p>
<p>通俗的将：MATCH函数返回指定值在数组中的位置，如果在数组中没有找到该值则返回#N/A。</p>
<p>例如：如果A1：A3区域中包含值5,15和28，那么公式=MATCH(15,A1:A3,0)返回数字2，因为15是该区域中的第二项。</p>
<p>MATCH函数返回指定值在数组中的位置，通常和其它函数配合使用，如INDEX函数、VLOOKUP函数等。</p>
<p><strong>语法</strong>：</p>
<pre class="line-numbers language-tex"><code class="language-tex">MATCH(lookup_value, lookup_array, [match_type])。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li><p><strong><code>lookup_value</code></strong> 必需。要在 <strong><em>lookup_array\</em></strong> 中匹配的值。<br>*<strong>lookup_value*</strong> 参数可以为值（数字、文本或逻辑值）或对数字、文本或逻辑值的单元格引用。</p>
</li>
<li><p><strong><code>lookup_array</code></strong> 必需。要搜索的单元格区域。</p>
</li>
<li><p><strong><code>match_type</code></strong> 可选。数字 -1、0 或 1。<strong>match_type</strong> 参数指定 Excel 如何将<em>lookup_value</em> 与 <strong>lookup_array</strong> 中的值匹配。此参数的默认值为 1。</p>
<blockquote>
<p><strong>1 或省略</strong></p>
<p><strong>MATCH</strong> 查找小于或等于 <strong>lookup_value</strong> 的最大值。<strong>lookup_array</strong> 参数中的值必须以<strong>升序排序</strong>，例如：…-2, -1, 0, 1, 2, …, A-Z, FALSE, TRUE。</p>
<p><strong>0</strong></p>
<p><strong>MATCH</strong> 查找完全等于 <strong>lookup_value</strong> 的第一个值。<strong>lookup_array</strong> 参数中的值可按任何顺序排列。</p>
<p><strong>-1</strong></p>
<p><strong>MATCH</strong> 查找大于或等于 <strong>lookup_value</strong> *<em>的最小值。</em>lookup_array* **参数中的值必须按降序排列，例如：TRUE, FALSE, Z-A, …2, 1, 0, -1, -2, … 等等。</p>
</blockquote>
</li>
</ul>
<p><strong>注意事项：</strong></p>
<p>1、MATCH函数返回查找项的<strong>位置</strong>，而不是值本身。如果需要获取值本身，则需要和其它函数一起使用，如INDEX、VLOOKUP。</p>
<p>2、匹配文本值时，<strong>MATCH</strong> 函数不区分大小写字母。</p>
<p>3、如果 <strong>match_type</strong>为 0 且 <strong>lookup_value</strong> 为文本字符串，您可在<strong>lookup_value</strong> 参数中使用通配符 - 问号 (<strong>?</strong>) 和星号 (*<strong>**) 。问号匹配任意单个字符；星号匹配任意一串字符。如果要查找实际的问号或星号，请在字符前键入波形符 (</strong>~**)。</p>
<p>4、如果 <strong>MATCH</strong> 函数查找匹配项不成功，它会返回错误值 #N/A。</p>
<h2 id="2、INDEX-函数"><a href="#2、INDEX-函数" class="headerlink" title="2、INDEX() 函数"></a>2、INDEX() 函数</h2><p><strong>作用：</strong>返回表格或区域中的值或值的应用。</p>
<p><strong>语法</strong>：</p>
<pre class="line-numbers language-tex"><code class="language-tex">INDEX(array, row_num,[column_num])。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>解释：</strong>INDEX（数组或区域，行号，列号）。</p>
<p>1、如果数组只包含一行或一列，则对应的参数Row_num或Column_num为可选参数。</p>
<p>2、如果数组有多行或多列，但只使用参数Row_num或Column_num，函数INDEX返回数组中的整行或整列，且返回值也为数组。</p>
<p>3、如果同时使用参数Row_num或Column_num，函数INDEX返回Row_num和Column_num交叉处的单元格中的值。</p>
<p>4、如果将Row_num或Column_num设置为（零），函数INDEX则分段返回真个列或行的数组数值。</p>
<p>5、若要使用以数组形式返回的值，请将INDEX函数以数组公式形式输入，对于行以水平单元格区域的形式输入，对于列以垂直单元格区域的形式输入。若要输入数组公式，请按Ctrl+Shift+Enter。</p>
<h2 id="3、LOOKUP-函数"><a href="#3、LOOKUP-函数" class="headerlink" title="3、LOOKUP()函数"></a>3、LOOKUP()函数</h2><h2 id="3、COLUMN-函数"><a href="#3、COLUMN-函数" class="headerlink" title="3、COLUMN()函数"></a>3、COLUMN()函数</h2><p>简单说下COLUMN函数的含义和用法。</p>
<p>COLUMN函数用于获取列号，使用格式<code>COLUMN(reference)</code>，当中Reference为需要得到其列标的单元格或单元格区域。典型用法有三种。</p>
<p>1.COLUMN()</p>
<p>参数为空，COLUMN()返回公式所在单元格的列坐标值，如下公式位于B7单元格，所以返回值为2。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141441.png" alt="20190114174726994004" style="zoom:80%;">



<p>2、COLUMN(C4)</p>
<p>参数为具体的某个单元格，如COLUMN(C4)，返回C4所在列号3，如下。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141542.png" alt="20190114174726805005" style="zoom:80%;">

<p>COLUMN(A2:E6)</p>
<p>参数为单元格区域，如COLUMN(A2:E6)，返回区域中第1列（A2所在列）的列号值1，如下。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141548.png" alt="20190114174726232006" style="zoom:80%;">



<p>用COLUMN取代VLOOKUP第三参数</p>
<p>参考：</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/31985290" target="">Excel函数公式：掌握Match函数，如虎添翼</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/32935992" target="">Excel函数公式：你真的了解INDEX函数吗</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/31202670" target="">Excel函数公式：Lookup函数，查找引用之王！！！</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Excel</category>
      </categories>
      <tags>
        <tag>VLOOKUP</tag>
        <tag>COLUMN，INDEX</tag>
        <tag>MATCH</tag>
        <tag>LOOPUP</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客Ayer主题自定义配置</title>
    <url>/posts/e20385d1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>Ayer主题，下面是我的部分配置，可以参考，希望能帮到你</strong></p>
<a id="more"></a>

<h1 id="主要命令说明"><a href="#主要命令说明" class="headerlink" title="主要命令说明"></a>主要命令说明</h1><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 初始化网站 </span>
$ cd myblog 
$ hexo init 

<span class="token comment" spellcheck="true"># 新建一篇文章 </span>
$ hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> &lt;title<span class="token punctuation">></span> 
$ hexo new post "article_name" <span class="token comment" spellcheck="true"># 新建文章 </span>
$ hexo new page "name" <span class="token comment" spellcheck="true"># 少用 </span>

<span class="token comment" spellcheck="true"># 生成静态文件,可简写为 hexo g </span>
$ hexo generate 
$ hexo g <span class="token comment" spellcheck="true">#</span>

生成草稿 
$ hexo putlish <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> &lt;filename<span class="token punctuation">></span> 

<span class="token comment" spellcheck="true"># 启动服务器 可以简写为 hexo s </span>
$ hexo server <span class="token comment" spellcheck="true"># 参数: -p:指定端口 </span>
<span class="token comment" spellcheck="true"># -s:只使用静态文件 </span>
<span class="token comment" spellcheck="true"># -i:指定ip地址 </span>

<span class="token comment" spellcheck="true"># 部署网站,可以简写为 hexo d </span>
$ hexo deploy 

<span class="token comment" spellcheck="true"># 清除缓存文件 db.json 和已经成成的静态文件 public </span>
$hexo clean 

<span class="token comment" spellcheck="true"># 查看版本 </span>
$ hexo version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h1><p>由于<code>Hex 自带的代码高亮主题显示不好看，所以主题中使用到了 [hexo-prism-plugin](https://github.com/ele828/hexo-prism-plugin) 的</code>Hexo插件来做代码高亮，安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后，修改 <code>Hexo </code>根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 44行 打开生成文件时同时生成文件夹 </span>
<span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">true </span>
<span class="token key atrule">highlight</span><span class="token punctuation">:</span> 
    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false </span>

<span class="token comment" spellcheck="true">#prismjs:</span>
<span class="token comment" spellcheck="true">#  enable: false</span>
<span class="token comment" spellcheck="true">#  preprocess: true</span>
<span class="token comment" spellcheck="true">#  line_number: true</span>
<span class="token comment" spellcheck="true">#  tab_replace: ''</span>

<span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span> 
    <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span> <span class="token comment" spellcheck="true"># realtime/preprocess </span>
    <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span> 
    <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># default false </span>
    custom_css<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h1><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>
 <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml
 <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h1><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p>
<p>安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span> 
    <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true </span>
    <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false </span>
    <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置文章字数统计为 true. </span>
    <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置站点文章总字数统计为 true. </span>
    <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读时长. </span>
    <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读次数.</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="EVANYOU三角彩带背景"><a href="#EVANYOU三角彩带背景" class="headerlink" title="EVANYOU三角彩带背景"></a>EVANYOU三角彩带背景</h1><h2 id="引入位置"><a href="#引入位置" class="headerlink" title="引入位置"></a>引入位置</h2><p>路径：【Hexo\themes\ayer\layout\layout.ejs】</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/head'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
<span class="token operator">&lt;</span>body<span class="token operator">></span>
  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"content on"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> body <span class="token operator">%</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/footer'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>cache<span class="token punctuation">:</span> <span class="token operator">!</span>config<span class="token punctuation">.</span>relative_link<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"float_btns"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/totop'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">></span>
    <span class="token operator">&lt;</span>aside <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sidebar on"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/sidebar'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>aside<span class="token operator">></span>
    <span class="token operator">&lt;</span>script<span class="token operator">></span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">"(max-width: 768px)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.content'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'on'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.sidebar'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'on'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/modal'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/after-footer'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>music<span class="token operator">&amp;&amp;</span>theme<span class="token punctuation">.</span>music<span class="token punctuation">.</span>enable<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/music'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 三角彩带背景 <span class="token operator">--</span><span class="token operator">></span>
  <span class="token operator">&lt;</span>canvas id<span class="token operator">=</span><span class="token string">"evanyou-canvas"</span> style<span class="token operator">=</span><span class="token string">"opacity: 0.3; position: fixed; top: 0px; left: 0px; z-index: -1; width: 100%; height: 100%; pointer-events: none;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>canvas<span class="token operator">></span>
  <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/gh/XXXZhy/Blog_Image/js/evanyou_canvas.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Valine评论框加背景"><a href="#Valine评论框加背景" class="headerlink" title="Valine评论框加背景"></a>Valine评论框加背景</h1><p>路径：【Hexo\themes\ayer\layout_partial\post\valine.ejs】</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(!index</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.leancloud</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.leancloud.enable){</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- valine评论 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vcomments-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vcomments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//cdn1.lncld.net/static/js/3.0.4/av-min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- &lt;script src='https://cdn.jsdelivr.net/npm/valine@1.3.10/dist/Valine.min.js'>&lt;/script> --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//unpkg.com/valine/dist/Valine.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 评论背景 --></span>                                                         
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
    <span class="token selector"><span class="token id">#veditor</span></span><span class="token punctuation">{</span><span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">10</span>rem<span class="token punctuation">;</span>
        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(https://gitee.com/cungudafa/source/raw/master/img/gif/katon/pinkcoolpig.gif)</span><span class="token punctuation">;</span>
        <span class="token property">background-size</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span>
        <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>
        <span class="token property">background-position</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token property">resize</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- Valine配置 --></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">
    <span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        el<span class="token punctuation">:</span> <span class="token string">'#vcomments'</span><span class="token punctuation">,</span>
        enableQQ<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        app_id<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.leancloud.app_id %>'</span><span class="token punctuation">,</span>
        app_key<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.leancloud.app_key %>'</span><span class="token punctuation">,</span>
        path<span class="token punctuation">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">,</span>
        <span class="token comment" spellcheck="true">//notify: '&lt;%- theme.valine.notify %>',</span>
        <span class="token comment" spellcheck="true">//verify: '&lt;%- theme.valine.verify %>',</span>
        avatar<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.avatar %>'</span><span class="token punctuation">,</span>
        placeholder<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.placeholder %>'</span><span class="token punctuation">,</span>
        recordIP<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>

        <span class="token comment" spellcheck="true">// 设置Bilibili表情包地址</span>
        emojiCDN<span class="token punctuation">:</span> <span class="token string">'https://cdn.jsdelivr.net/gh/XXXZhy/Blog_Image/valine_emoticon/'</span><span class="token punctuation">,</span> 
        <span class="token comment" spellcheck="true">// 表情title和图片映射</span>
        emojiMaps<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">"墙角滑稽"</span><span class="token punctuation">:</span> <span class="token string">"害怕滑稽.gif"</span><span class="token punctuation">,</span>
            <span class="token string">"仙女下凡"</span><span class="token punctuation">:</span> <span class="token string">"仙女下凡.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"听歌"</span><span class="token punctuation">:</span> <span class="token string">"听歌.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"嫌弃"</span><span class="token punctuation">:</span> <span class="token string">"嫌弃.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"害羞"</span><span class="token punctuation">:</span> <span class="token string">"害羞.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"彩虹滑稽"</span><span class="token punctuation">:</span> <span class="token string">"彩虹滑稽.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"快走"</span><span class="token punctuation">:</span> <span class="token string">"快走.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"扯脸"</span><span class="token punctuation">:</span> <span class="token string">"扯脸.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"摸脸"</span><span class="token punctuation">:</span> <span class="token string">"摸脸.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"流汗"</span><span class="token punctuation">:</span> <span class="token string">"流汗.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"滑滑板"</span><span class="token punctuation">:</span> <span class="token string">"滑滑板.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"点赞"</span><span class="token punctuation">:</span> <span class="token string">"点赞.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"转圈圈"</span><span class="token punctuation">:</span> <span class="token string">"转圈圈.webp"</span><span class="token punctuation">,</span>
            <span class="token comment" spellcheck="true">// ... 更多表情</span>
        <span class="token punctuation">}</span>     
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> infoEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#vcomments .info'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>infoEle <span class="token operator">&amp;&amp;</span> infoEle<span class="token punctuation">.</span>childNodes <span class="token operator">&amp;&amp;</span> infoEle<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        infoEle<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            item<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
    <span class="token selector"><span class="token id">#vcomments-box</span> </span><span class="token punctuation">{</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">30</span>px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
        <span class="token selector"><span class="token id">#vcomments-box</span> </span><span class="token punctuation">{</span>
            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">0</span>px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token selector"><span class="token id">#vcomments-box</span> <span class="token id">#vcomments</span> </span><span class="token punctuation">{</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector"><span class="token class">.v</span> <span class="token class">.vlist</span> <span class="token class">.vcard</span> <span class="token class">.vh</span> </span><span class="token punctuation">{</span>
        <span class="token property">padding-right</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector"><span class="token class">.v</span> <span class="token class">.vlist</span> <span class="token class">.vcard</span> </span><span class="token punctuation">{</span>
        <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="运行天数"><a href="#运行天数" class="headerlink" title="运行天数"></a>运行天数</h1><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><p>路径：【Hexo\themes\ayer\layout_partial\footer.ejs】加入</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 运行天数 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>runtime_span<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><p>路径：【Hexo\themes\ayer\layout_partial\footer.ejs】加入，在runtime_span标签后加</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>            
    <span class="token keyword">function</span> <span class="token function">show_runtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"show_runtime()"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        X <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"02/22/2020 22:22:22"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Y <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        T <span class="token operator">=</span> <span class="token punctuation">(</span>Y<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> X<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        M <span class="token operator">=</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
        a <span class="token operator">=</span> T <span class="token operator">/</span> M<span class="token punctuation">;</span>
        A <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        b <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">-</span> A<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">;</span>
        B <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        c <span class="token operator">=</span> <span class="token punctuation">(</span>b <span class="token operator">-</span> B<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>
        C <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">-</span> B<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        D <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">-</span> C<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        runtime_span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"小站在各种崩坏中坚持了: "</span> <span class="token operator">+</span> A <span class="token operator">+</span> <span class="token string">"天"</span> <span class="token operator">+</span> B <span class="token operator">+</span> <span class="token string">"小时"</span> <span class="token operator">+</span> C <span class="token operator">+</span> <span class="token string">"分"</span> <span class="token operator">+</span> D <span class="token operator">+</span> <span class="token string">"秒"</span>
    <span class="token punctuation">}</span>
    <span class="token function">show_runtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="自我介绍botui机器人"><a href="#自我介绍botui机器人" class="headerlink" title="自我介绍botui机器人"></a>自我介绍botui机器人</h1><p>路径：【FHexo\source\about\index.md】</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">--</span><span class="token operator">-</span>
title<span class="token punctuation">:</span> about
date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">09</span> <span class="token number">19</span><span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">:</span><span class="token number">38</span>
<span class="token operator">--</span><span class="token operator">-</span>

<span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"entry-content"</span><span class="token operator">></span>
  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"hello-mashiro"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"popcontainer"</span> style<span class="token operator">=</span><span class="token string">"min-height: 300px; padding: 2px 6px 4px; background-color: rgba(242, 242, 242, 0.5); border-radius: 10px;"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>center<span class="token operator">></span>
    <span class="token operator">&lt;</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span>h4<span class="token operator">></span>
    与<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span>ruby<span class="token operator">></span>
    XXXZhy<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span>rp<span class="token operator">></span>
    （<span class="token operator">&lt;</span><span class="token operator">/</span>rp<span class="token operator">></span>
    <span class="token operator">&lt;</span>rp<span class="token operator">></span>
    ）<span class="token operator">&lt;</span><span class="token operator">/</span>rp<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ruby<span class="token operator">></span>
    通话中：<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>
    <span class="token operator">&lt;</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>center<span class="token operator">></span>
    <span class="token operator">&lt;</span>bot<span class="token operator">-</span>ui<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>botui<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>


<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/gh/HG95/CDN/botui_hhg.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>

<span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/botui/0.3.9/botui-theme-default.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span>
<span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/botui/0.3.9/botui.min.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>将上面这个的botui_xxxzhy.js下载下来，里面最后的对话改成自己的，再引进便可以了。</p>
<h1 id="文章顶置"><a href="#文章顶置" class="headerlink" title="文章顶置"></a>文章顶置</h1><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> uninstall hexo-generator-index --save
$ <span class="token function">npm</span> <span class="token function">install</span> hexo-generator-index-pin-top --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">index_generator</span><span class="token punctuation">:</span>
  <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">''</span>
  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">10</span>
  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>要在文章的开始加入 <code>top:</code> 是否开启置顶</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> Hexo博客Ayer主题自定义配置
<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-09-13 19:12:26</span>
<span class="token key atrule">categories</span><span class="token punctuation">:</span> Hexo
tags<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="页内音乐播放器"><a href="#页内音乐播放器" class="headerlink" title="页内音乐播放器"></a>页内音乐播放器</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-tag-aplayer<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>公式</strong></p>
<pre class="line-numbers language-yaml"><code class="language-yaml">&lt;<span class="token tag">!--</span> 简单示例 (id<span class="token punctuation">,</span> server<span class="token punctuation">,</span> type)  <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span>
&lt;<span class="token tag">!--</span> 网易云音乐的歌单id <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span>
<span class="token punctuation">{</span>% meting "60198" "netease" "playlist" %<span class="token punctuation">}</span>

&lt;<span class="token tag">!--</span> 进阶示例 <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span>
<span class="token punctuation">{</span>% meting "60198" "netease" "playlist" "autoplay" "mutex<span class="token punctuation">:</span>false" "listmaxheight<span class="token punctuation">:</span>340px" "preload<span class="token punctuation">:</span>none" "theme<span class="token punctuation">:</span><span class="token comment" spellcheck="true">#ad7a86"%}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>配置_config.yml文件</strong></p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">aplayer</span><span class="token punctuation">:</span>
  <span class="token key atrule">meting</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h1 id="中文链接转拼音"><a href="#中文链接转拼音" class="headerlink" title="中文链接转拼音"></a>中文链接转拼音</h1><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p>
<p>安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="添加视频"><a href="#添加视频" class="headerlink" title="添加视频"></a>添加视频</h1><p>直接在<code>.md</code> 文件中引入代码：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding-bottom</span><span class="token punctuation">:</span><span class="token number">75%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//player.bilibili.com/player.html?aid<span class="token punctuation">=</span>884294177&amp;bvid<span class="token punctuation">=</span>BV1iK4y1Y7dE&amp;cid<span class="token punctuation">=</span>227370204&amp;page<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span> 
<span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span>  <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">  
<span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span></span><span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div style="position:relative; width:100%; height:0; padding-bottom:75%;">
<iframe src="//player.bilibili.com/player.html?aid=884294177&amp;bvid=BV1iK4y1Y7dE&amp;cid=227370204&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" style="position:absolute; width:100%; height:100%;  left:0; top:0"> </iframe>
</div>
这里是先获取嵌入式分享的代码：

<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200913221431.png" alt="image-20200913221305549" style="zoom: 67%;">

<p>提取嵌入代码里面的 src ，并复制到上面的代码中。</p>
<h1 id="hexo中插入pdf"><a href="#hexo中插入pdf" class="headerlink" title="hexo中插入pdf"></a>hexo中插入pdf</h1><h2 id="安装hexo-pdf插件"><a href="#安装hexo-pdf插件" class="headerlink" title="安装hexo-pdf插件"></a>安装hexo-pdf插件</h2><p>插件地址：<a href="https://links.jianshu.com/go?to=https://github.com/superalsrk/hexo-pdf">hexo-pdf</a></p>
<p><strong>Install</strong></p>
<pre><code>$ npm install --save hexo-pdf</code></pre>
<h2 id="利用html语法"><a href="#利用html语法" class="headerlink" title="利用html语法"></a>利用html语法</h2><p>首先修改<code>_config.yml</code>文件</p>
<p><strong>将_config.yml中的post_asset_folder选项置为true</strong></p>
<p>当您设置post_asset_folder为true参数后，在建立文件时，Hexo 会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。</p>
<h2 id="直接使用"><a href="#直接使用" class="headerlink" title="直接使用"></a>直接使用</h2><p>在\themes\next\source\目录下创建file文件夹，将pdf文件丢进去，文章中引用：</p>
<pre><code>{% pdf /file/pdf文件%}</code></pre>
<p>如果使用外接链接，使用如下：</p>
<pre><code>外部链接：
{% pdf http://7xov2f.com1.z0.glb.clouddn.com/bash_freshman.pdf %}</code></pre>
<h1 id="在-Hexo-中插入-ECharts-动态图表"><a href="#在-Hexo-中插入-ECharts-动态图表" class="headerlink" title="在 Hexo 中插入 ECharts 动态图表"></a>在 Hexo 中插入 ECharts 动态图表</h1><h2 id="Hexo-中的-ECharts"><a href="#Hexo-中的-ECharts" class="headerlink" title="Hexo 中的 ECharts"></a>Hexo 中的 ECharts</h2><p>Hexo 的 <a href="https://github.com/quentin-chen/hexo-tag-echarts3">ECharts 插件</a>是我根据周旅军的原型插件[<a href="https://kchen.cc/2016/11/05/echarts-in-hexo/#fn:1">1]</a>开发的，已收录于 Hexo <a href="https://hexo.io/plugins/">官方插件页</a>。插件的安装和使用非常的简单，只需要进入博客目录，然后安装</p>
<pre><code>npm install hexo-tag-echarts3 --save</code></pre>
<p>之后在文章内使用 ECharts 的 <code>tag</code> 就可以了：</p>
<pre><code>{% echarts 400 '85%' %}
\\TODO option goes here
{% endecharts %}</code></pre>
<p>其中 <code>echarts</code> 是标签名，不需要更改，<code>400</code> 是图表容器的高度，<code>85%</code> 是图表容器的相对宽度。而在 <code>tag</code> 之间的部分，则是需要自己填充的图表数据了。</p>
<h1 id="利用Hexo-abbrlink插件生成唯一文章链接"><a href="#利用Hexo-abbrlink插件生成唯一文章链接" class="headerlink" title="利用Hexo-abbrlink插件生成唯一文章链接"></a>利用Hexo-abbrlink插件生成唯一文章链接</h1><p>安装</p>
<pre><code>npm install hexo-abbrlink --save</code></pre>
<p>修改 <code>_config.yml</code> 文件</p>
<pre><code>permalink: posts/:abbrlink/
# abbrlink config
abbrlink:
  alg: crc32      #support crc16(default) and crc32
  rep: hex        #support dec(default) and hex</code></pre>
<h1 id="日志的自动分类插件-hexo-auto-category"><a href="#日志的自动分类插件-hexo-auto-category" class="headerlink" title="日志的自动分类插件 hexo-auto-category"></a>日志的自动分类插件 hexo-auto-category</h1><p>安装</p>
<pre><code>$ npm install hexo-auto-category --save</code></pre>
<p>配置</p>
<p>在站点根目录下的<code>_config.yml</code>添加：</p>
<pre><code># Generate categories from directory-tree
# Dependencies: https://github.com/xu-song/hexo-auto-category
# depth: the depth of directory-tree you want to generate, should &gt; 0
auto_category:
 enable: true
 depth:</code></pre>
<h1 id="在Hexo博客中加入豆瓣读书页面"><a href="#在Hexo博客中加入豆瓣读书页面" class="headerlink" title="在Hexo博客中加入豆瓣读书页面"></a>在Hexo博客中加入豆瓣读书页面</h1><p><a href="https://bestzuo.cn/posts/hexo-douban.html">https://bestzuo.cn/posts/hexo-douban.html</a></p>
<h1 id="部署到github上"><a href="#部署到github上" class="headerlink" title="部署到github上"></a>部署到github上</h1><p><strong>安装插件：</strong></p>
<pre><code>npm install hexo-deployer-git --save</code></pre>
<p><strong>修改网站配置文件_config.yml,添加deploy信息：</strong></p>
<pre><code>deploy:
  type: git
  repository: https://github.com/HG95/HG95.github.io.git
  branch: master</code></pre>
<p>上面的repo的配置信息，替换成自己的项目名字</p>
<p><strong>生成SSH key:</strong></p>
<pre><code>$ ssh-agent bash</code></pre>
<p>以上命令回车，启动进程，后再输入命令：</p>
<pre><code>$ ssh-add ~/.ssh/id_rsa</code></pre>
<p>按照提示操作输入密码，</p>
<p>这样就在c盘对应位置生成了ssh-key；</p>
<p>配置github账户的ssh-key<br>打开id_rsa.pub文件将一整串公钥拷贝下来</p>
<p>进入你的github账户设置，在ssh and GPG keys中新增一个ssh key，如下</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201118202717.png" alt="image-20201118202440512" style="zoom: 33%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20201118202726.png" alt="image-20201118202520067" style="zoom:33%;">

<p>title随意，key填id_rsa.pub文件中内容，保存即可；</p>
<p>验证是否连接成功：</p>
<pre><code>$ ssh -T git@github.com</code></pre>
<p>出现下面的语句说明你的ssh key已经配置好了</p>
<pre><code>Hi wispyoureyes! You've successfully authenticated, but GitHub does not provide shell access.</code></pre>
<p>ok,到了这一步，本地跟远程github的连接已经建立，在项目中，直接生成静态文件，上传就可以了：</p>
<pre><code>$ hexo clean  //清除缓存文件db.json和已生成的静态文件public
$ hexo g   //生成网站静态文件到默认设置的public文件夹
$ hexo d   //部署网站到设定的仓库</code></pre>
<pre><code>hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo s

hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo deploy</code></pre>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.xxxzhy.com/2020/04/28/Hexo%E5%8D%9A%E5%AE%A2Ayer%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE/" target="_blank">Hexo博客Ayer主题自定义配置</a></li>
<li><a href="https://wenyan.online/2020/08/09/hexo-bo-ke-da-jian/" target="_blank">hexo博客搭建</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/76951130" target="_blank">免费CDN：jsDelivr+Github 使用方法</a></li>
<li><a href="https://jankin987.github.io/2018/09/19/02.Hexo/03.hexo%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%92%8Cpdf/" target="_blank">hexo配置本地图片和pdf</a>  </li>
<li><a href="https://segmentfault.com/a/1190000018250408" target="_blank">使用Hexo框架搭建博客，并部署到github上</a> </li>
<li><a href="https://kchen.cc/2016/11/05/echarts-in-hexo/" target="_blank">在 Hexo 中插入 ECharts 动态图表</a>  </li>
<li><a href="https://www.tony-bro.com/posts/2249267013/" target="_blank">Hexo插件推荐</a>   </li>
<li><a href="https://zhuanlan.zhihu.com/p/112318081" target="_blank">利用Hexo-abbrlink插件生成唯一文章链接</a>   </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>第一篇博客</title>
    <url>/posts/ff05b5bf/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>记录第一篇博客</p>
<a id="more"></a>

<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200912224352.jpg" alt="wallhaven-wy751x" style="zoom:80%;"><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
</search>
