<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo博客Ayer主题自定义配置</title>
    <url>/posts/e20385d1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>Ayer主题，下面是我的部分配置，可以参考，希望能帮到你</strong></p>
<a id="more"></a>

<h1 id="主要命令说明"><a href="#主要命令说明" class="headerlink" title="主要命令说明"></a>主要命令说明</h1><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 初始化网站 </span>
$ cd myblog 
$ hexo init 

<span class="token comment" spellcheck="true"># 新建一篇文章 </span>
$ hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> &lt;title<span class="token punctuation">></span> 
$ hexo new post "article_name" <span class="token comment" spellcheck="true"># 新建文章 </span>
$ hexo new page "name" <span class="token comment" spellcheck="true"># 少用 </span>

<span class="token comment" spellcheck="true"># 生成静态文件,可简写为 hexo g </span>
$ hexo generate 
$ hexo g <span class="token comment" spellcheck="true">#</span>

生成草稿 
$ hexo putlish <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> &lt;filename<span class="token punctuation">></span> 

<span class="token comment" spellcheck="true"># 启动服务器 可以简写为 hexo s </span>
$ hexo server <span class="token comment" spellcheck="true"># 参数: -p:指定端口 </span>
<span class="token comment" spellcheck="true"># -s:只使用静态文件 </span>
<span class="token comment" spellcheck="true"># -i:指定ip地址 </span>

<span class="token comment" spellcheck="true"># 部署网站,可以简写为 hexo d </span>
$ hexo deploy 

<span class="token comment" spellcheck="true"># 清除缓存文件 db.json 和已经成成的静态文件 public </span>
$hexo clean 

<span class="token comment" spellcheck="true"># 查看版本 </span>
$ hexo version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h1><p>由于<code>Hex 自带的代码高亮主题显示不好看，所以主题中使用到了 [hexo-prism-plugin](https://github.com/ele828/hexo-prism-plugin) 的</code>Hexo插件来做代码高亮，安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后，修改 <code>Hexo </code>根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 44行 打开生成文件时同时生成文件夹 </span>
<span class="token key atrule">post_asset_folder</span><span class="token punctuation">:</span> <span class="token boolean important">true </span>
<span class="token key atrule">highlight</span><span class="token punctuation">:</span> 
    <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false </span>

<span class="token comment" spellcheck="true">#prismjs:</span>
<span class="token comment" spellcheck="true">#  enable: false</span>
<span class="token comment" spellcheck="true">#  preprocess: true</span>
<span class="token comment" spellcheck="true">#  line_number: true</span>
<span class="token comment" spellcheck="true">#  tab_replace: ''</span>

<span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span> 
    <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span> <span class="token comment" spellcheck="true"># realtime/preprocess </span>
    <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span> 
    <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># default false </span>
    custom_css<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h1><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>
 <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml
 <span class="token key atrule">field</span><span class="token punctuation">:</span> post<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="文章字数统计"><a href="#文章字数统计" class="headerlink" title="文章字数统计"></a>文章字数统计</h1><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a>插件。</p>
<p>安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span> 
    <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true </span>
    <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false </span>
    <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置文章字数统计为 true. </span>
    <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置站点文章总字数统计为 true. </span>
    <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读时长. </span>
    <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读次数.</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="EVANYOU三角彩带背景"><a href="#EVANYOU三角彩带背景" class="headerlink" title="EVANYOU三角彩带背景"></a>EVANYOU三角彩带背景</h1><h2 id="引入位置"><a href="#引入位置" class="headerlink" title="引入位置"></a>引入位置</h2><p>路径：【Hexo\themes\ayer\layout\layout.ejs】</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/head'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
<span class="token operator">&lt;</span>body<span class="token operator">></span>
  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>main <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"content on"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> body <span class="token operator">%</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/footer'</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>cache<span class="token punctuation">:</span> <span class="token operator">!</span>config<span class="token punctuation">.</span>relative_link<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"float_btns"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/totop'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>main<span class="token operator">></span>
    <span class="token operator">&lt;</span>aside <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"sidebar on"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/sidebar'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>aside<span class="token operator">></span>
    <span class="token operator">&lt;</span>script<span class="token operator">></span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">"(max-width: 768px)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.content'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'on'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.sidebar'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'on'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/modal'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/after-footer'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>

    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>music<span class="token operator">&amp;&amp;</span>theme<span class="token punctuation">.</span>music<span class="token punctuation">.</span>enable<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/music'</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 三角彩带背景 <span class="token operator">--</span><span class="token operator">></span>
  <span class="token operator">&lt;</span>canvas id<span class="token operator">=</span><span class="token string">"evanyou-canvas"</span> style<span class="token operator">=</span><span class="token string">"opacity: 0.3; position: fixed; top: 0px; left: 0px; z-index: -1; width: 100%; height: 100%; pointer-events: none;"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>canvas<span class="token operator">></span>
  <span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/gh/XXXZhy/Blog_Image/js/evanyou_canvas.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Valine评论框加背景"><a href="#Valine评论框加背景" class="headerlink" title="Valine评论框加背景"></a>Valine评论框加背景</h1><p>路径：【Hexo\themes\ayer\layout_partial\post\valine.ejs】</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(!index</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.leancloud</span> <span class="token attr-name">&amp;&amp;</span> <span class="token attr-name">theme.leancloud.enable){</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- valine评论 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vcomments-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>vcomments<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//cdn1.lncld.net/static/js/3.0.4/av-min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- &lt;script src='https://cdn.jsdelivr.net/npm/valine@1.3.10/dist/Valine.min.js'>&lt;/script> --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//unpkg.com/valine/dist/Valine.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- 评论背景 --></span>                                                         
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
    <span class="token selector"><span class="token id">#veditor</span></span><span class="token punctuation">{</span><span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">10</span>rem<span class="token punctuation">;</span>
        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url(https://gitee.com/cungudafa/source/raw/master/img/gif/katon/pinkcoolpig.gif)</span><span class="token punctuation">;</span>
        <span class="token property">background-size</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span>
        <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>
        <span class="token property">background-position</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">255</span>,<span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token property">resize</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token comment" spellcheck="true">&lt;!-- Valine配置 --></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">
    <span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        el<span class="token punctuation">:</span> <span class="token string">'#vcomments'</span><span class="token punctuation">,</span>
        enableQQ<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        app_id<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.leancloud.app_id %>'</span><span class="token punctuation">,</span>
        app_key<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.leancloud.app_key %>'</span><span class="token punctuation">,</span>
        path<span class="token punctuation">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">,</span>
        <span class="token comment" spellcheck="true">//notify: '&lt;%- theme.valine.notify %>',</span>
        <span class="token comment" spellcheck="true">//verify: '&lt;%- theme.valine.verify %>',</span>
        avatar<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.avatar %>'</span><span class="token punctuation">,</span>
        placeholder<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.placeholder %>'</span><span class="token punctuation">,</span>
        recordIP<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>

        <span class="token comment" spellcheck="true">// 设置Bilibili表情包地址</span>
        emojiCDN<span class="token punctuation">:</span> <span class="token string">'https://cdn.jsdelivr.net/gh/XXXZhy/Blog_Image/valine_emoticon/'</span><span class="token punctuation">,</span> 
        <span class="token comment" spellcheck="true">// 表情title和图片映射</span>
        emojiMaps<span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">"墙角滑稽"</span><span class="token punctuation">:</span> <span class="token string">"害怕滑稽.gif"</span><span class="token punctuation">,</span>
            <span class="token string">"仙女下凡"</span><span class="token punctuation">:</span> <span class="token string">"仙女下凡.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"听歌"</span><span class="token punctuation">:</span> <span class="token string">"听歌.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"嫌弃"</span><span class="token punctuation">:</span> <span class="token string">"嫌弃.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"害羞"</span><span class="token punctuation">:</span> <span class="token string">"害羞.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"彩虹滑稽"</span><span class="token punctuation">:</span> <span class="token string">"彩虹滑稽.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"快走"</span><span class="token punctuation">:</span> <span class="token string">"快走.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"扯脸"</span><span class="token punctuation">:</span> <span class="token string">"扯脸.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"摸脸"</span><span class="token punctuation">:</span> <span class="token string">"摸脸.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"流汗"</span><span class="token punctuation">:</span> <span class="token string">"流汗.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"滑滑板"</span><span class="token punctuation">:</span> <span class="token string">"滑滑板.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"点赞"</span><span class="token punctuation">:</span> <span class="token string">"点赞.webp"</span><span class="token punctuation">,</span>
            <span class="token string">"转圈圈"</span><span class="token punctuation">:</span> <span class="token string">"转圈圈.webp"</span><span class="token punctuation">,</span>
            <span class="token comment" spellcheck="true">// ... 更多表情</span>
        <span class="token punctuation">}</span>     
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> infoEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#vcomments .info'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>infoEle <span class="token operator">&amp;&amp;</span> infoEle<span class="token punctuation">.</span>childNodes <span class="token operator">&amp;&amp;</span> infoEle<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        infoEle<span class="token punctuation">.</span>childNodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            item<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">
    <span class="token selector"><span class="token id">#vcomments-box</span> </span><span class="token punctuation">{</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">30</span>px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token atrule"><span class="token rule">@media</span> screen and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>
        <span class="token selector"><span class="token id">#vcomments-box</span> </span><span class="token punctuation">{</span>
            <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">0</span>px<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token selector"><span class="token id">#vcomments-box</span> <span class="token id">#vcomments</span> </span><span class="token punctuation">{</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector"><span class="token class">.v</span> <span class="token class">.vlist</span> <span class="token class">.vcard</span> <span class="token class">.vh</span> </span><span class="token punctuation">{</span>
        <span class="token property">padding-right</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector"><span class="token class">.v</span> <span class="token class">.vlist</span> <span class="token class">.vcard</span> </span><span class="token punctuation">{</span>
        <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="运行天数"><a href="#运行天数" class="headerlink" title="运行天数"></a>运行天数</h1><h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><p>路径：【Hexo\themes\ayer\layout_partial\footer.ejs】加入</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 运行天数 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>runtime_span<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><p>路径：【Hexo\themes\ayer\layout_partial\footer.ejs】加入，在runtime_span标签后加</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>            
    <span class="token keyword">function</span> <span class="token function">show_runtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">"show_runtime()"</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        X <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"02/22/2020 22:22:22"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        Y <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        T <span class="token operator">=</span> <span class="token punctuation">(</span>Y<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> X<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        M <span class="token operator">=</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
        a <span class="token operator">=</span> T <span class="token operator">/</span> M<span class="token punctuation">;</span>
        A <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        b <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">-</span> A<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">;</span>
        B <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        c <span class="token operator">=</span> <span class="token punctuation">(</span>b <span class="token operator">-</span> B<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">;</span>
        C <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>b <span class="token operator">-</span> B<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        D <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">-</span> C<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        runtime_span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"小站在各种崩坏中坚持了: "</span> <span class="token operator">+</span> A <span class="token operator">+</span> <span class="token string">"天"</span> <span class="token operator">+</span> B <span class="token operator">+</span> <span class="token string">"小时"</span> <span class="token operator">+</span> C <span class="token operator">+</span> <span class="token string">"分"</span> <span class="token operator">+</span> D <span class="token operator">+</span> <span class="token string">"秒"</span>
    <span class="token punctuation">}</span>
    <span class="token function">show_runtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="自我介绍botui机器人"><a href="#自我介绍botui机器人" class="headerlink" title="自我介绍botui机器人"></a>自我介绍botui机器人</h1><p>路径：【FHexo\source\about\index.md】</p>
<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">--</span><span class="token operator">-</span>
title<span class="token punctuation">:</span> about
date<span class="token punctuation">:</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">05</span><span class="token operator">-</span><span class="token number">09</span> <span class="token number">19</span><span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">:</span><span class="token number">38</span>
<span class="token operator">--</span><span class="token operator">-</span>

<span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"entry-content"</span><span class="token operator">></span>
  <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"hello-mashiro"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"popcontainer"</span> style<span class="token operator">=</span><span class="token string">"min-height: 300px; padding: 2px 6px 4px; background-color: rgba(242, 242, 242, 0.5); border-radius: 10px;"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>center<span class="token operator">></span>
    <span class="token operator">&lt;</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span>h4<span class="token operator">></span>
    与<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span>ruby<span class="token operator">></span>
    XXXZhy<span class="token operator">&amp;</span>nbsp<span class="token punctuation">;</span><span class="token operator">&lt;</span>rp<span class="token operator">></span>
    （<span class="token operator">&lt;</span><span class="token operator">/</span>rp<span class="token operator">></span>
    <span class="token operator">&lt;</span>rp<span class="token operator">></span>
    ）<span class="token operator">&lt;</span><span class="token operator">/</span>rp<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ruby<span class="token operator">></span>
    通话中：<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>
    <span class="token operator">&lt;</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>center<span class="token operator">></span>
    <span class="token operator">&lt;</span>bot<span class="token operator">-</span>ui<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>botui<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>


<span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://cdn.jsdelivr.net/gh/HG95/CDN/botui_hhg.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>

<span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/botui/0.3.9/botui-theme-default.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span>
<span class="token operator">&lt;</span>link href<span class="token operator">=</span><span class="token string">"https://cdn.bootcss.com/botui/0.3.9/botui.min.css"</span> rel<span class="token operator">=</span><span class="token string">"stylesheet"</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>将上面这个的botui_xxxzhy.js下载下来，里面最后的对话改成自己的，再引进便可以了。</p>
<h1 id="文章顶置"><a href="#文章顶置" class="headerlink" title="文章顶置"></a>文章顶置</h1><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">npm</span> uninstall hexo-generator-index --save
$ <span class="token function">npm</span> <span class="token function">install</span> hexo-generator-index-pin-top --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">index_generator</span><span class="token punctuation">:</span>
  <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">''</span>
  <span class="token key atrule">per_page</span><span class="token punctuation">:</span> <span class="token number">10</span>
  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>要在文章的开始加入 <code>top:</code> 是否开启置顶</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> Hexo博客Ayer主题自定义配置
<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2020-09-13 19:12:26</span>
<span class="token key atrule">categories</span><span class="token punctuation">:</span> Hexo
tags<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="页内音乐播放器"><a href="#页内音乐播放器" class="headerlink" title="页内音乐播放器"></a>页内音乐播放器</h1><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save hexo-tag-aplayer<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>公式</strong></p>
<pre class="line-numbers language-yaml"><code class="language-yaml">&lt;<span class="token tag">!--</span> 简单示例 (id<span class="token punctuation">,</span> server<span class="token punctuation">,</span> type)  <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span>
&lt;<span class="token tag">!--</span> 网易云音乐的歌单id <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span>
<span class="token punctuation">{</span>% meting "60198" "netease" "playlist" %<span class="token punctuation">}</span>

&lt;<span class="token tag">!--</span> 进阶示例 <span class="token punctuation">-</span><span class="token punctuation">-</span><span class="token punctuation">></span>
<span class="token punctuation">{</span>% meting "60198" "netease" "playlist" "autoplay" "mutex<span class="token punctuation">:</span>false" "listmaxheight<span class="token punctuation">:</span>340px" "preload<span class="token punctuation">:</span>none" "theme<span class="token punctuation">:</span><span class="token comment" spellcheck="true">#ad7a86"%}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p><strong>配置_config.yml文件</strong></p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">aplayer</span><span class="token punctuation">:</span>
  <span class="token key atrule">meting</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h1 id="中文链接转拼音"><a href="#中文链接转拼音" class="headerlink" title="中文链接转拼音"></a>中文链接转拼音</h1><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p>
<p>安装命令如下：</p>
<pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p>
<pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>
  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<h1 id="添加视频"><a href="#添加视频" class="headerlink" title="添加视频"></a>添加视频</h1><p>直接在<code>.md</code> 文件中引入代码：</p>
<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">padding-bottom</span><span class="token punctuation">:</span><span class="token number">75%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>//player.bilibili.com/player.html?aid<span class="token punctuation">=</span>884294177&amp;bvid<span class="token punctuation">=</span>BV1iK4y1Y7dE&amp;cid<span class="token punctuation">=</span>227370204&amp;page<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span> 
<span class="token attr-name">scrolling</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span>  <span class="token attr-name">framespacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">  
<span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span> <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span></span><span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<div style="position:relative; width:100%; height:0; padding-bottom:75%;">
<iframe src="//player.bilibili.com/player.html?aid=884294177&amp;bvid=BV1iK4y1Y7dE&amp;cid=227370204&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" style="position:absolute; width:100%; height:100%;  left:0; top:0"> </iframe>
</div>
这里是先获取嵌入式分享的代码：

<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200913221431.png" alt="image-20200913221305549" style="zoom: 67%;">

<p>提取嵌入代码里面的 src ，并复制到上面的代码中。</p>
<h1 id="hexo中插入pdf"><a href="#hexo中插入pdf" class="headerlink" title="hexo中插入pdf"></a>hexo中插入pdf</h1><h2 id="安装hexo-pdf插件"><a href="#安装hexo-pdf插件" class="headerlink" title="安装hexo-pdf插件"></a>安装hexo-pdf插件</h2><p>插件地址：<a href="https://links.jianshu.com/go?to=https://github.com/superalsrk/hexo-pdf">hexo-pdf</a></p>
<p><strong>Install</strong></p>
<pre><code>$ npm install --save hexo-pdf</code></pre>
<h2 id="利用html语法"><a href="#利用html语法" class="headerlink" title="利用html语法"></a>利用html语法</h2><p>首先修改<code>_config.yml</code>文件</p>
<p><strong>将_config.yml中的post_asset_folder选项置为true</strong></p>
<p>当您设置post_asset_folder为true参数后，在建立文件时，Hexo 会自动建立一个与文章同名的文件夹，您可以把与该文章相关的所有资源都放到那个文件夹，如此一来，您便可以更方便的使用资源。</p>
<h2 id="直接使用"><a href="#直接使用" class="headerlink" title="直接使用"></a>直接使用</h2><p>在\themes\next\source\目录下创建file文件夹，将pdf文件丢进去，文章中引用：</p>
<pre><code>{% pdf /file/pdf文件%}</code></pre>
<p>如果使用外接链接，使用如下：</p>
<pre><code>外部链接：
{% pdf http://7xov2f.com1.z0.glb.clouddn.com/bash_freshman.pdf %}</code></pre>
<h1 id="在-Hexo-中插入-ECharts-动态图表"><a href="#在-Hexo-中插入-ECharts-动态图表" class="headerlink" title="在 Hexo 中插入 ECharts 动态图表"></a>在 Hexo 中插入 ECharts 动态图表</h1><h2 id="Hexo-中的-ECharts"><a href="#Hexo-中的-ECharts" class="headerlink" title="Hexo 中的 ECharts"></a>Hexo 中的 ECharts</h2><p>Hexo 的 <a href="https://github.com/quentin-chen/hexo-tag-echarts3">ECharts 插件</a>是我根据周旅军的原型插件[<a href="https://kchen.cc/2016/11/05/echarts-in-hexo/#fn:1">1]</a>开发的，已收录于 Hexo <a href="https://hexo.io/plugins/">官方插件页</a>。插件的安装和使用非常的简单，只需要进入博客目录，然后安装</p>
<pre><code>npm install hexo-tag-echarts3 --save</code></pre>
<p>之后在文章内使用 ECharts 的 <code>tag</code> 就可以了：</p>
<pre><code>{% echarts 400 '85%' %}
\\TODO option goes here
{% endecharts %}</code></pre>
<p>其中 <code>echarts</code> 是标签名，不需要更改，<code>400</code> 是图表容器的高度，<code>85%</code> 是图表容器的相对宽度。而在 <code>tag</code> 之间的部分，则是需要自己填充的图表数据了。</p>
<h1 id="利用Hexo-abbrlink插件生成唯一文章链接"><a href="#利用Hexo-abbrlink插件生成唯一文章链接" class="headerlink" title="利用Hexo-abbrlink插件生成唯一文章链接"></a>利用Hexo-abbrlink插件生成唯一文章链接</h1><p>安装</p>
<pre><code>npm install hexo-abbrlink --save</code></pre>
<p>修改 <code>_config.yml</code> 文件</p>
<pre><code>permalink: posts/:abbrlink/
# abbrlink config
abbrlink:
  alg: crc32      #support crc16(default) and crc32
  rep: hex        #support dec(default) and hex</code></pre>
<h1 id="日志的自动分类插件-hexo-auto-category"><a href="#日志的自动分类插件-hexo-auto-category" class="headerlink" title="日志的自动分类插件 hexo-auto-category"></a>日志的自动分类插件 hexo-auto-category</h1><p>安装</p>
<pre><code>$ npm install hexo-auto-category --save</code></pre>
<p>配置</p>
<p>在站点根目录下的<code>_config.yml</code>添加：</p>
<pre><code># Generate categories from directory-tree
# Dependencies: https://github.com/xu-song/hexo-auto-category
# depth: the depth of directory-tree you want to generate, should &gt; 0
auto_category:
 enable: true
 depth:</code></pre>
<h1 id="在Hexo博客中加入豆瓣读书页面"><a href="#在Hexo博客中加入豆瓣读书页面" class="headerlink" title="在Hexo博客中加入豆瓣读书页面"></a>在Hexo博客中加入豆瓣读书页面</h1><p><a href="https://bestzuo.cn/posts/hexo-douban.html">https://bestzuo.cn/posts/hexo-douban.html</a></p>
<h1 id="部署到github上"><a href="#部署到github上" class="headerlink" title="部署到github上"></a>部署到github上</h1><p><strong>安装插件：</strong></p>
<pre><code>npm install hexo-deployer-git --save</code></pre>
<p><strong>修改网站配置文件_config.yml,添加deploy信息：</strong></p>
<pre><code>deploy:
  type: git
  repository: https://github.com/HG95/HG95.github.io.git
  branch: master</code></pre>
<p>上面的repo的配置信息，替换成自己的项目名字</p>
<p><strong>生成SSH key:</strong></p>
<pre><code>$ ssh-agent bash</code></pre>
<p>以上命令回车，启动进程，后再输入命令：</p>
<pre><code>$ ssh-add ~/.ssh/id_rsa</code></pre>
<p>按照提示操作输入密码，</p>
<p>这样就在c盘对应位置生成了ssh-key；</p>
<p>配置github账户的ssh-key<br>打开id_rsa.pub文件将一整串公钥拷贝下来</p>
<p>进入你的github账户设置，在ssh and GPG keys中新增一个ssh key，如下</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201118202717.png" alt="image-20201118202440512" style="zoom: 33%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20201118202726.png" alt="image-20201118202520067" style="zoom:33%;">

<p>title随意，key填id_rsa.pub文件中内容，保存即可；</p>
<p>验证是否连接成功：</p>
<pre><code>$ ssh -T git@github.com</code></pre>
<p>出现下面的语句说明你的ssh key已经配置好了</p>
<pre><code>Hi wispyoureyes! You've successfully authenticated, but GitHub does not provide shell access.</code></pre>
<p>ok,到了这一步，本地跟远程github的连接已经建立，在项目中，直接生成静态文件，上传就可以了：</p>
<pre><code>$ hexo clean  //清除缓存文件db.json和已生成的静态文件public
$ hexo g   //生成网站静态文件到默认设置的public文件夹
$ hexo d   //部署网站到设定的仓库</code></pre>
<pre><code>hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo s

hexo clean &amp;&amp; hexo douban -bgm &amp;&amp; hexo g &amp;&amp; hexo deploy</code></pre>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.xxxzhy.com/2020/04/28/Hexo%E5%8D%9A%E5%AE%A2Ayer%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE/" target="_blank">Hexo博客Ayer主题自定义配置</a></li>
<li><a href="https://wenyan.online/2020/08/09/hexo-bo-ke-da-jian/" target="_blank">hexo博客搭建</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/76951130" target="_blank">免费CDN：jsDelivr+Github 使用方法</a></li>
<li><a href="https://jankin987.github.io/2018/09/19/02.Hexo/03.hexo%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87%E5%92%8Cpdf/" target="_blank">hexo配置本地图片和pdf</a>  </li>
<li><a href="https://segmentfault.com/a/1190000018250408" target="_blank">使用Hexo框架搭建博客，并部署到github上</a> </li>
<li><a href="https://kchen.cc/2016/11/05/echarts-in-hexo/" target="_blank">在 Hexo 中插入 ECharts 动态图表</a>  </li>
<li><a href="https://www.tony-bro.com/posts/2249267013/" target="_blank">Hexo插件推荐</a>   </li>
<li><a href="https://zhuanlan.zhihu.com/p/112318081" target="_blank">利用Hexo-abbrlink插件生成唯一文章链接</a>   </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>『Arcpy』 像元统计 (Spatial Analyst)</title>
    <url>/posts/2c5ccb85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>根据多个栅格数据计算每个像元的统计数据。</p>
<p>可用的统计数据有：众数、最大值、均值、中位数、最小值、少数、范围、标准差、总和及变异度。</p>
<a id="more"></a>

<h1 id="插图"><a href="#插图" class="headerlink" title="插图"></a>插图</h1><img src="https://gitee.com/HHG1092090447/img/raw/master/20210104142724.png" alt="GUID-D8BD897C-B7A2-46A5-93DC-121409FF4C0D-web">

<p><em>OutRas = CellStatistics([InRas1, InRas2, InRas3], “SUM”, “NODATA”, “SINGLE_BAND”)</em></p>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><ul>
<li><p>使用此工具时输入栅格的顺序不重要。</p>
</li>
<li><p>对于最大值、最小值、均值、中位数、众数、少数及总和统计数据类型，如果将单个栅格数据用作输入，则输出像元值将与输入像元值相同。对于范围和标准偏差，输出像元值将全部为 0。对于 Variety，它将是 1。</p>
</li>
<li><p>如果未选中<strong>以多波段方式处理</strong>参数（在 Python 中，process_as_multiband 设置为 SINGLE_BAND），则来自多波段栅格输入的每个波段都将分别作为单波段栅格进行处理，且输出将是单波段栅格。</p>
<img src="https://gitee.com/HHG1092090447/img/raw/master/20210104142811.png" alt="GUID-65E29EE7-3679-4CE0-833A-E3F29F1EB319-web">

<p><em>当作为 SINGLE_BAND 进行处理时，像元统计工具将创建单波段输出。</em></p>
</li>
<li><p>如果选中<strong>以多波段方式处理</strong>参数（在 Python 中，process_as_multiband 设定为 MULTI_BAND），每个多波段栅格输入都将被作为多波段栅格进行处理，而输出将是多波段栅格。如果输入是多波段栅格和常量的组合，则输出栅格也将是多波段。每个多波段输入中的波段数必须相同。</p>
<p>该工具将使用另一个输入的相应波段对一个输入的每个波段执行操作。如果输入之一是多波段栅格，而另一个输入是常量，则该工具将使用多波段输入中每个波段的常量值执行操作。</p>
<img src="https://gitee.com/HHG1092090447/img/raw/master/20210104142825.png" alt="GUID-E2051A7D-8304-4CC0-B57F-EF9F68690906-web">

<p><em>当作为 MULTI_BAND 进行处理时，像元统计工具将创建多波段输出。</em></p>
</li>
</ul>
<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><pre class="line-numbers language-python"><code class="language-python">CellStatistics<span class="token punctuation">(</span>in_rasters_or_constants<span class="token punctuation">,</span> <span class="token punctuation">{</span>statistics_type<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>ignore_nodata<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>process_as_multiband<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><table>
<thead>
<tr>
<th>参数</th>
<th align="left">说明</th>
<th>数据类型</th>
</tr>
</thead>
<tbody><tr>
<td>in_rasters_or_constants<br>[in_raster_or_constant,…]</td>
<td align="left">输入栅格列表，将为其中的输入栅格计算“分析”窗口中各个像元的统计数据。可使用一个数字作为输入；但是，像元大小和范围必须先在环境中进行设置。如果将 processing_as_multiband 参数设置为 MULTI_BAND，则所有多波段输入应具有相等数量的波段。</td>
<td>Raster Layer; Constant</td>
</tr>
<tr>
<td>statistics_type（可选）</td>
<td align="left">指定要计算的统计数据类型。MEAN —将计算输入的平均值。MAJORITY —将计算输入的众数（出现次数最多的值）。MAXIMUM —将计算输入的最大值。MEDIAN —将计算输入的中值。MINIMUM —将计算输入的最小值。MINORITY —将计算输入的少数（出现次数最少的值）。RANGE —将计算输入的范围（最大值和最小值之差）。STD —将计算输入的标准偏差。SUM —将计算输入的总和（所有值的总和）。VARIETY —将计算输入的变异度（唯一值的数量）。默认统计类型为平均值。</td>
<td>String</td>
</tr>
<tr>
<td>ignore_nodata（可选）</td>
<td align="left">指定在进行统计计算时是否将忽略 NoData 值。DATA —在处理像元位置处，如果任意输入栅格具有 NoData，将忽略该 NoData 值。仅考虑具有有效数据的像元来计算统计数据。这是默认设置。NODATA —如果任意输入栅格的处理像元位置为 NoData，该像元的输出将为 NoData。</td>
<td>Boolean</td>
</tr>
<tr>
<td>process_as_multiband（可选）</td>
<td align="left">指定如何处理输入多波段栅格波段。SINGLE_BAND —来自多波段栅格输入的每个波段将被单独处理为单波段栅格。这是默认设置。MULTI_BAND —每个多波段栅格输入都将作为多波段栅格进行处理。将使用其他输入的相应波段数对一个输入的每个波段执行操作。</td>
<td>Boolean</td>
</tr>
</tbody></table>
<h3 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h3><table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
<th>数据类型</th>
</tr>
</thead>
<tbody><tr>
<td>out_raster</td>
<td>输出栅格。对于各个像元，可通过将指定统计数据类型应用到该位置处的输入栅格来确定该值。</td>
<td>Raster</td>
</tr>
</tbody></table>
<h1 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h1><p>CellStatistics 示例 1（Python 窗口）</p>
<p>在本示例中，将针对多个输入 Grid 栅格中的每个像元计算标准差，并将结果输出为 IMG 栅格。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
<span class="token keyword">from</span> arcpy <span class="token keyword">import</span> env
<span class="token keyword">from</span> arcpy<span class="token punctuation">.</span>sa <span class="token keyword">import</span> <span class="token operator">*</span>
env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> <span class="token string">"C:/sapyexamples/data"</span>
outCellStats <span class="token operator">=</span> CellStatistics<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"degs"</span><span class="token punctuation">,</span> <span class="token string">"negs"</span><span class="token punctuation">,</span> <span class="token string">"cost"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"STD"</span><span class="token punctuation">,</span> <span class="token string">"DATA"</span><span class="token punctuation">)</span>
outCellStats<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">"C:/sapyexamples/output/outcellstats.img"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>在自己使用的过程中发现需要将计算的影像放到同一个文件夹下，才能正确的运行程序，</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span>


<span class="token keyword">import</span> arcpy
<span class="token keyword">from</span> arcpy <span class="token keyword">import</span> env
<span class="token keyword">from</span> arcpy<span class="token punctuation">.</span>sa <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> os
<span class="token keyword">import</span> shutil


arcpy<span class="token punctuation">.</span>CheckOutExtension<span class="token punctuation">(</span><span class="token string">"ImageAnalyst"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 检查许可</span>
arcpy<span class="token punctuation">.</span>CheckOutExtension<span class="token punctuation">(</span><span class="token string">"spatial"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 检查许可</span>


<span class="token keyword">def</span> <span class="token function">mean_tif</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> o_tif<span class="token punctuation">)</span><span class="token punctuation">:</span>
    arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> t
    Rasters <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListRasters<span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token string">'tif'</span><span class="token punctuation">)</span>
    outCellStatistics <span class="token operator">=</span> CellStatistics<span class="token punctuation">(</span>Rasters<span class="token punctuation">,</span> <span class="token string">"MEAN"</span><span class="token punctuation">)</span>
    outCellStatistics<span class="token punctuation">.</span>save<span class="token punctuation">(</span>o_tif<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">del_file</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    paths <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span> file<span class="token punctuation">)</span> <span class="token keyword">for</span> file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> file <span class="token keyword">in</span> paths<span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>file<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">parse_tif</span><span class="token punctuation">(</span>day<span class="token punctuation">,</span> night<span class="token punctuation">,</span> temporary_file<span class="token punctuation">,</span> out<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>temporary_file<span class="token punctuation">)</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>te<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>out<span class="token punctuation">)</span>

    days <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>day<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">for</span> name <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>day<span class="token punctuation">)</span><span class="token punctuation">]</span>
    nights <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>night<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">for</span> name <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>night<span class="token punctuation">)</span><span class="token punctuation">]</span>
    outs <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>out<span class="token punctuation">,</span> name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'LST_Day_1km'</span><span class="token punctuation">,</span> <span class="token string">'mean'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> name <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>day<span class="token punctuation">)</span><span class="token punctuation">]</span>

    <span class="token keyword">for</span> d_tif<span class="token punctuation">,</span> n_tif<span class="token punctuation">,</span> o_tif <span class="token keyword">in</span> zip<span class="token punctuation">(</span>days<span class="token punctuation">,</span> nights<span class="token punctuation">,</span> outs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>d_tif<span class="token punctuation">,</span> temporary_file<span class="token punctuation">)</span>
        shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>n_tif<span class="token punctuation">,</span> temporary_file<span class="token punctuation">)</span>
        mean_tif<span class="token punctuation">(</span>temporary_file<span class="token punctuation">,</span> o_tif<span class="token punctuation">)</span>
        <span class="token keyword">print</span> d_tif<span class="token punctuation">,</span> n_tif
        del_file<span class="token punctuation">(</span>temporary_file<span class="token punctuation">)</span>

    shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>temporary_file<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    day <span class="token operator">=</span> r<span class="token string">'F:\CodeFile\d'</span>
    night <span class="token operator">=</span> r<span class="token string">'F:\CodeFile\n'</span>
    <span class="token comment" spellcheck="true"># 临时文件夹,如何不存在,会自动建立,程序运行完会自动删除</span>
    te <span class="token operator">=</span> r<span class="token string">'F:\CodeFile\means'</span>
    <span class="token comment" spellcheck="true"># 文件输出,如何不存在,会自动建立</span>
    out_file <span class="token operator">=</span> r<span class="token string">'F:\CodeFile\mean'</span>

    parse_tif<span class="token punctuation">(</span>day<span class="token punctuation">,</span> night<span class="token punctuation">,</span> te<span class="token punctuation">,</span> out_file<span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/spatial-analyst/cell-statistics.htm">像元统计 (Spatial Analyst)</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Arcpy</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>Arcpy</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 多元拟合分析</title>
    <url>/posts/5f339216/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>多元回归分析</p>
<a id="more"></a>

<p>加载excel数据，将excel拖入origin，选择第一行将其转为长名称：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215552.png" alt="image-20210103214203462" style="zoom:80%;">

<h1 id="多元回归分析——带截距"><a href="#多元回归分析——带截距" class="headerlink" title="多元回归分析——带截距"></a>多元回归分析——带截距</h1><p>上方菜单栏：<code>Analysis</code>-&gt;<code>Fitting</code>-&gt;<code>Multiple Linear Regression</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215559.png" alt="image-20210103214535901" style="zoom:80%;">

<p>数据选择：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215604.png" alt="image-20210103214738950" style="zoom: 80%;">

<p>其它参数默认即可，点击🆗，得到拟合的结果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215609.png" alt="image-20210103214904529" style="zoom: 67%;">

<h1 id="多元回归分析——自定义截距"><a href="#多元回归分析——自定义截距" class="headerlink" title="多元回归分析——自定义截距"></a>多元回归分析——自定义截距</h1><p>打开多元回归分析的对话框，数据选择后，切换到<code>Fit Control</code>,如图所示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215619.png" alt="image-20210103215212812" style="zoom:80%;">

<p>点击🆗，和上面的结果相比可以看到截距为0：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103215628.png" alt="image-20210103215424336" style="zoom:67%;">

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.bilibili.com/video/BV1jK411g7gq">回归拟合分析</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
        <tag>多元拟合分析</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』  柱状图</title>
    <url>/posts/c093d808/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><img src="https://raw.githubusercontent.com/HG95/image/master/20210101120601.png" alt="主要内容" style="zoom:150%;">





<a id="more"></a>

<h1 id="一、单一柱状图"><a href="#一、单一柱状图" class="headerlink" title="一、单一柱状图"></a>一、单一柱状图</h1><ul>
<li><p>数据整理<br>将柱状图的状态名称作为x轴（A列），各个状态的指标（COD）作为Y轴（B列）</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120115.png" alt="image-20201212225711708" style="zoom:67%;">
</li>
<li><p>选中A、B两列，【Plot】-【column/bar/pie】-【coloumn】</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120119.png" alt="image-20201212225815713" style="zoom: 67%;">
</li>
<li><p>生成图像如下：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120124.png" alt="image-20201212225952205" style="zoom: 33%;">
</li>
<li><p>如果希望各色柱颜色变化，双击色柱图，将border、fill的颜色分别设为【color】-【increment】-【starting color】</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120128.png" alt="image-20201212230525831" style="zoom: 67%;">

<p>也可以根据提示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120133.png" alt="image-20201212230428175" style="zoom: 50%;">

</li>
</ul>
<h1 id="二、柱状组图"><a href="#二、柱状组图" class="headerlink" title="二、柱状组图"></a>二、柱状组图</h1><p>如果每个状态下都有多个指标需要比较，那么宜采用柱状组图。</p>
<ul>
<li><p>多个指标（COD、TOC）的数据组织形式如下，两种指标分别作为B、C列</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120138.png" alt="image-20201212231044048" style="zoom: 67%;">
</li>
<li><p>绘图操作同上，选中A、B、C列，【Plot】-【column/bar/pie】-【coloumn】</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120142.png" alt="image-20201212225815713" style="zoom:50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120148.png" alt="image-20201212231240130" style="zoom: 33%;">
</li>
<li><p>添加数据标签</p>
<p>绘图时，如果选用【column+label】可以显示数据标签：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120153.png" alt="image-20201212231346010" style="zoom:50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120158.png" alt="image-20201212231441398" style="zoom: 33%;">

</li>
</ul>
<h1 id="三、分组柱状图"><a href="#三、分组柱状图" class="headerlink" title="三、分组柱状图"></a>三、分组柱状图</h1><ul>
<li><p>数据格式</p>
<p>采用<code>XX YyEr YyEr</code>类型的数据格式</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120203.png" alt="image-20201215164925349" style="zoom:50%;">

<p>第一个<code>X</code>为分组信息，第二各<code>X</code>为点信息，后面的分别为柱形图和散点图及对应误差棒的数据。</p>
<p>选中<code>yEr</code>数据，右击，<code>Set as-&gt;Y Error</code>。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120209.png" alt="image-20201215165001229" style="zoom:50%;">



</li>
</ul>
<p>绘制图形</p>
<ul>
<li><p>选中后面的<code>YyEr YyEr</code>数据，右键选择<code>Grouped Columns - Indexed Data</code>模板</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120214.png" alt="image-20201215165125888" style="zoom: 67%;">
</li>
<li><p>在弹出的对话框中选择<strong>分组信息</strong>，此处选中A和B列</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120219.png" alt="image-20201215165215768" style="zoom:67%;">

<p>点击<code>OK</code>，完成基本图形的绘制。</p>
</li>
</ul>
<p>格式设置</p>
<ul>
<li><p>在右侧<code>Object Manager</code>里选中<code>g1</code>，右击，选择<code>Ungroup</code>，取消组合。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120224.png" alt="image-20201215165314779" style="zoom:67%;">
</li>
<li><p>在<code>Object Manager</code>中双击<code>Scatter</code>，打开<code>Plot Properties</code>页面进行格式设置。选中<strong>散点图</strong>所对应的数据，将<code>Plot Type</code>改为<code>Scatter</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120229.png" alt="image-20201215165457368" style="zoom: 50%;">
</li>
<li><p>点击<code>Apply</code>后，图形的基本形状就有了，后续进行颜色等设置。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120233.png" alt="image-20201215165622052" style="zoom: 50%;">
</li>
<li><p>接下来对横坐标的格式进行设置。双击坐标轴打开<code>Axis Properties</code>页面，设置<code>Table</code>的格式。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120238.png" alt="image-20201215165714951" style="zoom: 50%;">

<p>最后效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120244.png" alt="image-20201215165813688" style="zoom: 50%;">

</li>
</ul>
<h1 id="四、分组双Y轴柱状图（一）"><a href="#四、分组双Y轴柱状图（一）" class="headerlink" title="四、分组双Y轴柱状图（一）"></a>四、分组双Y轴柱状图（一）</h1><ul>
<li><p>之所以选用<strong>双Y轴</strong>图形，是因为右侧的<code>Group3</code>的数值较小，如果只用一个Y轴，则不能很好的显示该组数据。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120249.png" alt="image-20210101110442994" style="zoom:50%;">
</li>
<li><p>数据格式：</p>
<p>将<code>GroupA</code>和<code>GroupB</code>的数据放置在一列，<code>GroupC</code>的数据单独放置。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120253.png" alt="image-20210101110538181" style="zoom:50%;">

<p>注意<code>GroupC</code>的数据的量纲变化。</p>
</li>
<li><p>图形绘制</p>
</li>
<li><p>选中<code>J-M</code>列数据，绘制<a href="https://mp.weixin.qq.com/s?__biz=MzIzMjA1MjAyOA==&amp;mid=2651734006&amp;idx=1&amp;sn=ec45a1e7dd990ff47ff67ef2a384b7b9&amp;chksm=f3605ba5c417d2b3ec27f1555d8b71ed64758796b8a40cd20f2ab1f9a03e86d438653132a84b&amp;token=108488943&amp;lang=zh_CN&amp;scene=21#wechat_redirect">分组柱形图叠加分组散点图</a></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120259.png" alt="image-20210101110726495" style="zoom:33%;">



</li>
</ul>
<ul>
<li><p>选中<code>P-S</code>列数据，同样方法绘制<a href="https://mp.weixin.qq.com/s?__biz=MzIzMjA1MjAyOA==&amp;mid=2651734006&amp;idx=1&amp;sn=ec45a1e7dd990ff47ff67ef2a384b7b9&amp;chksm=f3605ba5c417d2b3ec27f1555d8b71ed64758796b8a40cd20f2ab1f9a03e86d438653132a84b&amp;token=108488943&amp;lang=zh_CN&amp;scene=21#wechat_redirect">分组柱形图叠加分组散点图</a></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120303.png" alt="image-20210101110759473" style="zoom: 33%;">
</li>
<li><p>点击右侧工具栏上的<code>Merge</code>按钮，打开合并图形对话框</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120308.png" alt="image-20210101110853804" style="zoom:50%;">

<p>选中上面绘制的两个图形，<code>在Arrange Setings</code>里设为<strong>1行2列</strong>，点击<code>OK</code>完成图形的合并</p>
</li>
</ul>
<p>格式设置</p>
<ul>
<li><p>将右侧图形的坐标轴标签改到右侧显示</p>
</li>
<li><p>双击图形打开<code>Layer Properties</code>对话框，激活<code>Layer2</code>，切换到<code>Link Axes Scales</code>页面，将<code>Link to</code>选为<code>Layer1</code>，即与图层1关联</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120313.png" alt="image-20210101111151394" style="zoom:50%;">
</li>
<li><p>切换到<code>Size</code>页面，将<code>Units</code>选为<code>% of Linked Layer</code>，<code>Left</code>设为<strong>100</strong>，<code>Width</code>设为<strong>50</strong>，即宽度为左侧图形的一半</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120318.png" alt="image-20210101111224527" style="zoom:67%;">
</li>
<li><p>调整图层的尺寸，使之大小合适：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120323.png" alt="image-20210101111347942" style="zoom:67%;">



</li>
</ul>
<h1 id="五、双Y轴堆积状图（二）"><a href="#五、双Y轴堆积状图（二）" class="headerlink" title="五、双Y轴堆积状图（二）"></a>五、双Y轴堆积状图（二）</h1><ul>
<li><p>数据：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120328.png" alt="image-20201215213457464" style="zoom:50%;">

<p>B、C 列数据大小相似，D列明显小了很多，此时可以选择双Y轴</p>
</li>
<li><p>选中B和D列数据，选取绘图模板：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120333.png" alt="image-20201215215246709" style="zoom:80%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120339.png" alt="image-20201215215407861" style="zoom: 50%;">
</li>
<li><p>将C列添加到第一图层里面：双击左上角的<code>1</code> ,将其添加到图层<code>1</code>，显示为柱状图:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120343.png" alt="image-20201215215546097" style="zoom:67%;">
</li>
<li><p>将右侧两个数据成组：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120349.png" alt="image-20201215215722233" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120353.png" alt="image-20201215215815714" style="zoom: 50%;">
</li>
<li><p>颜色调整：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120359.png" alt="image-20201215220000535" style="zoom:67%;">

<p>最终效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120403.png" alt="image-20201215220107139" style="zoom: 50%;">

<p>此时双Y轴的图已经绘制好，下面将其改编为堆积柱状图</p>
</li>
<li><p>上面的图绘制好后复制一份：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120408.png" alt="image-20201215220230685" style="zoom: 80%;">
</li>
<li><p>打开绘图细节对话框，选择图层1：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120411.png" alt="image-20201215220420463" style="zoom: 67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120416.png" alt="image-20201215220455972" style="zoom: 50%;">
</li>
<li><p>部分柱体显示不完全，选取右侧的重新设置Y轴范围按钮：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120422.png" alt="image-20201215220641184" style="zoom:67%;">

<p>就可以显示全部的柱体了，最后的效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120426.png" alt="image-20201215220728678" style="zoom: 50%;">

</li>
</ul>
<h1 id="六、堆积柱状图"><a href="#六、堆积柱状图" class="headerlink" title="六、堆积柱状图"></a>六、堆积柱状图</h1><h2 id="百分比堆积柱状图"><a href="#百分比堆积柱状图" class="headerlink" title="百分比堆积柱状图"></a>百分比堆积柱状图</h2><p>百分比堆积柱状图是一个很好的展现各个指标或者物种之间比例的图谱</p>
<ul>
<li><p>数据</p>
<p>一组数据，分别是左侧的四个组别(正常对照组，模型组，阳性药组，实验组)，每个组别分别测量5个指标(Factor 1，Factor 2， Factor 3， Factor 4， Factor 5)。我们想要显示出在每个组中，每个指标的相对丰度。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120432.png" alt="image-20201212234911658" style="zoom:67%;">
</li>
<li><p>选中数据，选择百分比堆积柱状图。Origin里面提供了两个模板绘制百分比堆积柱状图(横向或者竖向)，我们选择竖着的堆积柱状图。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120436.png" alt="image-20201212235101144" style="zoom:67%;">

<p>基本图形就出来了：一幅带有标签的百分比堆积柱状图。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120446.png" alt="image-20201212235123495" style="zoom:67%;">

</li>
</ul>
<p>格式调整：</p>
<ul>
<li><p>双击柱子，调整颜色。使用从属，用颜色系进行填充，可以将填充色和边框色设置成一样的，比较好看。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120452.png" alt="image-20201213000238440" style="zoom:50%;">
</li>
<li><p>设置中间的连线为白色，这样就不用显示了</p>
<img src="C:\Users\Hu\AppData\Roaming\Typora\typora-user-images\image-20201212235555276.png" alt="image-20201212235555276" style="zoom:67%;">
</li>
<li><p>设置一个合适的间距</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120456.png" alt="image-20201212235637962" style="zoom:67%;">

<p>如果你觉得显示的图例不合适，你可以显示成数据表中各个指标的数字：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120500.png" alt="image-20201212235919161" style="zoom:50%;">

<p>最后将图中的标签更改一下：</p>
<ul>
<li>删除Y轴标签，重新填写；</li>
<li>将图例右击放成水平；</li>
<li>X，Y轴次坐标取消，字体新罗马加粗；</li>
</ul>
<p>最后得效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101120506.png" alt="image-20201213000304867" style="zoom:50%;">

</li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『Graphics』 绘制二维数据集的置信椭圆</title>
    <url>/posts/3b0a2e38/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>如何绘制二维正态分布数据的误差椭圆，又名置信椭圆。</p>
<a id="more"></a>

<p>在二维或者更高维的空间里，数据的聚类往往需要添加一个“置信区间”。仿照一维空间的数据，置信区间往往相对于点估计而来的，在统计学中，一个概率样本的置信区间（Confidence interval）是对这个样本的某个总体参数的区间估计。置信区间展现的是这个参数的真实值有一定概率落在测量结果的周围的程度，其给出的是被测量参数的测量值的可信程度，一般我们用95%置信区间来表示。<br> 那么二维空间的数据也是如此，二维空间的置信区间往往利用置信椭圆来描述，展现真实值的可信程度，一般我们用95%置信椭圆来表示。<br> 为什么是置信椭圆呢，<strong>往往是因为我们的而数据分布形似椭圆</strong></p>
<h1 id="置信椭圆绘制原理"><a href="#置信椭圆绘制原理" class="headerlink" title="置信椭圆绘制原理"></a>置信椭圆绘制原理</h1><h2 id="一、数据中心在原点且轴对齐型"><a href="#一、数据中心在原点且轴对齐型" class="headerlink" title="一、数据中心在原点且轴对齐型"></a>一、数据中心在原点且轴对齐型</h2><p>先看最简单的，轴对齐型的，比方说椭圆长轴平行于x轴</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164412.webp" alt="19396348-3efc6f55365e4510" style="zoom:67%;">

<p>假设我有两列随机变量 x 和 y<br>对于该二维数据，x和y，我们不妨计算下x和y的协方差矩阵：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164425.webp" alt="19396348-ee85a1eb300b094e" style="zoom:50%;">

<p>由于我们的数据，形似椭圆，并且椭圆长轴平行于x轴，那么<strong>协方差矩阵中x轴方向的方差为8.4213，y轴方向的方差为0.9387。</strong>由于x方向与y方向正交，所以x和y这两个随机变量的协方差为0，也可以理解为相关性为0。</p>
<p><strong>由于我们的数据点分布形似椭圆，所以我们定义置信区间就把它定义为椭圆</strong>，我们知道椭圆的标准方程为：<br>$$<br>\left(\frac{x}{a}\right)^{2}+\left(\frac{y}{b}\right)^{2}=1<br>$$<br>那么我们不妨将椭圆的半长轴a定义为σx，半短轴b定义为σy，那么有：<br>$$<br>\left(\frac{x}{\sigma_{x}}\right)^{2}+\left(\frac{y}{\sigma_{y}}\right)^{2}=s<br>$$<br>σ_x与σ_y分别代表x和y的标准差，s与置信度有关。</p>
<p>显然，该椭圆的数据中心为(0,0)。<br>其中s定义椭圆的规模，可以是任意的数（例如，s=1）。现在的问题是如何选择s，使得所得到的椭圆规模代表我们所选择的置信水平（例如，95％的置信水平对应于s =5.991）。(不太明白这个椭圆的规模是什么意思)<br> 这个s=5.991可以通过卡方分布（随机变量平方和）进行计算（假设随机变量x和y服从高斯分布），并且自由度为2.<br>$$<br>\left(\frac{x}{\sigma_{x}}\right)^{2}+\left(\frac{y}{\sigma_{y}}\right)^{2}=s<br>$$</p>
<p>联想到<strong>卡方分布</strong>，上式左侧可以看作为随机变量的平方和，通过查询卡方表，有：<br>$$<br>P(s&lt;5.991)=1-0.05=0.95<br>$$<br>我们知道当 s = 5.991 时，<strong>P(s &lt; 5.991) = 0.95</strong>，也就是说，我们要寻找一个在椭圆上的点，使得 s = 5.991，那么将 s = 5.991 带入椭圆方程：<br>$$<br>\left(\frac{x}{\sigma_{x}}\right)^{2}+\left(\frac{y}{\sigma_{y}}\right)^{2}&lt;5.991<br>$$<br>这个等式表明数据点小于5.991的概率为95%（在椭圆内表示数据点小于5.991）。<br> 那么，s=5.991即为95%置信区间，表示有一组数据，其x方向方差为σx，y方向方差为σy时，如果s=5.991，那么95%的数据点在该椭圆内。<br> 那么置信椭圆的长轴2a：<br>$$<br>2 \sigma_{x} \sqrt{5.991}<br>$$<br>置信椭圆的短轴2b：<br>$$<br>2 \sigma_{y} \sqrt{5.991}<br>$$</p>
<h2 id="二、数据中心在原点且任意方向的置信椭圆"><a href="#二、数据中心在原点且任意方向的置信椭圆" class="headerlink" title="二、数据中心在原点且任意方向的置信椭圆"></a>二、数据中心在原点且任意方向的置信椭圆</h2><p>在数据是相关的情况下，例如存在协方差，所产生的误差椭圆不会是轴对齐的。在这种情况下，如果我们暂时定义一个新的坐标系，使得所述椭圆变为轴对齐，然后旋转所产生的椭圆，那么上面的结论依然有效。</p>
<p>换句话说，之前我们计算平行于x轴和y轴的方差，现在我们计算平行于置信椭圆长轴和短轴的方差，需要计算的方差方向由图1粉红和绿色箭头表示出来。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164446.webp" alt="19396348-d91cc601dd29d79b" style="zoom:67%;">

<p>首先计算随机变量x和y的协方差矩阵，根据协方差矩阵计算该矩阵的特征向量（上图绿色为椭圆短轴方向的特征向量；粉红色为椭圆长轴方向的特征向量），我们定义椭圆长轴方向的特征向量为v1，椭圆短轴方向的特征向量为v2；而特征向量大小为特征值，我们定义椭圆长轴方向的特征值为λ1，椭圆短轴方向的特征值为λ2。<br> 此时椭圆的长轴为：<br>$$<br>2 \sqrt{5.991\lambda_1}<br>$$<br>椭圆的短轴为：<br>$$<br>2 \sqrt{5.991\lambda_2}<br>$$<br>并且定义椭圆长轴与x轴正方向夹角为α：(为了获得椭圆的方向，我们简单地计算最大特征向量的角度)</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164452.webp" alt="19396348-d21ad76a3d39336c" style="zoom:67%;">
$$
\alpha=\arctan \frac{\mathbf{v}_{1}(y)}{\mathbf{v}_{1}(x)}
$$
那么，我们就可以根据角度来对置信椭圆进行“旋转”。

<h2 id="三、任意位置置信椭圆"><a href="#三、任意位置置信椭圆" class="headerlink" title="三、任意位置置信椭圆"></a>三、任意位置置信椭圆</h2><p>有了上面的介绍，那么任意位置的椭圆无非是满足数据中心不在原点，且椭圆长轴与x轴正方向夹角为任意角α。并以此来建立椭圆方程，画出置信椭圆（可见数据中心化可以简便很多计算）</p>
<h1 id="python-绘制置信椭圆"><a href="#python-绘制置信椭圆" class="headerlink" title="python 绘制置信椭圆"></a>python 绘制置信椭圆</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- encoding: utf-8 -*-</span>
<span class="token triple-quoted-string string">"""
@software: PyCharm
@file : 112.py
@time : 2020/12/31 
"""</span>
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>patches <span class="token keyword">import</span> Ellipse
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>transforms <span class="token keyword">as</span> transforms
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd


<span class="token keyword">def</span> <span class="token function">confidence_ellipse</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ax<span class="token punctuation">,</span> n_std<span class="token operator">=</span><span class="token number">3.0</span><span class="token punctuation">,</span> facecolor<span class="token operator">=</span><span class="token string">'none'</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> x<span class="token punctuation">.</span>size <span class="token operator">!=</span> y<span class="token punctuation">.</span>size<span class="token punctuation">:</span>
        <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">"x and y must be the same size"</span><span class="token punctuation">)</span>

    cov <span class="token operator">=</span> np<span class="token punctuation">.</span>cov<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    lambda_<span class="token punctuation">,</span> v <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>eig<span class="token punctuation">(</span>cov<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 计算特征值和特征向量</span>
    angle <span class="token operator">=</span> np<span class="token punctuation">.</span>rad2deg<span class="token punctuation">(</span>np<span class="token punctuation">.</span>arccos<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 计算旋转角度</span>

    ell_radius_x <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>n_std<span class="token operator">*</span>lambda_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    ell_radius_y <span class="token operator">=</span> np<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>n_std<span class="token operator">*</span>lambda_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># 默认椭圆中心为原点</span>
    mean_x<span class="token punctuation">,</span>mean_y <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>y<span class="token punctuation">)</span>
    ellipse <span class="token operator">=</span> Ellipse<span class="token punctuation">(</span><span class="token punctuation">(</span>mean_x<span class="token punctuation">,</span>mean_y<span class="token punctuation">)</span><span class="token punctuation">,</span>
                      width<span class="token operator">=</span>ell_radius_x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>
                      height<span class="token operator">=</span>ell_radius_y <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>
                      facecolor<span class="token operator">=</span>facecolor<span class="token punctuation">,</span>
                      angle<span class="token operator">=</span>angle<span class="token punctuation">,</span>
                      <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>

    <span class="token keyword">return</span> ax<span class="token punctuation">.</span>add_patch<span class="token punctuation">(</span>ellipse<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_excel<span class="token punctuation">(</span><span class="token string">'data.xlsx'</span><span class="token punctuation">,</span> index_col<span class="token operator">=</span>None<span class="token punctuation">)</span>
    x <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span>
    y <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span>

    <span class="token comment" spellcheck="true"># 卡方值， 95％的置信水平对应于s =5.991</span>
    ss <span class="token operator">=</span> <span class="token number">5.991</span>

    fig<span class="token punctuation">,</span> ax_kwargs <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># ax_kwargs.axvline(c='grey', lw=1)</span>
    <span class="token comment" spellcheck="true"># ax_kwargs.axhline(c='grey', lw=1)</span>


    confidence_ellipse<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> ax_kwargs<span class="token punctuation">,</span>n_std<span class="token operator">=</span>ss<span class="token punctuation">,</span>
                       alpha<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">,</span>  edgecolor<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> zorder<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    ax_kwargs<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
    ax_kwargs<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> s<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>
    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Origin-绘制置信椭圆"><a href="#Origin-绘制置信椭圆" class="headerlink" title="Origin 绘制置信椭圆"></a>Origin 绘制置信椭圆</h1><p>在 Apps 里面添加 <code>2D Confidence Ellipse</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164501.png" alt="image-20201231161309391" style="zoom:67%;">

<p>首先激活要绘制置信椭圆的散点图图层：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164506.png" alt="image-20201231161602870" style="zoom: 67%;">

<p>选择右边Apps 里面的 <code>2D Confidence Ellipse</code></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164511.png" alt="image-20201231161654625" style="zoom:80%;">

<p>此时会弹出对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164516.png" alt="image-20201231162046509" style="zoom:67%;">

<p>效果图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201231164521.png" alt="image-20201231162156951" style="zoom:67%;">







<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.jianshu.com/p/c3caf3524705">置信椭圆</a></li>
<li><a href="https://blog.csdn.net/qq_36097393/article/details/87605173">从从协方差的误差椭圆到PCA从从协方差的误差椭圆到PCA</a></li>
<li><a href="https://www.osgeo.cn/matplotlib/gallery/statistics/confidence_ellipse.html">matplotlib:绘制二维数据集的置信椭圆</a></li>
<li><a href="https://www.coder.work/article/96588">python - 使用matplotlib在散点图中创建置信椭圆</a></li>
<li><a href="https://www.geek-share.com/detail/2792936587.html">置信椭圆-python</a> </li>
<li><a href="https://www.originlab.com/FileExchange/details.aspx?v=0&amp;fid=365">OriginLab:2D Confidence Ellipse </a></li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Origin</tag>
      </tags>
  </entry>
  <entry>
    <title>『Excel技巧』常用函数</title>
    <url>/posts/27c26887/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>办公常用的十大函数</p>
<p>@SUBTOTAL函数</p>
<a id="more"></a>

<h1 id="subtotal函数基本功能"><a href="#subtotal函数基本功能" class="headerlink" title="subtotal函数基本功能"></a>subtotal函数基本功能</h1><p>分类汇总函数**<code>SUBTOTAL</code><strong>，它可以包括</strong>求和<strong>、</strong>汇总<strong>、</strong>平均<strong>等等多个函数的使用。<code>SUBTOTAL</code>函数的</strong>优点<strong>在于可以</strong>忽略隐藏的单元格<strong>、</strong>支持三维运算<strong>和</strong>区域数组引用**。</p>
<p><code>SUBTOTAL</code>函数就是返回一个列表或数据库中的分类汇总情况。</p>
<p><strong>语法</strong>：</p>
<pre><code>SUBTOTAL(function_num,ref1,[ref2],...)</code></pre>
<p><strong>参数</strong>：</p>
<ul>
<li><p><strong>Function_num</strong>：必需。 数字 1-11 或 101-111，用于指定要为分类汇总使用的函数。 如果使用 1-11，将包括手动隐藏的行，如果使用 101-111，则排除手动隐藏的行；始终排除已筛选掉的单元格。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183630.png" alt="v2-babae3fb435ea4df26f14c538b080df1_r" style="zoom:80%;">
</li>
<li><p><strong>ref1</strong>：必需。要对其进行分类汇总计算的第一个命名区域或引用。</p>
</li>
<li><p>**ref2…**：可选。要对其进行分类汇总计算的第 2 个至第 254 个命名区域或引用。</p>
</li>
</ul>
<h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><h2 id="一、利用subtotal函数给表格自动编号"><a href="#一、利用subtotal函数给表格自动编号" class="headerlink" title="一、利用subtotal函数给表格自动编号"></a>一、利用subtotal函数给表格自动编号</h2><p><strong>如何做才能得到这样自动编号效果（当单行或者多行被隐藏或者取消隐藏时，A列序号会自动调整）呢？</strong></p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183637.webp" alt="1719125-8247568fb865ec08" style="zoom:67%;">

<p>仔细观察，序号是从小排到大的，且A列每一个序号等于其对于B列单元格向上数非空单元格的个数，例如，A3单元格值为2，即是b2:B3单元格区域中非空单元格的个数；A7单元格的值为6，即是B2：B7单元格区域中非空单元格的个数。因此我们直接在A2单元格中输入公式：=counta(B$2:B2),然后复制到整列即可。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183700.webp" alt="1719125-e7f7e26fa48ac7c6" style="zoom:67%;">

<p>然而，当我们隐藏某些行列时，我们发现行列时，A列的序号却无法自动更新调整。如下图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183706.webp" alt="1719125-1c3be39b4da14009" style="zoom:67%;">

<p>如何解决这个问题呢？很显然，使用counta函数已经无法得到我们想要的效果了，因此我们请出subtotal函数来帮忙，前面我们提到，subtotal函数在第一参数使用101到111代码时，会自动忽略隐藏值，subtotal中计算非空单元格数的代码为103，因此我们可以写出下面的公式：A2单元格中输入公式：=subtotal(103,B$2:B2)，然后将此公式复制到全列即可。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183710.webp" alt="1719125-6015a78b2cabea93" style="zoom:67%;">

<h2 id="二、利用subtotal函数计算选手最后得分"><a href="#二、利用subtotal函数计算选手最后得分" class="headerlink" title="二、利用subtotal函数计算选手最后得分"></a>二、利用subtotal函数计算选手最后得分</h2><p>看下图，如何快速计算出选手的最后得分呢？</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201228183715.webp" alt="1719125-8ce44870508d752b" style="zoom:67%;">

<p>一般比赛的要求都是去掉一个最高分，再去掉一个最低分，然后再取剩余值的平均值。因此我们解题步骤通常如下：</p>
<p>1.求总分：=SUM(B2:J2)</p>
<p>2.减去最低分和最高分：=SUM(B2:J2)-max(B2:J2)-min(B2:J2)</p>
<p>3.剩余的值求平均值，本例子中共有9位评委，去掉最低和最高两个评委，将剩下的7位评委的分数求平均分，因此公式为：=(SUM(B2:J2)-max(B2:J2)-min(B2:J2))/7</p>
<p>在普通解法中，我们用到了三个函数，思路很简单，但是还是比较麻烦的，如果我们使用subtotal函数，2个函数就可以搞定选手的最后得分了。公式如下：<code>{=SUM(SUBTOTAL({9,4,5},B2:J2)*{1,-1,-1})/7}</code></p>
<p>subtotal函数共2个参数，第一个参数为{9,4,5},9为求和，4为最大值，5为最小值，第二个参数为B2:J2；</p>
<p>在subtotal函数乘一个数组{1，-1，-1}，即得到sum(B2:J2)，-max(B2:J2),-min(B2:J2)，接下来利用sum函数将这几个值加起来就相当于公式：=SUM(B2:J2)-max(B2:J2)-min(B2:J2)；</p>
<p>将得到的结果除以7即得到了=SUM(SUBTOTAL({9,4,5},B2:J2)*{1,-1,-1})/7的公式，最后按下Ctrl+Shift+Enter完成数组公式的输入。</p>
<h2 id="三、合并汇总"><a href="#三、合并汇总" class="headerlink" title="三、合并汇总"></a>三、合并汇总</h2><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.jianshu.com/p/06c64f2f47f6">Subtotal函数：各种简单统计</a></li>
<li></li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Excel</category>
      </categories>
      <tags>
        <tag>excel</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』如何设置图形X轴为时间序列</title>
    <url>/posts/d2ee1474/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>origin2021 如何设置图形 X 轴为时间序列</p>
<a id="more"></a>

<p>未处理的数据，A 为普通的数据格式，为2012年每天的数据，想要X轴显示<code>年月</code>的形式:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152753.png" alt="image-20201218145422242" style="zoom:67%;">

<p>选择要处理的数据列：<code>Format</code> -&gt;<code>Column Properties</code> :</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152801.png" alt="image-20201218150346432" style="zoom:67%;">

<p>这里选择的显示格式，只是在数据表中的显示格式。</p>
<p>选中两列数据绘制折线图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152820.png" alt="image-20201218152458838" style="zoom:80%;">

<p>这里看到X轴显示的不是期望的 <code>年月</code> 形式的。</p>
<p>双击X轴，打开对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152840.png" alt="image-20201218151502016" style="zoom: 50%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152858.png" alt="image-20201218152322706" style="zoom: 50%;">

<p>最后显示的效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201218152908.png" alt="image-20201218152429611" style="zoom:80%;">

<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 图形合并-组合图绘制</title>
    <url>/posts/4337443a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>图形合并-组合图绘制</p>
<a id="more"></a>

<p>效果图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152602.png" alt="image-20201215233618245" style="zoom:67%;">

<p>数据：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152609.png" alt="image-20201215233736588" style="zoom:80%;">

<p>有三个工作簿，各有两个表，分别是散点数据和拟合数据：</p>
<h2 id="图形绘制"><a href="#图形绘制" class="headerlink" title="图形绘制"></a>图形绘制</h2><ul>
<li><p>选中第一个表绘制散点数据：</p>
<p>初步调整的结果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152615.png" alt="image-20201215234103013" style="zoom: 50%;">
</li>
<li><p>选择拟合数据：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152619.png" alt="image-20201215234240328" style="zoom: 50%;">

<p>鼠标放到右侧边框处，显示小图片时，拖到左侧的图中并调整为线：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152624.png" alt="image-20201215234430893" style="zoom: 50%;">



</li>
</ul>
<p>  效果：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152630.png" alt="image-20201215234600324" style="zoom: 50%;">

<p>  调整图层顺序：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152635.png" alt="image-20201215234748473" style="zoom:67%;">

<p>  此时发现轴标题变了：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152642.png" alt="image-20201215234832994" style="zoom:67%;">

<p>  如何变回原来的呐？打开绘图设置对话框：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101152648.png" alt="image-20201215234943957" style="zoom: 50%;">

<p>  就可以了。</p>
<ul>
<li><p>增加断点，双击轴打开设置对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152653.png" alt="image-20201215235306523" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152658.png" alt="image-20201215235337790" style="zoom:67%;">
</li>
<li><p>设置局部方法效果，激活图层，右侧单继带数据的放大图按钮：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152703.png" alt="image-20201215235448488" style="zoom:80%;">

<p>效果</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152709.png" alt="image-20201215235534609" style="zoom:67%;">
</li>
<li><p>对子图进行修改：</p>
<p>包括修改x轴的坐标范围，重新调整Y轴的缩放比例</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152713.png" alt="image-20201215235720437" style="zoom:67%;">
</li>
<li><p>为子图添加竖直线：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152719.png" alt="image-20201215235843232" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152725.png" alt="image-20201216000403676" style="zoom:67%;">
</li>
<li><p>利用批量绘图（要求数据结构一样），绘制另外两个图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152729.png" alt="image-20201216000801473" style="zoom:67%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152736.png" alt="image-20201216000949444" style="zoom:67%;">

<p>此时另外两个图也绘制好了。</p>
</li>
</ul>
<h2 id="图形合并"><a href="#图形合并" class="headerlink" title="图形合并"></a>图形合并</h2><p>合并图，打开<code>Graph</code>-&gt;<code>Merge Graph Window</code> :</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152741.png" alt="image-20201216001225681" style="zoom:67%;">

<p>同时也可以固定缩放比例：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152747.png" alt="image-20201216002738104" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152754.png" alt="image-20201216001305890" style="zoom: 50%;">

<p>删除重复的元素，并对子图进行调整：</p>
<p>首先调整第一个小图的大小和位置，右键：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152801.png" alt="image-20201216001611865" style="zoom:67%;">

<p>复制格式，然后对其它子图粘贴格式：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152806.png" alt="image-20201216001716220" style="zoom:67%;">

<p>统一调整子图的刻度标签，打开绘图设置：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152810.png" alt="image-20201216002051648" style="zoom:67%;">

<p>此时调整一个图的时候，其它两个图会做出相应的变化：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101152815.png" alt="image-20201216002158033" style="zoom: 50%;">

<p>图形已基本绘制好。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 多轴图绘制</title>
    <url>/posts/43744913/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>多轴图绘制</p>
<a id="more"></a>

<h1 id="多轴图绘制一"><a href="#多轴图绘制一" class="headerlink" title="多轴图绘制一"></a>多轴图绘制一</h1><ul>
<li>直接在绘图菜单中选择所需要的模板绘图  </li>
<li>画图之后修改绘图类型  </li>
<li>往图层中添加数据  </li>
</ul>
<p>数据</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150304.png" alt="image-20201215213457464" style="zoom:50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150310.png" alt="image-20201215213729865" style="zoom:80%;">

<h2 id="三Y轴图"><a href="#三Y轴图" class="headerlink" title="三Y轴图"></a>三Y轴图</h2><p>选取后三列数据，选择绘图模板</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150316.png" alt="image-20201215213848804" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150323.png" alt="image-20201215213933580" style="zoom: 50%;">

<ul>
<li><p>调整前两个数据的显示格式：调为柱状图</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150331.png" alt="image-20201215214023049" style="zoom: 50%;">
</li>
<li><p>效果：（此时两个柱体是重合的）</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150339.png" alt="image-20201215214120870" style="zoom: 50%;">

<p>打开绘图设置对话框：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150343.png" alt="image-20201215214327065" style="zoom: 50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150349.png" alt="image-20201215214407314" style="zoom: 50%;">

<p>由于 1，2轴的数据是接近的，将图层2 的y轴与图层1 的y轴进行1 to 1 关联：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150355.png" alt="image-20201215214637013" style="zoom: 50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150401.png" alt="image-20201215214702143" style="zoom: 50%;">

<p>最后修改刻度范围，颜色就可以了。最终效果图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150407.png" alt="image-20201215214920547" style="zoom: 50%;">



</li>
</ul>
<h2 id="双Y轴图"><a href="#双Y轴图" class="headerlink" title="双Y轴图"></a>双Y轴图</h2><p>第二个图，由于第一列数据与第二列数据是相近的，没必要用3y 轴图，可以用双Y轴图。</p>
<ul>
<li><p>选中B和D列数据，选取绘图模板：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150415.png" alt="image-20201215215246709" style="zoom:80%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150420.png" alt="image-20201215215407861" style="zoom: 50%;">
</li>
<li><p>将C列添加到第一图层里面：双击左上角的<code>1</code> ,将其添加到图层1，显示为柱状图:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150425.png" alt="image-20201215215546097" style="zoom:67%;">

<p>将右侧两个数据成组：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150429.png" alt="image-20201215215722233" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150435.png" alt="image-20201215215815714" style="zoom: 50%;">
</li>
<li><p>颜色调整：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150440.png" alt="image-20201215220000535" style="zoom:67%;">

<p>最终效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150445.png" alt="image-20201215220107139" style="zoom: 50%;">

<h2 id="多轴堆叠柱状图"><a href="#多轴堆叠柱状图" class="headerlink" title="多轴堆叠柱状图"></a>多轴堆叠柱状图</h2><p>上面的图绘制好后复制一份：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150452.png" alt="image-20201215220230685" style="zoom:80%;">

<p>打开绘图细节对话框，选择图层1：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150459.png" alt="image-20201215220420463" style="zoom: 50%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150507.png" alt="image-20201215220455972" style="zoom: 50%;">

<p>部分柱体显示不完全，选取右侧的重新设置Y轴范围按钮：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150520.png" alt="image-20201215220641184" style="zoom:67%;">



</li>
</ul>
<p>  就可以显示全部的柱体了，最后的效果：</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101150514.png" alt="image-20201215220728678" style="zoom: 50%;">

<h1 id="多轴图绘制二"><a href="#多轴图绘制二" class="headerlink" title="多轴图绘制二"></a>多轴图绘制二</h1><ul>
<li>工具栏或者菜单添加图层  </li>
<li>(按需) 往图层中添加数据  </li>
</ul>
<h2 id="顶轴刻度与下轴刻度关联"><a href="#顶轴刻度与下轴刻度关联" class="headerlink" title="顶轴刻度与下轴刻度关联"></a>顶轴刻度与下轴刻度关联</h2><ul>
<li><p>首先绘制一个图（我也不知道怎么画的）：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150526.png" alt="image-20201215222217852" style="zoom: 50%;">
</li>
<li><p>右侧，点击右侧添加顶轴按钮</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150532.png" alt="image-20201215222329595" style="zoom:67%;">



</li>
</ul>
<p>  此时添加了一个新的图层。</p>
  <img src="https://raw.githubusercontent.com/HG95/image/master/20210101150540.png" alt="image-20201215222408650" style="zoom: 50%;">

<ul>
<li><p>打开绘图设置对话框，选择TopX：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150544.png" alt="image-20201215222654596" style="zoom:67%;">

<p>分别设置坐标轴的开始和结束的对应关系</p>
<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210101150551.png" alt="image-20201215223102966" style="zoom: 50%;">

</li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>draw.io、Origin和Visio等导出在word显示无损高清图</title>
    <url>/posts/2fca8b56/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>draw.io、Origin和Visio等导出在word显示无损高清图。</p>
<p>如何在visio的框图中插入公式 visio如何插入word中的数学公式。</p>
<a id="more"></a>

<h1 id="draw-io"><a href="#draw-io" class="headerlink" title="draw.io"></a>draw.io</h1><p>draw.io和Visio 都可以制作流程图等，但draw.io 操作更为便捷。Visio制作的图虽然可以直接插入到word中，但有时候会存在各种问题。</p>
<p>draw.io 可以导出的图片格式如图所示，</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208224122.png" alt="Snipaste_2020-12-08_22-35-58" style="zoom:80%;">

<p>但是导出的图片都不能在word实现无损方法的效果，最近发现可以导出VSDX格式的文件(该文件可以在Visio打开)，Visio 打开该文件后，再将文件保存为 <code>.emf</code> 格式的文件。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208224556.png" alt="image-20201208224546836" style="zoom:80%;">

<p>导出后的文件可以直接导入word,下图是放大1600%的效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208224812.png" alt="image-20201208224721619" style="zoom: 50%;">

<h1 id="怎样在word中得到无损放大的origin组合图"><a href="#怎样在word中得到无损放大的origin组合图" class="headerlink" title="怎样在word中得到无损放大的origin组合图"></a>怎样在word中得到无损放大的origin组合图</h1><p>在 origin 中绘好图之后，复制</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208225519.png" alt="image-20201208225502184" style="zoom:80%;">

<p>新建一页空白 PPT 文档，将复制的图粘贴到空白文档里：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208225656.png" alt="image-20201208225647370" style="zoom:80%;">

<p>然后选择图片，将其另存为<code>.emf</code> 格式的文件。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208225848.png" alt="image-20201208225818944" style="zoom:80%;">

<p>再将文件导入word 后，就实现了无损方法的效果。</p>
<h1 id="Visio-中如何插入数学公式"><a href="#Visio-中如何插入数学公式" class="headerlink" title="Visio 中如何插入数学公式"></a>Visio 中如何插入数学公式</h1><p>先在<a href="https://www.office26.com/word/">word</a>中用自带的公式编辑器将公式写好，如下图</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208230221.png" alt="image-20201208230209424" style="zoom:50%;">

<p>此时选中公式，复制或者Ctrl+C</p>
<p>到<a href="https://www.office26.com/visio/">visio</a>的空白的地方，鼠标右键，点击选择性粘贴，选择Microsoft <a href="https://www.office26.com/word/">Word </a>文档，点击确定后，即可实现公式的粘贴</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201208230628.png" alt="image-20201208230331223" style="zoom:50%;">

<p>将公式拖动到合适的位置即可。</p>
<p>最后还可使用Ctrl+G将框图和公式组合到一起，这样移动时两个一起移动，更方便些。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.bilibili.com/video/BV1wp4y1e7oW?from=search&amp;seid=4078241403795458791">怎样在word中得到无损放大的origin组合图</a></li>
<li><a href="https://www.office26.com/visio/visio_14931.html">如何在visio的框图中插入公式 visio如何插入word中的数学公式</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Origin</tag>
        <tag>draw.io</tag>
        <tag>Viso</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 如何美化科学计数法的坐标轴？</title>
    <url>/posts/1d83386a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/HG95/image/master/20210103141944.png" alt="image-20210103141324610" style="zoom: 80%;"></h1><a id="more"></a>

<p>当坐标轴数值比较大时，无论是以10进制显示坐标轴数值（如图1）还是科学计数法显示坐标轴数值（如图2）都不太美观。如何美化科学计数法的坐标轴（如图3）呢？</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103141951.png" alt="image-20201214110821637" style="zoom: 80%;">

<p>A：用户可执行：</p>
<ol>
<li><p>双击坐标轴打开Axis对话框，选择Tick Label:Display选项卡</p>
</li>
<li><p>在Divide by Factor键入需要省略的“10的n次幂”</p>
</li>
<li><p>勾选Set Decimal Places为设置小数点位数，在Decimal Number中可键入需要显示的小数点位数</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103141958.png" alt="image-20201214110931916" style="zoom:67%;">
</li>
<li><p>选择Special Ticks选项卡，在坐标轴最末端的位置新增一个Tick，显示为末端值*10的n次幂（<code>LastNum x 10\+(n)</code>）</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142003.png" alt="image-20201214111025976" style="zoom:67%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142010.png" alt="image-20210103141607951" style="zoom:80%;"></li>
</ol>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>『OriginPro』 坐标轴显示部分刻度</title>
    <url>/posts/2f51bfdc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/HG95/image/master/20210103142356.png" alt="image-20210103142250338" style="zoom:80%;"></h1><a id="more"></a>

<p>正常的坐标轴显示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142401.png" alt="image-20201219161606893" style="zoom:80%;">

<p>想要只显示一部分刻度，例如3，4，5</p>
<p>双击坐标轴：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142405.png" alt="image-20201219161837679" style="zoom:80%;">

<p>效果：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20210103142412.png" alt="image-20201219161906316" style="zoom:80%;"><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Origin绘图</category>
      </categories>
      <tags>
        <tag>OriginPro</tag>
      </tags>
  </entry>
  <entry>
    <title>sdws</title>
    <url>/posts/be627c25/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a>

<div id="echarts5780" style="width: 85%;height: 400px;margin: 0 auto"></div>
<script src="https://cdn.bootcss.com/echarts/3.8.0/echarts.common.min.js"></script>
<script type="text/javascript">
        // 基于准备好的dom，初始化echarts实例
        var myChart = echarts.init(document.getElementById('echarts5780'));
        // 指定图表的配置项和数据
        var option = {
    tooltip : {
        trigger: 'axis',
        axisPointer : {            // 坐标轴指示器，坐标轴触发有效
            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
        }
    },
    legend: {
        data:['利润', '支出', '收入']
    },
    grid: {
        left: '3%',
        right: '4%',
        bottom: '3%',
        containLabel: true
    },
    xAxis : [
        {
            type : 'value'
        }
    ],
    yAxis : [
        {
            type : 'category',
            axisTick : {show: false},
            data : ['周一','周二','周三','周四','周五','周六','周日']
        }
    ],
    series : [
        {
            name:'利润',
            type:'bar',
            itemStyle : {
                normal: {
                    label: {show: true, position: 'inside'}
                }
            },
            data:[200, 170, 240, 244, 200, 220, 210]
        },
        {
            name:'收入',
            type:'bar',
            stack: '总量',
            itemStyle: {
                normal: {
                    label : {show: true}
                }
            },
            data:[320, 302, 341, 374, 390, 450, 420]
        },
        {
            name:'支出',
            type:'bar',
            stack: '总量',
            itemStyle: {normal: {
                label : {show: true, position: 'left'}
            }},
            data:[-120, -132, -101, -134, -190, -230, -210]
        }
    ]
};
        // 使用刚指定的配置项和数据显示图表。
        myChart.setOption(option);
</script>









<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>利用 Python 批量合并 Excel 文件</title>
    <url>/posts/eebdf3f9/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>利用 Python 批量合并 Excel 文件</p>
<a id="more"></a>

<h1 id="一、导入库"><a href="#一、导入库" class="headerlink" title="一、导入库"></a>一、导入库</h1><p>这里会使用 <code>os</code> ，<code>xlrd</code>，<code>pandas</code>，<code>pathlib</code> 四个库。</p>
<p><code>xlrd</code> 是用来读取 xls 文件的，<code>pandas</code> 是用来合并数据和写文件的。</p>
<p><code>pathlib</code> 是用来兼容windows和unix平台（linux or macos）的文件路径的</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> xlrd
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="二、遍历要合并的文件"><a href="#二、遍历要合并的文件" class="headerlink" title="二、遍历要合并的文件"></a>二、遍历要合并的文件</h1><p>给一个目标文件夹，将这里面全部的文件都生成文件路径。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">file_name</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xls'</span> <span class="token operator">or</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xlsx'</span><span class="token punctuation">:</span>
            list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="三、合并输出文件"><a href="#三、合并输出文件" class="headerlink" title="三、合并输出文件"></a>三、合并输出文件</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">merge_xlsx</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>sheet_num<span class="token punctuation">,</span>output_filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true">#定义一个空list</span>
    title <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    path_folder <span class="token operator">=</span> Path<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>filenames<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        read_xlsx <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span>path_folder <span class="token operator">/</span> filenames<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        sheet_num_data <span class="token operator">=</span> read_xlsx<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>sheet_num<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#查看指定sheet_num的数据</span>
        title <span class="token operator">=</span> sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#表头, 0也就是第一行</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>sheet_num_data<span class="token punctuation">.</span>nrows<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#逐行打印,1也就是第二行的内容</span>
            data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
    content<span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">#修改表头</span>
    content<span class="token punctuation">.</span>columns <span class="token operator">=</span> title
    <span class="token comment" spellcheck="true">#写入excel文件</span>
    output_path <span class="token operator">=</span> path_folder <span class="token operator">/</span> <span class="token string">'output'</span>
    output_filename_xlsx <span class="token operator">=</span> output_filename <span class="token operator">+</span> <span class="token string">'.xlsx'</span>
    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"output folder not exist, create it"</span><span class="token punctuation">)</span>
        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span>
    content<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token punctuation">(</span>output_path <span class="token operator">/</span> output_filename_xlsx<span class="token punctuation">)</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"merge success"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="四、写入变量并运行"><a href="#四、写入变量并运行" class="headerlink" title="四、写入变量并运行"></a>四、写入变量并运行</h1><p>完整的代码：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> xlrd
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path

<span class="token keyword">def</span> <span class="token function">get_filename</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xls'</span> <span class="token operator">or</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xlsx'</span><span class="token punctuation">:</span>
            list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> list

<span class="token keyword">def</span> <span class="token function">merge_xlsx</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>sheet_num<span class="token punctuation">,</span>output_filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>   <span class="token comment" spellcheck="true">#定义一个空list</span>
    title <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    path_folder <span class="token operator">=</span> Path<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>len<span class="token punctuation">(</span>filenames<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        read_xlsx <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span>path_folder <span class="token operator">/</span> filenames<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
        sheet_num_data <span class="token operator">=</span> read_xlsx<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>sheet_num<span class="token punctuation">]</span> <span class="token comment" spellcheck="true">#查看指定sheet_num的数据</span>
        title <span class="token operator">=</span> sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#表头</span>
        <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>sheet_num_data<span class="token punctuation">.</span>nrows<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#逐行打印</span>
            data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>sheet_num_data<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
    content<span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token comment" spellcheck="true">#修改表头</span>
    content<span class="token punctuation">.</span>columns <span class="token operator">=</span> title
    <span class="token comment" spellcheck="true">#写入excel文件</span>
    output_path <span class="token operator">=</span> path_folder <span class="token operator">/</span> <span class="token string">'output'</span>
    output_filename_xlsx <span class="token operator">=</span> output_filename <span class="token operator">+</span> <span class="token string">'.xlsx'</span>
    <span class="token keyword">if</span> <span class="token operator">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"output folder not exist, create it"</span><span class="token punctuation">)</span>
        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>output_path<span class="token punctuation">)</span>
    content<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span><span class="token punctuation">(</span>output_path <span class="token operator">/</span> output_filename_xlsx<span class="token punctuation">)</span><span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"merge success"</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>
    path <span class="token operator">=</span> r<span class="token string">'/Your/Path'</span> <span class="token comment" spellcheck="true">#这里无论什么平台都按照unix风格来输入文件路径</span>
    filenames <span class="token operator">=</span> get_filename<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    merge_xlsx<span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#合并文件中第一个表的数据，输出到 output/sheet1.xlsx中</span>
    merge_xlsx<span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"sheet1"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#合并文件中第二个表的数据，输出到 output/sheet2.xlsx中</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="多个excel的多个sheet进行合并"><a href="#多个excel的多个sheet进行合并" class="headerlink" title="多个excel的多个sheet进行合并"></a>多个excel的多个sheet进行合并</h1><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> xlrd
<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd


<span class="token keyword">def</span> <span class="token function">get_filename</span><span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>file_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xls'</span> <span class="token operator">or</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'.xlsx'</span><span class="token punctuation">:</span>
            list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> list

<span class="token comment" spellcheck="true"># 打开一个excel文件</span>
<span class="token keyword">def</span> <span class="token function">open_xls</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">:</span>
    fh <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    <span class="token keyword">return</span> fh

<span class="token comment" spellcheck="true"># 获取excel中所有的sheet表</span>
<span class="token keyword">def</span> <span class="token function">getsheet</span><span class="token punctuation">(</span>fh<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> fh<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment" spellcheck="true"># 获取sheet表的行数</span>
<span class="token keyword">def</span> <span class="token function">getnrows</span><span class="token punctuation">(</span>fh<span class="token punctuation">,</span> sheet<span class="token punctuation">)</span><span class="token punctuation">:</span>
    table <span class="token operator">=</span> fh<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>sheet<span class="token punctuation">]</span>
    <span class="token keyword">return</span> table<span class="token punctuation">.</span>nrows

<span class="token comment" spellcheck="true"># 读取文件内容并返回行内容</span>
<span class="token keyword">def</span> <span class="token function">getFilect</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> shnum<span class="token punctuation">,</span>datavalue<span class="token punctuation">)</span><span class="token punctuation">:</span>
    fh <span class="token operator">=</span> open_xls<span class="token punctuation">(</span>file<span class="token punctuation">)</span>
    table <span class="token operator">=</span> fh<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>shnum<span class="token punctuation">]</span>
    num <span class="token operator">=</span> table<span class="token punctuation">.</span>nrows
    title <span class="token operator">=</span> table<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> row <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
        rdata <span class="token operator">=</span> table<span class="token punctuation">.</span>row_values<span class="token punctuation">(</span>row<span class="token punctuation">)</span>
        datavalue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>rdata<span class="token punctuation">)</span>
    <span class="token keyword">return</span> title

<span class="token comment" spellcheck="true"># 获取sheet表的个数</span>
<span class="token keyword">def</span> <span class="token function">getshnum</span><span class="token punctuation">(</span>fh<span class="token punctuation">)</span><span class="token punctuation">:</span>
    x <span class="token operator">=</span> <span class="token number">0</span>
    sh <span class="token operator">=</span> getsheet<span class="token punctuation">(</span>fh<span class="token punctuation">)</span>
    <span class="token keyword">for</span> sheet <span class="token keyword">in</span> sh<span class="token punctuation">:</span>
        x <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">return</span> x

<span class="token keyword">def</span> <span class="token function">merge_xlsx</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true"># 存储所有读取的结果</span>
    datavalue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    title <span class="token operator">=</span> <span class="token string">""</span>
    <span class="token keyword">for</span> fll <span class="token keyword">in</span> filenames<span class="token punctuation">:</span>
        fl <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span>fll<span class="token punctuation">)</span>
        fh <span class="token operator">=</span> open_xls<span class="token punctuation">(</span>fl<span class="token punctuation">)</span>
        x <span class="token operator">=</span> getshnum<span class="token punctuation">(</span>fh<span class="token punctuation">)</span>
        <span class="token keyword">for</span> shnum <span class="token keyword">in</span> range<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"正在读取文件："</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>fl<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"的第"</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>shnum<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"个sheet表的内容..."</span><span class="token punctuation">)</span>
            title <span class="token operator">=</span> getFilect<span class="token punctuation">(</span>fl<span class="token punctuation">,</span> shnum<span class="token punctuation">,</span>datavalue<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># 定义最终合并后生成的新文件</span>
    content <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>datavalue<span class="token punctuation">)</span>
    content<span class="token punctuation">.</span>columns <span class="token operator">=</span> title
    content<span class="token punctuation">.</span>to_excel<span class="token punctuation">(</span>save_path<span class="token punctuation">,</span> header<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> index<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"文件合并完成"</span><span class="token punctuation">)</span>




<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true"># 定义要合并的excel文件列表</span>
    path <span class="token operator">=</span> r<span class="token string">'C:\Users\Hu\Desktop\新建文件夹'</span>
    filenames <span class="token operator">=</span> get_filename<span class="token punctuation">(</span>path<span class="token punctuation">)</span>
    save_path <span class="token operator">=</span> <span class="token string">'sss12.xlsx'</span>
    merge_xlsx<span class="token punctuation">(</span>path<span class="token punctuation">,</span>filenames<span class="token punctuation">,</span>save_path<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://wocai.de/post/2020/01/%E5%88%A9%E7%94%A8-python-%E6%89%B9%E9%87%8F%E5%90%88%E5%B9%B6-excel-%E6%96%87%E4%BB%B6/">批量合并 Excel 文件</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Applets</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel输入数据自动写入当前时间且锁定不变</title>
    <url>/posts/171131a6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Excel输入数据自动写入当前时间 且锁定不变</p>
<a id="more"></a>

<p>函数:</p>
<pre><code>=IF(B1="","",IF(A1="",NOW(),A1))</code></pre>
<p>解释：如果B1不等于空，则在A1写入当前时间。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>『GDAL』读写遥感影像数据</title>
    <url>/posts/cdd2e0dc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>使用 <code>GDAL</code>读写tiff遥感影像数据</p>
<a id="more"></a>

<h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><ol>
<li><p>打开已有的栅格数据集</p>
<pre class="line-numbers language-python"><code class="language-python">fn <span class="token operator">=</span> <span class="token string">'aster.img'</span>
ds <span class="token operator">=</span> gdal<span class="token punctuation">.</span>Open<span class="token punctuation">(</span>fn<span class="token punctuation">,</span> GA_ReadOnly<span class="token punctuation">)</span>
<span class="token keyword">if</span> ds <span class="token keyword">is</span> None<span class="token punctuation">:</span>
   <span class="token keyword">print</span> <span class="token string">'Could not open '</span> <span class="token operator">+</span> fn
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>读取栅格数据集的x方向像素数，y方向像素数，和波段数</p>
<pre class="line-numbers language-python"><code class="language-python">cols <span class="token operator">=</span> ds<span class="token punctuation">.</span>RasterXSize
rows <span class="token operator">=</span> ds<span class="token punctuation">.</span>RasterYSize
bands <span class="token operator">=</span> ds<span class="token punctuation">.</span>RasterCount<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>注意后面没有括号，因为他们是属性(properties)不是方法(methods) 读取地理坐标参考信息(georeference info)</p>
</li>
<li><p><code>GeoTransform</code>是一个list，存储着栅格数据集的地理坐标信息</p>
<pre class="line-numbers language-python"><code class="language-python">adfGeoTransform<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> top left x 左上角x坐标<span class="token operator">*</span><span class="token operator">/</span>
adfGeoTransform<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> w<span class="token operator">-</span><span class="token operator">-</span>e pixel resolution 东西方向上的像素分辨率<span class="token operator">*</span><span class="token operator">/</span>
adfGeoTransform<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> rotation<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">if</span> image <span class="token keyword">is</span> <span class="token string">"north up"</span> 如果北边朝上，地图的旋转角度<span class="token operator">*</span><span class="token operator">/</span>
adfGeoTransform<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> top left y 左上角y坐标<span class="token operator">*</span><span class="token operator">/</span>
adfGeoTransform<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> rotation<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">if</span> image <span class="token keyword">is</span> <span class="token string">"north up"</span> 如果北边朝上，地图的旋转角度<span class="token operator">*</span><span class="token operator">/</span>
adfGeoTransform<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">/</span><span class="token operator">*</span> n<span class="token operator">-</span>s pixel resolution 南北方向上的像素分辨率<span class="token operator">*</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>注意栅格数据集的坐标一般都是以左上角为基准的。</p>
<p>下面的例子是从一个栅格数据集中取出Geotransform作为一个list，然后读取其中的数据</p>
<pre class="line-numbers language-python"><code class="language-python">geotransform <span class="token operator">=</span> ds<span class="token punctuation">.</span>GetGeoTransform<span class="token punctuation">(</span><span class="token punctuation">)</span>
originX <span class="token operator">=</span> geotransform<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
originY <span class="token operator">=</span> geotransform<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
pixelWidth <span class="token operator">=</span> geotransform<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
pixelHeight <span class="token operator">=</span> geotransform<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>计算某一坐标对应像素的相对位置(pixel offset)，也就是该坐标与左上角的像素的相对位置，按像素数计算，计算公式如下：</p>
<pre class="line-numbers language-python"><code class="language-python">xOffset <span class="token operator">=</span> int<span class="token punctuation">(</span><span class="token punctuation">(</span>x – originX<span class="token punctuation">)</span> <span class="token operator">/</span> pixelWidth<span class="token punctuation">)</span>
yOffset <span class="token operator">=</span> int<span class="token punctuation">(</span><span class="token punctuation">(</span>y – originY<span class="token punctuation">)</span> <span class="token operator">/</span> pixelHeight<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>读取某一像素点的值，需要分两步 首先读取一个波段(band)：GetRasterBand(<index>)，其参数为波段的索引号 然后用ReadAsArray(<xoff>, <yoff>, <xsize>, <ysize>)，读出从(xoff,yoff)开始，大小为(xsize,ysize)的矩阵。如果将矩阵大小设为1X1，就是读取一个像素了。但是这一方法只能将读出的数据放到矩阵中，就算只读取一个像素也是一样。例如：</ysize></xsize></yoff></xoff></index></p>
<pre class="line-numbers language-python"><code class="language-python">band <span class="token operator">=</span> ds<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> band<span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span>xOffset<span class="token punctuation">,</span> yOffset<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>如果想一次读取一整张图，那么将offset都设定为0，size则设定为整个图幅的size，例如：</p>
<pre class="line-numbers language-python"><code class="language-python">data <span class="token operator">=</span> band<span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> cols<span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>但是要注意，从data中读取某一像素的值，必须要用data[yoff, xoff]。注意不要搞反了。数学中的矩阵是[row,col]，而这里恰恰相反！这里面row对应y轴，col对应x轴。</p>
</li>
</ol>
<h2 id="读图像文件"><a href="#读图像文件" class="headerlink" title="读图像文件"></a>读图像文件</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> osgeo <span class="token keyword">import</span> gdal
<span class="token comment" spellcheck="true"># 读图像文件</span>
<span class="token keyword">def</span> <span class="token function">read_img</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    dataset <span class="token operator">=</span> gdal<span class="token punctuation">.</span>Open<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 打开文件</span>
    im_width <span class="token operator">=</span> dataset<span class="token punctuation">.</span>RasterXSize  <span class="token comment" spellcheck="true"># 栅格矩阵的列数</span>
    im_height <span class="token operator">=</span> dataset<span class="token punctuation">.</span>RasterYSize  <span class="token comment" spellcheck="true"># 栅格矩阵的行数</span>
    im_geotrans <span class="token operator">=</span> dataset<span class="token punctuation">.</span>GetGeoTransform<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 仿射矩阵</span>
    im_proj <span class="token operator">=</span> dataset<span class="token punctuation">.</span>GetProjection<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 地图投影信息</span>
    im_data <span class="token operator">=</span> dataset<span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> im_width<span class="token punctuation">,</span> im_height<span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将数据写成数组，对应栅格矩阵</span>
    <span class="token keyword">del</span> dataset  <span class="token comment" spellcheck="true"># 关闭对象，文件dataset</span>
    <span class="token keyword">return</span> im_proj<span class="token punctuation">,</span> im_geotrans<span class="token punctuation">,</span> im_data<span class="token punctuation">,</span> im_height<span class="token punctuation">,</span> im_width<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="完整程序"><a href="#完整程序" class="headerlink" title="完整程序"></a>完整程序</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> osgeo <span class="token keyword">import</span> gdal
<span class="token comment" spellcheck="true"># 读图像文件</span>
<span class="token keyword">def</span> <span class="token function">read_img</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>
    dataset <span class="token operator">=</span> gdal<span class="token punctuation">.</span>Open<span class="token punctuation">(</span>filename<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 打开文件</span>
    im_width <span class="token operator">=</span> dataset<span class="token punctuation">.</span>RasterXSize  <span class="token comment" spellcheck="true"># 栅格矩阵的列数</span>
    im_height <span class="token operator">=</span> dataset<span class="token punctuation">.</span>RasterYSize  <span class="token comment" spellcheck="true"># 栅格矩阵的行数</span>
    im_geotrans <span class="token operator">=</span> dataset<span class="token punctuation">.</span>GetGeoTransform<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 仿射矩阵</span>
    im_proj <span class="token operator">=</span> dataset<span class="token punctuation">.</span>GetProjection<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 地图投影信息</span>
    im_data <span class="token operator">=</span> dataset<span class="token punctuation">.</span>ReadAsArray<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> im_width<span class="token punctuation">,</span> im_height<span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span>np<span class="token punctuation">.</span>float<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 将数据写成数组，对应栅格矩阵</span>
    <span class="token keyword">del</span> dataset  <span class="token comment" spellcheck="true"># 关闭对象，文件dataset</span>
    <span class="token keyword">return</span> im_proj<span class="token punctuation">,</span> im_geotrans<span class="token punctuation">,</span> im_data<span class="token punctuation">,</span> im_height<span class="token punctuation">,</span> im_width

<span class="token keyword">def</span> <span class="token function">write_img</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> im_proj<span class="token punctuation">,</span> im_geotrans<span class="token punctuation">,</span> im_data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment" spellcheck="true"># gdal数据类型包括</span>
    <span class="token comment" spellcheck="true"># gdal.GDT_Byte,</span>
    <span class="token comment" spellcheck="true"># gdal .GDT_UInt16, gdal.GDT_Int16, gdal.GDT_UInt32, gdal.GDT_Int32,</span>
    <span class="token comment" spellcheck="true"># gdal.GDT_Float32, gdal.GDT_Float64</span>

    <span class="token comment" spellcheck="true"># 判断栅格数据的数据类型</span>
    <span class="token keyword">if</span> <span class="token string">'int8'</span> <span class="token keyword">in</span> im_data<span class="token punctuation">.</span>dtype<span class="token punctuation">.</span>name<span class="token punctuation">:</span>
        datatype <span class="token operator">=</span> gdal<span class="token punctuation">.</span>GDT_Byte
    <span class="token keyword">elif</span> <span class="token string">'int16'</span> <span class="token keyword">in</span> im_data<span class="token punctuation">.</span>dtype<span class="token punctuation">.</span>name<span class="token punctuation">:</span>
        datatype <span class="token operator">=</span> gdal<span class="token punctuation">.</span>GDT_UInt16
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        datatype <span class="token operator">=</span> gdal<span class="token punctuation">.</span>GDT_Float32

    <span class="token comment" spellcheck="true"># 判读数组维数</span>
    <span class="token keyword">if</span> len<span class="token punctuation">(</span>im_data<span class="token punctuation">.</span>shape<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
        im_bands<span class="token punctuation">,</span> im_height<span class="token punctuation">,</span> im_width <span class="token operator">=</span> im_data<span class="token punctuation">.</span>shape
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        im_bands<span class="token punctuation">,</span> <span class="token punctuation">(</span>im_height<span class="token punctuation">,</span> im_width<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> im_data<span class="token punctuation">.</span>shape

    <span class="token comment" spellcheck="true"># 创建文件</span>
    driver <span class="token operator">=</span> gdal<span class="token punctuation">.</span>GetDriverByName<span class="token punctuation">(</span><span class="token string">"GTiff"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 数据类型必须有，因为要计算需要多大内存空间</span>
    dataset <span class="token operator">=</span> driver<span class="token punctuation">.</span>Create<span class="token punctuation">(</span>filename<span class="token punctuation">,</span> im_width<span class="token punctuation">,</span> im_height<span class="token punctuation">,</span> im_bands<span class="token punctuation">,</span> datatype<span class="token punctuation">)</span>

    dataset<span class="token punctuation">.</span>SetGeoTransform<span class="token punctuation">(</span>im_geotrans<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 写入仿射变换参数</span>
    dataset<span class="token punctuation">.</span>SetProjection<span class="token punctuation">(</span>im_proj<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 写入投影</span>

    <span class="token keyword">if</span> im_bands <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
        dataset<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WriteArray<span class="token punctuation">(</span>im_data<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 写入数组数据</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span>im_bands<span class="token punctuation">)</span><span class="token punctuation">:</span>
            dataset<span class="token punctuation">.</span>GetRasterBand<span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>WriteArray<span class="token punctuation">(</span>im_data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">del</span> dataset
<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>
    proj<span class="token punctuation">,</span> geotrans<span class="token punctuation">,</span> values<span class="token punctuation">,</span> row<span class="token punctuation">,</span> column <span class="token operator">=</span> read_img<span class="token punctuation">(</span>输入数据<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># 读数据</span>
     write_img<span class="token punctuation">(</span>r<span class="token string">'输出地址'</span><span class="token punctuation">,</span> proj<span class="token punctuation">,</span> geotrans<span class="token punctuation">,</span> 输出影像名称<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#写数据</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="https://blog.csdn.net/qq_22472089/article/details/106589293" target="_blank">利用python读写tiff遥感影像数据</a></li>
<li><a href="https://www.osgeo.cn/python_gdal_utah_tutorial/ch05.html" target="_blank"> GDAL python教程（4）——用GDAL读取栅格数据</a></li>
<li><a href="https://www.cnblogs.com/lovebay/p/4921261.html" target="_blank">用GDAL 读写矢量数据</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>GDAL</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>GDAL</tag>
      </tags>
  </entry>
  <entry>
    <title>『Arcpy』ArcGIS 10.2.2利用Anaconda集成scipy和pandas</title>
    <url>/posts/9de15300/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>利用Anaconda创建虚拟环境，将Anaconda里的第三方包集成到ArcGIS。</p>
<a id="more"></a>

<h1 id="一、Anaconda安装与配置"><a href="#一、Anaconda安装与配置" class="headerlink" title="一、Anaconda安装与配置"></a>一、Anaconda安装与配置</h1><p>这里是之前安装好的，Anaconda3，原博主安装的是Miniconda，效果都是一样的。</p>
<p>Miniconda安装参考：<a href="https://www.jianshu.com/p/f3d58072c85d">https://www.jianshu.com/p/f3d58072c85d</a></p>
<h1 id="二、ArcGIS与Anaconda集成"><a href="#二、ArcGIS与Anaconda集成" class="headerlink" title="二、ArcGIS与Anaconda集成"></a>二、ArcGIS与Anaconda集成</h1><p>这步是主要参考的内容</p>
<h2 id="Anaconda中创建新的python环境"><a href="#Anaconda中创建新的python环境" class="headerlink" title="Anaconda中创建新的python环境"></a>Anaconda中创建新的python环境</h2><p>（1）确定ArcGIS自带的Python版本</p>
<p>先明确ArcGIS里的python，numpy和matplotlib分别是什么版本。具体步骤为：<br> 打开ArcGIS Desktop 10.2.2，【Geoprocessing】–&gt;【Python】，输入如下代码：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token punctuation">,</span> numpy<span class="token punctuation">,</span> matplotlib
<span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>version<span class="token punctuation">,</span> numpy<span class="token punctuation">.</span>__version__<span class="token punctuation">,</span> matplotlib<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>可以看到，ArcGIS Desktop 10.2.2中得到的结果如下：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token punctuation">(</span><span class="token string">'2.7.5 (default, May 15 2013, 22:43:36) [MSC v.1500 32 bit (Intel)]'</span><span class="token punctuation">,</span> <span class="token string">'1.7.1'</span><span class="token punctuation">,</span> <span class="token string">'1.3.0'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>也就是Python 2.7.5， numpy 1.7.1，matplotlib 1.3.0<br> （2）创建虚拟python环境<br> 先将Anaconda的环境置为32bit （因为ArcGIS Desktop默认用的是32位的Python），然后再创建环境。<br> 在Anaconda Prompt窗口（<strong>右键以管理员身份运行</strong>）中，输入以下命令行，创建目录以准备自动下载和安装各种第三方包：</p>
<pre class="line-numbers language-python"><code class="language-python">set CONDA_FORCE_32BIT<span class="token operator">=</span><span class="token number">1</span>
conda create <span class="token operator">-</span>n arc1022 python<span class="token operator">=</span><span class="token number">2.7</span><span class="token punctuation">.</span><span class="token number">5</span> numpy<span class="token operator">=</span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">1</span> matplotlib<span class="token operator">=</span><span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>这样就创建好了新的Python环境，其名称为<strong>arc1022</strong>。</p>
<blockquote>
<p>当然，如果你暂时不想安装第三方包，可以只用输入：</p>
<pre class="line-numbers language-python"><code class="language-python">conda create <span class="token operator">-</span>n arc1022<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</blockquote>
<p>默认的Python环境为<strong>base</strong>，要激活刚创建的arc1022虚拟环境，请输入<code>conda activate arc1022</code><br>然后，就可以在arc1022环境中使用conda安装各种包了。例如：</p>
<pre class="line-numbers language-python"><code class="language-python">conda install scipy
conda install pandas<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<h2 id="将Anaconda里的第三方包集成到ArcGIS"><a href="#将Anaconda里的第三方包集成到ArcGIS" class="headerlink" title="将Anaconda里的第三方包集成到ArcGIS"></a>将Anaconda里的第三方包集成到ArcGIS</h2><p><strong>里所谓的集成，其实只是让ArcGIS自带的Python知道本机的哪个目录里还有合适第三方包</strong>。</p>
<p>上面的Miniconda是安装在<strong>C:\Python27\Miniconda2</strong>这个目录，并且用conda create命令创建的目录是<strong>arc1022</strong>，则所有用conda install xxx 新安装的第三方包都在下面这个目录里：</p>
<pre><code> C:\Python27\Miniconda2\envs\arc1022\Lib\site-packages</code></pre>
<p>下面把该目录告诉ArcGIS 10.2.2自带的Python 2.7.5，以便它能import该目录下的第三方包。</p>
<ol>
<li><p>创建一个后缀名为pth的文件，例如：<strong>findArc1022inMiniconda.pth</strong>，该文件里只需要一行文本：</p>
<pre><code> C:\Python27\Miniconda2\envs\arc1022\Lib\site-packages</code></pre>
<p> 这样，arcgis就知道到arc1022环境所在的目录下去找第三方包了。</p>
</li>
<li><p>将这个pth文件拷贝到ArcGIS自带Python的第三方包存放目录中，这个目录是：</p>
<pre><code>C:\Python27\ArcGIS10.2\Lib\site-packages</code></pre>
</li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://www.jianshu.com/p/f3d58072c85d" target="_blank">ArcGIS 10.2.2利用Anaconda集成scipy和pandas</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Arcpy</category>
      </categories>
      <tags>
        <tag>arcpy</tag>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>『Arcpy』python中arcpy库的应用！</title>
    <url>/posts/892c256e/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>遇到的使用<code>aracpy</code> 处理数据的方法！</p>
<a id="more"></a>

<h1 id="环境变量设置"><a href="#环境变量设置" class="headerlink" title="环境变量设置"></a>环境变量设置</h1><p><code>arcpy.env.workspace</code>到底是个什么东西？</p>
<p>环境变量可以在<strong>应用程序级别</strong>以及<strong>工具级别</strong>下进行设置，应用程序级别环境设置是最高级别，也是应用于所有工具的默认设置。工具级别环境设置会直接继承来自应用程序级别的环境设置。</p>
<p>Python脚本中可以通过<code>arcpy</code>中的<code>env</code>类来获取并设置环境变量，这些变量都是读/写属性。应用程序级别和工具级别环境设置都可以在脚本中调用且都可以应用于通过脚本运行的所有工具。</p>
<p>需要注意的是，在脚本中的环境设置仅应用于当前执行的脚本。<br>脚本中最为常用的环境变量设置就是<code>arcpy.env.workspace()</code>，该变量用于定义当前脚本的工作目录（或者称为工作空间）。<strong>由于在脚本中设置了当前工作空间，脚本的其他位置也就不需要引用数据集的完整路径，这会让代码更为简洁，不过还是需要引用工作空间下的数据集名称。</strong></p>
<p>代码为例：</p>
<pre class="line-numbers language-python"><code class="language-python">arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">'d: \ Data '</span>   
Rasters <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListRasters <span class="token punctuation">(</span> <span class="token string">"*"</span><span class="token punctuation">,</span><span class="token string">' TIF '</span><span class="token punctuation">)</span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>Rasters相当于获取了D:\Data目录目录中所有TIF格式的数据</p>
<p>另外一个简单的例子：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy 
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> <span class="token string">"C:/ArcpyBook/Ch6"</span> 
arcpy<span class="token punctuation">.</span>Buffer_analysis<span class="token punctuation">(</span><span class="token string">"Streams.shp"</span><span class="token punctuation">,</span><span class="token string">"Streams_Buffer.shp"</span><span class="token punctuation">,</span><span class="token string">"200 Feet"</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> arcpy<span class="token punctuation">.</span>getMessages<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>相当于对C:/ArcpyBook/Ch6目录中的Streams.shp文件进行200Feet的缓冲区分析，同时将缓冲结果保存在C:/ArcpyBook/Ch6目录下的Streams_Buffer.shp文件。</p>
<p>参考：<a href="http://zhihu.geoscene.cn/question/13958">arcpy.env.workspace到底是个什么东西？</a> </p>
<h1 id="Exists检查文件是否存在"><a href="#Exists检查文件是否存在" class="headerlink" title="Exists检查文件是否存在"></a>Exists检查文件是否存在</h1><p>语法：<code>arcpy.Exists(&lt;dataset&gt;)</code></p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">"E:\gis class\arcpy_1"</span>
fc <span class="token operator">=</span> <span class="token string">"point.shp"</span>
arcpy<span class="token punctuation">.</span>Exists<span class="token punctuation">(</span>fc<span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 返回结果为true or false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="Describe函数描述数据"><a href="#Describe函数描述数据" class="headerlink" title="Describe函数描述数据"></a>Describe函数描述数据</h1><p>语法：<code>&lt;variable&gt; = arcpy.Describe(&lt;input dataset&gt;)</code></p>
<pre class="line-numbers language-python"><code class="language-python">arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">"E:\gis class\arcpy_1"</span>
fc <span class="token operator">=</span> <span class="token string">"point.shp"</span>
desc <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>Describe<span class="token punctuation">(</span>fc<span class="token punctuation">)</span>       <span class="token comment" spellcheck="true"># 获取包含数据集属性的描述对象</span>
<span class="token keyword">print</span> desc<span class="token punctuation">.</span>shapeType        <span class="token comment" spellcheck="true"># 获取该要素类的形状类型</span>
<span class="token keyword">print</span> desc<span class="token punctuation">.</span>path         <span class="token comment" spellcheck="true">#获取存储路径</span>
sr <span class="token operator">=</span> desc<span class="token punctuation">.</span>spatialReference      <span class="token comment" spellcheck="true">#获取空间参考</span>
<span class="token keyword">print</span> sr<span class="token punctuation">.</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>输出结果:</p>
<pre><code>Point
E:\gis class\arcpy_1
Unknown</code></pre>
<h2 id="读取栅格数据的脚点坐标、影像名、坐标系"><a href="#读取栅格数据的脚点坐标、影像名、坐标系" class="headerlink" title="读取栅格数据的脚点坐标、影像名、坐标系"></a>读取栅格数据的脚点坐标、影像名、坐标系</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace<span class="token operator">=</span><span class="token string">"C:\Python27"</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    descRaster<span class="token operator">=</span>arcpy<span class="token punctuation">.</span>Describe<span class="token punctuation">(</span><span class="token string">"D:\\data3\\4026.0-540.0.tif"</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#os.path.join(root,file)</span>
    ext<span class="token operator">=</span>descRaster<span class="token punctuation">.</span>extent
    name1<span class="token operator">=</span>descRaster<span class="token punctuation">.</span>name
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"XMin: %f"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>ext<span class="token punctuation">.</span>XMin<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"XMax: %f"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>ext<span class="token punctuation">.</span>XMax<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"YMin: %f"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>ext<span class="token punctuation">.</span>YMin<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"YMax: %f"</span> <span class="token operator">%</span> <span class="token punctuation">(</span>ext<span class="token punctuation">.</span>YMax<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token string">"name,is,%s"</span><span class="token operator">%</span>name1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="返回数据-列表函数）"><a href="#返回数据-列表函数）" class="headerlink" title="返回数据(列表函数）"></a>返回数据(列表函数）</h1><h2 id="ListFeatureClasses函数"><a href="#ListFeatureClasses函数" class="headerlink" title="ListFeatureClasses函数"></a>ListFeatureClasses函数</h2><p><code>ListFeatureClasses</code>函数返回当前工作空间中的要素类列表</p>
<p>语法：<code>ListFeatureClasses ( { wild_card }, { feature_type }, { feature_dataset } ) </code> { }为可选参数</p>
<p>例：<code>ListFeatureClasses ( {“w*”, “point” )</code>  ——返回文件名以w开头，并且要素类型是点的所有要素类</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">"E:\gis class\arcpy_1"</span>
fclist <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListFeatureClasses<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true"># 返回包含要素类的列表</span>
<span class="token keyword">print</span> fclist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>输出结果:</p>
<pre><code>[u'line.shp', u'point.shp']</code></pre>
<h2 id="ListRasters函数"><a href="#ListRasters函数" class="headerlink" title="ListRasters函数"></a>ListRasters函数</h2><p><code>ListRasters</code>函数返回当前工作空间中的矢量数据集列表</p>
<p>语法：<code>ListRasters ( { wild_card }, { raster_type } ) </code>  与ListFeatureClasses函数相似</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">"E:\gis class\arcpy_1"</span>
rslist <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListRaster<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token string">"tif"</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">#返回该工作空间中数据类型为TIFF影像的栅格数据集列表</span>
<span class="token keyword">print</span> rslist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<h2 id="ListFields函数"><a href="#ListFields函数" class="headerlink" title="ListFields函数"></a>ListFields函数</h2><p><code>ListFields</code>函数返回某个要素类属性表的字段对象列表</p>
<p>语法：<code>ListFields( dataset , { wild_card }， { field_type} )</code></p>
<p>ListFields函数返回的是字段列表对象，读取列表属性要使用for循环</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> r<span class="token string">"E:\gis class\data0408"</span>
fc <span class="token operator">=</span> <span class="token string">"现状道路.shp"</span>
fieldlist <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListFields<span class="token punctuation">(</span>fc<span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 返回字段列表对象，包括（字段名、别名、类型和长度）</span>
<span class="token keyword">for</span> field <span class="token keyword">in</span> fieldlist<span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># ListFields函数返回的是对象，所以要使用for循环读取对象的各个属性</span>
    <span class="token keyword">print</span> <span class="token string">"field name :{0} "</span> <span class="token string">" field length : {1} "</span> <span class="token string">" filed type : {2}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>field<span class="token punctuation">.</span>name<span class="token punctuation">,</span>str<span class="token punctuation">(</span>field<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span>field<span class="token punctuation">.</span>type<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>输出结果</p>
<pre><code>field name :FID  field length : 4  filed type : OID
field name :Shape  field length : 0  filed type : Geometry
field name :Layer  field length : 254  filed type : String
field name :a  field length : 4  filed type : SmallInteger</code></pre>
<h1 id="栅格数据进行投影坐标转换"><a href="#栅格数据进行投影坐标转换" class="headerlink" title="栅格数据进行投影坐标转换"></a>栅格数据进行投影坐标转换</h1><p>将栅格数据集从一种投影变换到另一种投影。</p>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-python"><code class="language-python">ProjectRaster_management <span class="token punctuation">(</span>in_raster<span class="token punctuation">,</span> 
                          out_raster<span class="token punctuation">,</span> 
                          out_coor_system<span class="token punctuation">,</span> 
                          <span class="token punctuation">{</span>resampling_type<span class="token punctuation">}</span><span class="token punctuation">,</span>
                          <span class="token punctuation">{</span>cell_size<span class="token punctuation">}</span><span class="token punctuation">,</span> 
                          <span class="token punctuation">{</span>geographic_transform<span class="token punctuation">}</span><span class="token punctuation">,</span> 
                          <span class="token punctuation">{</span>Registration_Point<span class="token punctuation">}</span><span class="token punctuation">,</span>
                          <span class="token punctuation">{</span>in_coor_system<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参数：</p>
<ul>
<li><code>in_raster</code> :输入栅格数据集。</li>
<li><code>out_raster</code> :要创建的输出栅格数据集。</li>
<li><code>out_coor_system</code> :输入栅格待投影到的目标坐标系。默认值将基于“输出坐标系”环境设置进行设定。</li>
<li>其它为可选参数。</li>
</ul>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>对影像数据进行批量投影坐标转换：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
<span class="token keyword">import</span> fnmatch
<span class="token keyword">import</span> os

<span class="token keyword">def</span> <span class="token function">projecttaster</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span class="token punctuation">:</span>
    names <span class="token operator">=</span> fnmatch<span class="token punctuation">.</span>filter<span class="token punctuation">(</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'*.tif'</span><span class="token punctuation">)</span>
    src_files <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>src<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">]</span>
    out_coor_system <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token string">"WGS 1984.prj"</span><span class="token punctuation">)</span>
    dst_files <span class="token operator">=</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> name<span class="token punctuation">)</span> <span class="token keyword">for</span> name <span class="token keyword">in</span> names<span class="token punctuation">]</span>

    <span class="token keyword">for</span> src_file<span class="token punctuation">,</span> dst_file <span class="token keyword">in</span> zip<span class="token punctuation">(</span>src_files<span class="token punctuation">,</span> dst_files<span class="token punctuation">)</span><span class="token punctuation">:</span>
        arcpy<span class="token punctuation">.</span>ProjectRaster_management<span class="token punctuation">(</span>src_file<span class="token punctuation">,</span> dst_file<span class="token punctuation">,</span> out_coor_system<span class="token punctuation">)</span>
        <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'%s    has done!'</span><span class="token operator">%</span>src_file<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    src <span class="token operator">=</span> r<span class="token string">''</span>
    dst <span class="token operator">=</span> r<span class="token string">''</span>
    projecttaster<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dst<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>参考：<a href="https://desktop.arcgis.com/zh-cn/arcmap/10.5/tools/data-management-toolbox/project-raster.htm">投影栅格</a> </p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Arcpy</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>Arcpy</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel点导入ArcGIS生成点文件</title>
    <url>/posts/9088ec4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>将excel点数据导入ArcGIS生成点文件</p>
<a id="more"></a>

<h1 id="软件导入"><a href="#软件导入" class="headerlink" title="软件导入"></a>软件导入</h1><ol>
<li><p>ArcGIS导入点数据的方法</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019143852.png" alt="image-20201019140747977" style="zoom:50%;">

<p>​    </p>
<p>选择excel文件，会提示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019143906.png" alt="image-20201019140925967" style="zoom:80%;">

<p>解决方案：</p>
<p>使用ArcGIS10.2及以上版本。【转换工具箱】中有【excel转表】工具，转换后即可打开。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019143921.png" alt="image-20201019141050954" style="zoom:80%;">

<p>选要转换的文件和转换后表保存的位置。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019143942.png" alt="image-20201019143244495" style="zoom:80%;">

<p>重新添加点数据：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019143954.png" alt="image-20201019140747977" style="zoom:80%;">

<p>点导入之后还需要添加相应的地理坐标和投影坐标：</p>
<ul>
<li><p>选择添加的点：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201019150125.png" alt="image-20201019145909367" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20201019150136.png" alt="image-20201019150011408" style="zoom: 50%;">







</li>
</ul>
</li>
</ol>
<h1 id="利用python-转换："><a href="#利用python-转换：" class="headerlink" title="利用python 转换："></a>利用python 转换：</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><pre class="line-numbers language-python"><code class="language-python">ExcelToTable<span class="token punctuation">(</span>Input_Excel_File<span class="token punctuation">,</span> Output_Table<span class="token punctuation">,</span> <span class="token punctuation">{</span>Sheet<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
<th>数据类型</th>
</tr>
</thead>
<tbody><tr>
<td>Input_Excel_File</td>
<td>要转换的 Microsoft Excel 文件。</td>
<td>File</td>
</tr>
<tr>
<td>Output_Table</td>
<td>输出表。</td>
<td>Table</td>
</tr>
<tr>
<td>Sheet（可选）</td>
<td>要导入的 Excel 文件中特定工作表的名称。如果未指定，则使用工作簿中的第一个工作表。</td>
<td>String</td>
</tr>
</tbody></table>
<h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><p>Excel 转表 (ExcelToTable) 示例（Python 窗口）</p>
<p>以下 Python 窗口脚本演示了如何在即时模式下使用 Excel 转表 (ExcelToTable) 函数。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> arcpy
arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> <span class="token string">"c:/data"</span>
arcpy<span class="token punctuation">.</span>ExcelToTable_conversion<span class="token punctuation">(</span><span class="token string">"data.xls"</span><span class="token punctuation">,</span> <span class="token string">"outgdb.gdb"</span><span class="token punctuation">,</span> <span class="token string">"Sheet1"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>Excel 转表 (ExcelToTable) 示例 2（独立脚本）</p>
<p>将 Microsoft Excel 文件的各个工作表导入地理数据库的各个表中。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> xlrd
<span class="token keyword">import</span> arcpy
<span class="token keyword">def</span> <span class="token function">importallsheets</span><span class="token punctuation">(</span>in_excel<span class="token punctuation">,</span> out_gdb<span class="token punctuation">)</span><span class="token punctuation">:</span>
    workbook <span class="token operator">=</span> xlrd<span class="token punctuation">.</span>open_workbook<span class="token punctuation">(</span>in_excel<span class="token punctuation">)</span>
    sheets <span class="token operator">=</span> <span class="token punctuation">[</span>sheet<span class="token punctuation">.</span>name <span class="token keyword">for</span> sheet <span class="token keyword">in</span> workbook<span class="token punctuation">.</span>sheets<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'{} sheets found: {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>len<span class="token punctuation">(</span>sheets<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">','</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>sheets<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> sheet <span class="token keyword">in</span> sheets<span class="token punctuation">:</span>
        <span class="token comment" spellcheck="true"># The out_table is based on the input excel file name</span>
        <span class="token comment" spellcheck="true"># a underscore (_) separator followed by the sheet name</span>
        out_table <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>
            out_gdb<span class="token punctuation">,</span>
            arcpy<span class="token punctuation">.</span>ValidateTableName<span class="token punctuation">(</span>
                <span class="token string">"{0}_{1}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>in_excel<span class="token punctuation">)</span><span class="token punctuation">,</span> sheet<span class="token punctuation">)</span><span class="token punctuation">,</span>
                out_gdb<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Converting {} to {}'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>sheet<span class="token punctuation">,</span> out_table<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment" spellcheck="true"># Perform the conversion</span>
        arcpy<span class="token punctuation">.</span>ExcelToTable_conversion<span class="token punctuation">(</span>in_excel<span class="token punctuation">,</span> out_table<span class="token punctuation">,</span> sheet<span class="token punctuation">)</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>
    importallsheets<span class="token punctuation">(</span><span class="token string">'c:/data/data.xls'</span><span class="token punctuation">,</span>
                    <span class="token string">'c:/data/outgdb.gdb'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="https://pro.arcgis.com/zh-cn/pro-app/tool-reference/conversion/excel-to-table.htm" target="_blank">Excel 转表 (转换)</a> </li>
<li><a href="https://blog.csdn.net/weixin_43105618/article/details/90748721" target="_blank">excel点导入arcgis生成点文件</a>  </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>ArcGIS</category>
      </categories>
      <tags>
        <tag>GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>基于ArcGIS实现山体阴影和晕渲</title>
    <url>/posts/59ed33ea/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>基于ArcGIS实现山体阴影和晕渲</p>
<a id="more"></a>

<ol>
<li><p>启动ArcMap，加载栅格数据DEM:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143145.png" alt="image-20201015142318133" style="zoom: 50%;">
</li>
<li><p>在搜索窗口中搜索“山体阴影”（或Hillshade）工具(或在ArcToolbox中打开“山体阴影”（或Hillshade）工具，输入数据源选择DEM图层，其他参数默认)</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143156.png" alt="image-20201015141539982" style="zoom: 67%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143202.png" alt="image-20201015141657853" style="zoom: 67%;">
</li>
<li><p>单击<strong>OK</strong>，生成新的栅格数据图层HillSha_dem；</p>
</li>
<li><p>在内容列表中，右键单击HillSha_dem图层，选择Properties；</p>
</li>
<li><p>打开图层属性窗口，切换到Display页，设置图层透明度为35%，如图；</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143206.png" alt="image-20201015141901592" style="zoom: 67%;">
</li>
<li><p>单击<strong>确定</strong>，关闭图层属性窗口；</p>
</li>
<li><p>在内容列表中，将HillSha_dem图层移至DEM图层上方，查看地图效果，如图</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143211.png" alt="image-20201015142030425" style="zoom: 50%;">
</li>
<li><p>在内容列表中，右键单击DEM图层，选择Properties；</p>
</li>
<li><p>打开图层属性窗口，切换到Symbology页，选择Stretched，设置Stretch Type为Min-Max，选择带有晕渲效果的色带，如图:</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143221.png" alt="image-20201015142217927" style="zoom:67%;">
</li>
<li><p>单击<strong>确定</strong>，查看地图效果，如图。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20201015143226.png" alt="image-20201015142257444" style="zoom: 50%;">





</li>
</ol>
<p>参考</p>
<ul>
<li><a href="https://malagis.com/arcgis-mapping-works-3-2-moutain-shadow-hill-shading.html" target="_blank">ArcGIS制图手册(3-2)山体阴影和晕渲</a></li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>ArcGIS</category>
      </categories>
  </entry>
  <entry>
    <title>Zotero+Word2016参考文献中英文混排，解决et al和等的问题</title>
    <url>/posts/590781cc/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>[Zotero+Word]Zotero+Word2016参考文献中英文混排，解决et al和等的问题</p>
<a id="more"></a>

<h1 id="Zotero-参考文献中英文混排"><a href="#Zotero-参考文献中英文混排" class="headerlink" title="Zotero 参考文献中英文混排"></a>Zotero 参考文献中英文混排</h1><p>由于现在的csl不支持多语言，在用chinese-gb7714-1987-numeric或chinese-gb7714-2005-numeric的csl生成的参考文献英文作者超过3个后面也是“等”（正确的应该是et al），如图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930140951.jpg" alt="v2-b48002efe470182914ac230815b339d7_r" style="zoom: 67%;">

<p>下面的方法可以实现将英文作者后面的“等”替换为“et al”，而中文作者后面保持不变。</p>
<ol>
<li><p>在word 2016中依次点击开发工具-宏（如果没有开发工具，也可在视图中找到“宏”），在宏名下面的文本框中随便输入一个名称（如abc），点击“创建”。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141100.jpg" alt="v2-e42a584fa8b1d42ed7f9b60dab90d641_720w" style="zoom:80%;">
</li>
<li><p>将Sub abc到End Sub全部删除，用下面的代码替换，</p>
<pre><code>Sub deng2etal()
'
' deng2etal macro
' English等 -&gt; english, et al
'
    With Selection.Find
        .Forward = True
        .ClearFormatting
        .Text = "(&lt;[A-z]@, )等"
        With .Replacement
            .ClearFormatting
            .Text = "\1et al"
        End With
        .Wrap = wdFindStop
        .Execute Replace:=wdReplaceAll, MatchWildcards:=True
    End With
End Sub</code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141055.png" alt="v2-0e3c9f3e43300d7752daa78a3d6968a7_720w" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141050.jpg" alt="v2-213c002c0fe09b9f454447a54b93a31c_720w" style="zoom:80%;">
</li>
<li><p>然后关闭宏编辑窗口。</p>
</li>
<li><p>依次点击开发工具-宏（如果没有开发工具，也可在视图中找到“宏”），点击deng2etal，再点击“运行”，效果如图：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141045.jpg" alt="v2-e2a6772979e68ab6fbe091d8def6e241_720w" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141125.jpg" alt="v2-e8733afc8f057fe91c71784dd8c87287_720w" style="zoom:80%;">



</li>
</ol>
<ol start="5">
<li><p>当然也可以为这个宏分配一个按钮，点击快速访问工具栏最后的向下箭头，选择“其他命令(M)…”，</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141108.jpg" alt="v2-5f7f465487af11498b6f958f1268f9ad_720w" style="zoom:80%;">



</li>
</ol>
<ol start="6">
<li><p>然后在“从下列位置选择命令（C)”处点击 “宏”，找到刚才创建的宏，点击“添加”，再点“确定”返回。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141112.jpg" alt="v2-ab6f9d13f65e272659dca736d1d5980c_720w" style="zoom:80%;">
</li>
<li><p>在此步骤也可以为宏设置其他按钮形状，添加后，选中这个宏，再点“修改”，选择喜欢的按钮形状，然后点“确定”返回即可。此时快速访问工具栏上就会有这个宏的按钮了，用时点击即可。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200930141117.jpg" alt="v2-ec9140449ffea7868fbd2b719277cafc_720w" style="zoom:80%;">

</li>
</ol>
<h1 id="其它问题"><a href="#其它问题" class="headerlink" title="其它问题"></a>其它问题</h1><ol>
<li>参考文献是用chinese-gb7714-1987-…或chinese-gb7714-2005-…等csl生成的参考文献，也就是英文作者超过3个后面是“等”。</li>
<li>其他参考文献管理软件如Mendeley，EndNote生成的参考文献同样适合。</li>
<li>要在最后定稿后再运行此宏，参考文献更新后需要重新运行。</li>
<li>方法来源于：<a href="https://zhuanlan.zhihu.com/p/53594081">滏阳河边捉蚯蚓：自定义宏批量修改csl生成参考文献书目的错误</a>。</li>
<li>“宏”可以在“视图”或“开发工具”中找到。</li>
<li>如果需要“等”前有逗号，形如：“, 等”，请参见：<a href="https://zhuanlan.zhihu.com/p/60029219">johnmy：Zotero+Word2016参考文献中英文混排，解决et al和等的问题，另一思路</a></li>
<li>2019.4.14修改：由于zotero升级，修改了“等”前面没有逗号的bug</li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li>转:<a href="https://zhuanlan.zhihu.com/p/58237038" target="_blank">[Zotero+Word]Zotero+Word2016参考文献中英文混排，解决et al和等的问题</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/53594081" target="_blank">自定义宏批量修改csl生成参考文献书目的错误</a> </li>
<li><a href="https://zhuanlan.zhihu.com/p/31326415" target="_blank">四步实现自定义 Zotero 参考文献格式</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Zotreo</tag>
      </tags>
  </entry>
  <entry>
    <title>集成学习三大法宝-bagging、boosting、stacking</title>
    <url>/posts/ba9591fe/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><a id="more"></a>

<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>『Statistics』 推断统计:假设检验</title>
    <url>/posts/68291099/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>假设检验的原理以及相关的概念。</p>
<a id="more"></a>

<h1 id="参数估计和假设检验"><a href="#参数估计和假设检验" class="headerlink" title="参数估计和假设检验"></a>参数估计和假设检验</h1><p><strong>参数估计</strong>( parameter estimation) 和 <strong>假设检验</strong> ( hypothesis testing) 是统计推断的两个组成部分，它们都是利用样本对总体进行某种推断，但推断的角度不同。参数估计讨论的是用样本统计量估计总体参数的方法，总体参数 μ 在估计前是未知的。而在假设检验中，则是先对 μ 的值提出一个假设，然后利用样本信息去检验这个假设是否成立。</p>
<h1 id="假设检验-hypothesis-testing"><a href="#假设检验-hypothesis-testing" class="headerlink" title="假设检验( hypothesis testing)"></a>假设检验( hypothesis testing)</h1><p>包括参数和非参数检验：</p>
<ul>
<li>参数假设检验（parametric test）：总体的 分布形式已知，需要对总体的未知参数进行 假设检验。</li>
<li>非参数假设检验（non-parametric test）：对 总体分布形式所知甚少，需对未知分布函数 的形式及其他特征进行假设检验。</li>
</ul>
<blockquote>
<p>参数假设检验举例</p>
<p>根据1989年的统计资料，某地女性新生儿的平均体重为3190 克。为判断该地1990年的女性新生儿体重与1989年相比有无显著差异，从该地1990年的女性新生儿中随机抽取30人，测得其平均体重为3210克。从样本数据看，1990年女新生儿体重比 1989年略高，但这种差异可能是由于抽样的随机性带来的，也 许这两年新生儿的体重并没有显著差异。究竟是否存在显著差异？可以先假设这两年新生儿的体重没有显著差异，然后利用 样本信息检验这个假设能否成立。这是一个关于总体均值的假 设检验问题。</p>
</blockquote>
<h1 id="假设检验的原理"><a href="#假设检验的原理" class="headerlink" title="假设检验的原理"></a>假设检验的原理</h1><p>小概率原理。假设检验的基本思想是概率性质的<strong>反证法</strong>。(不同于纯数 学中的反证法)</p>
<p>什么是小概率？</p>
<ul>
<li>概率是0～1之间的一个数，因此小概率就是接近0的一个 数</li>
<li>著名的英国统计家 Ronald Fisher 把 20 分之 1 作为标准，也 就是0.05，从此0.05或比0.05小的概率都被认为是小概率</li>
<li>Fisher没有任何深奥的理由解释他为什么选择0.05，只是 说他忽然想起来的</li>
</ul>
<h2 id="什么是小概率原理"><a href="#什么是小概率原理" class="headerlink" title="什么是小概率原理"></a>什么是小概率原理</h2><ul>
<li><strong>小概率原理</strong>——发生概率很小的随机事件（小概率事件） 在一次实验中几乎是不可能发生的。</li>
<li>根据这一原理，可以先假设总体参数的某项取值为真， 也就是假设其发生的可能性很大，然后抽取一个样本 进行观察，如果样本信息显示出现了与事先假设相反的结果且与原假设差别很大，则说明原来假定的小概率事件在一次实验中发生了，这是一个违背小概率原 理的不合理现象，因此有理由怀疑和拒绝原假设；否则不能拒绝原假设。</li>
<li>检验中使用的小概率是检验前人为指定的。</li>
</ul>
<h2 id="小概率原理举例"><a href="#小概率原理举例" class="headerlink" title="小概率原理举例"></a>小概率原理举例</h2><p>某工厂质检部门规定该厂产品次品率不超过4％方能 出厂。今从1000件产品中抽出10件，经检验有4件次 品，问这批产品是否能出厂?</p>
<p>如果假设这批产品的次品率P≤4％，则可计算事件 “抽10件产品有4件次品”的出现概率为：<br>$$<br>\begin{equation}P_{10}(4)=C_{10}^{4}(0.04)^{4}(1-0.04)^{6}=0.00042\end{equation}<br>$$<br>可见，概率是相当小的，1万次实验中可能出现4次， 然而概率如此小的事件，在一次实验中居然发生了， 这是不合理的，而不合理的根源在于假设次品率 P≤4％ ，因而认为假设次品率P≤4％是不能成立的， 故按质检部门的规定，这批产品不能出厂。</p>
<p>可见，概率是相当小的，1万次实验中可能出现4次， 然而概率如此小的事件，在一次实验中居然发生了， 这是不合理的，而不合理的根源在于假设次品率 P≤4％ ，因而认为假设次品率P≤4％是不能成立的， 故按质检部门的规定，这批产品不能出厂。</p>
<p>可见，概率是相当小的，1万次实验中可能出现4次， 然而概率如此小的事件，在一次实验中居然发生了， 这是不合理的，而不合理的根源在于假设次品率 P≤4％ ，因而认为假设次品率P≤4％是不能成立的， 故按质检部门的规定，这批产品不能出厂。</p>
<h1 id="假设检验的基本思想"><a href="#假设检验的基本思想" class="headerlink" title="假设检验的基本思想"></a>假设检验的基本思想</h1><h1 id="假设检验的两个特点"><a href="#假设检验的两个特点" class="headerlink" title="假设检验的两个特点"></a>假设检验的两个特点</h1><ul>
<li>第一，<strong>假设检验采用逻辑上的反证法</strong>，即为了检验 一个假设是否成立，首先假设它是真的，然后对 样本进行观察，如果发现出现了不合理现象，则 可以认为假设是不合理的，拒绝假设。否则可以 认为假设是合理的，接受假设。</li>
<li>第二，假设检验采用的反证法带有概率性。所谓假 设的不合理不是绝对的，而是基于实践中广泛采用的 小概率事件几乎不可能发生的原则。至于事件的概率 小到什么程度才算是小概率事件，并没有统一的界定 标准，而是必须根据具体问题而定。如果一旦判断失 误，错误地拒绝原假设会造成巨大损失，那么拒绝原 假设的概率就应定的小一些；如果一旦判断失误，错 误地接受原假设会造成巨大损失，那么拒绝原假设的 概率就应定的大一些。</li>
<li>小概率通常用 $\alpha$ 表示，又称为<strong>检验的显著性水平</strong>。通 常取 $\alpha$  ＝0.05 或$\alpha$  ＝0.01，即把概率不超过 0.05 或 0.01 的事 件当作小概率事件。</li>
</ul>
<h1 id="原假设和备择假设"><a href="#原假设和备择假设" class="headerlink" title="原假设和备择假设"></a>原假设和备择假设</h1><h2 id="原假设"><a href="#原假设" class="headerlink" title="原假设"></a>原假设</h2><p>一种叫原假设，也叫零假设，用H0表示。原假设一般是统计者想要拒绝的假设。原假设的设置一般为：等于=、大于等于&gt;=、小于等于&lt;=。</p>
<h2 id="备择假设"><a href="#备择假设" class="headerlink" title="备择假设"></a>备择假设</h2><p>另外一种叫备择假设，用H1表示。备则假设是统计者想要接受的假设。备择假设的设置一般为：不等于、大于&gt;、小于&lt;。</p>
<p>例子在进行假设检验时，我们希望接受版本2的假设，想拒绝接受版本1的假设。所以我们的假设设置为：H0 ：μ版本1 &gt;= μ版本2 ，H1 : μ版本1 &lt; μ版本2。</p>
<p>为什么统计者想要拒绝的假设放在原假设呢？因为原假设备被拒绝如果出错的话，只能犯第I类错误，而犯第I类错误的概率已经被规定的显著性水平所控制。</p>
<h1 id="假设检验的两类错误"><a href="#假设检验的两类错误" class="headerlink" title="假设检验的两类错误"></a>假设检验的两类错误</h1><p>根据假设检验做出判断无非下述四种情况：</p>
<p>1、原假设真实， 并接受原假设，判断正确；</p>
<p>2、原假设不真实，且拒绝原假设，判断正确；</p>
<p>3、原假设真实， 但拒绝原假设，判断错误；</p>
<p>4、原假设不真实，却接受原假设，判断错误。</p>
<p>假设检验是依据样本提供的信息进行判断，有犯错误的可能。所犯错误有两种类型：一种是弃真错误，另一种是取伪错误。</p>
<p>弃真错误也叫第I类错误或α错误：它是指 原假设实际上是真的，但通过样本估计总体后，拒绝了原假设。明显这是错误的，我们拒绝了真实的原假设，所以叫弃真错误，这个错误的概率我们记为α。这个值也是显著性水平，在假设检验之前我们会规定这个概率的大小。</p>
<p>取伪错误也叫第II类错误或β错误：它是指 原假设实际上假的，但通过样本估计总体后，接受了原假设。明显者是错误的，我们接受的原假设实际上是假的，所以叫取伪错误，这个错误的概率我们记为β。</p>
<h1 id="显著性水平"><a href="#显著性水平" class="headerlink" title="显著性水平"></a>显著性水平</h1><p>显著性水平是指当原假设实际上正确时，检验统计量落在拒绝域的概率，简单理解就是犯弃真错误的概率。这个值是我们做假设检验之前统计者根据业务情况定好的。</p>
<p>显著性水平α越小，犯第I类错误的概率自然越小，一般取值：0.01、0.05、0.1等</p>
<p>当给定了检验的显著水平a=0.05时，进行双侧检验的Z值为1.96 。</p>
<p>当给定了检验的显著水平a=0.05时，进行单侧检验的Z值为1.645 。</p>
<p>当给定了检验的显著水平a=0.01时，进行双侧检验的Z值为2.58 。</p>
<p>当给定了检验的显著水平a=0.01时，进行单侧检验的Z值为2.33</p>
<h1 id="检验统计量"><a href="#检验统计量" class="headerlink" title="检验统计量"></a>检验统计量</h1><p>定义：据以对原假设和备择假设作出决策的某个样本统计量，称为检验统计量。</p>
<h1 id="拒绝域、接受域和临界值"><a href="#拒绝域、接受域和临界值" class="headerlink" title="拒绝域、接受域和临界值"></a>拒绝域、接受域和临界值</h1><p>在规定了检验的显著性水平 α 后，根据容量为 n 的样本，按照统计量的理论概率分布规律，可以确定据以判断拒绝和接受原假设的检验统计量的<strong>临界值</strong>。</p>
<p><strong>临界值</strong>将统计量的所有可能取值区间分为两互不相交的部分，即原假设的拒绝域和接受域。</p>
<p><strong>接受域</strong>: 原假设为真时允许范围内的变动，应该接受原假设。</p>
<p><strong>拒绝域</strong>: 当原假设为真时只有很小的概率出现，因而当统计量的结果落入这一区域便应拒绝原假设，这一区域便称作拒绝域。</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200609164249.png"></center>

<h1 id="利用-P-值进行决策"><a href="#利用-P-值进行决策" class="headerlink" title="利用 P 值进行决策"></a>利用 P 值进行决策</h1><p>进行检验的程序可以根据检验统计量落人的区域作出是否拒绝原假设的决策。</p>
<p>在确定 α 以后，拒绝域的位置也就相应确定了，其好处是进行决策的界限清晰，但缺陷是进行决策面临的风险是笼统的。在上面的例子中，计算的 z=2.5，落入拒绝域，我们拒绝原假设，并知道犯弃真错误的概率(面临的风险)为0.05， 如果计算的 z=2.0，同样落人拒绝域，我们拒绝原假设面临的风险也是0.05。0.05 是一个通用的风险概率，这是用域表示的缺陷，但根据不同的样本结果进行决策，面临的风险事实上是有差别的。</p>
<p><strong>为了精确地反映决策的风险度，可以利用P值进行决策。</strong></p>
<p>为了解什么是P值，如前面的举例：根据随机抽样测得1990年的样本均值x=3210克，与1989年的总体均值3190克相差20克，异究竟是大还是小？换句话说，如果原假设成立，即1990年新生儿体重的与1989年新生儿体重的总体均值相同，那么随机抽取出n=100的样本3210克的概率有多大呢？我们把这个概率称为P值，所以P值就是当原假设为真时所得到的样本观察结果或更极端结果出现的概率。如果P值很小，说明这种情况发生的概率很小，而如果出现了，根据小概率原理，我们就有理由拒绝原假设，<strong>P值越小，我们拒绝原假设的理由就越充分。</strong></p>
<p>例题：由统计资料得知，1989年某地新生儿的平均体重为3190克，现从1990年的新生儿中随机抽取100个，测得其平均体重为3210克，问1990年的新生儿与1989年相比，体重有无显著差异？</p>
<p>解答：从调查结果看，1990年新生儿的平均体重3210克，比1989年新生儿的平均体重3190克增加了20克，但这20克的差异可能源于不同的情况。一种情况是，1990年新生儿的体重与1989年相比没有什么差别，20克的差异是由于抽样的随机性造成的；另一种情况是，抽样的随机性不可能造成20克这样大的差异，1990年新生儿的体重与1989年新生儿的体重相比确实有所增加。</p>
<p><strong>P值是通过计算得到的</strong>，P值的大小取决于三个因素，一个是样本数据与原假设之间的差异，在新生儿体重的例子里这个差异是20克;另一个是样本量，这里n=100;再一个是被假设参数的总体分布。在这个例子中计算出的P=0.012 42，这就是说，如果原假设成立，样本均值等于和大于3210克的概率只有0.012 42，这是很小的，由此我们可以拒绝原假设，得到与前面z值检验相同的结论，如图8–4所示。</p>
<center><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200610141105.png"></center>

<p>P 值的长处是它反映了观察到的实际数据与原假设之间不一致的概率值，与传统的拒绝域范围相比，P是一个具体的值，这样就提供了更多的信息。如果事先确定了显著性水平，如 $\alpha$ =0.05，则在双侧检验中，P&gt;0. 025( $\alpha$ /2=0.025)不能拒绝原假设; 反之，P&lt;0. 025则拒绝原假设。在单侧检验中，P&gt;0. 05不能拒绝原假设，P&lt;0.05则拒绝原假设。当然，也可以直接使用 P 值进行决策，这时 P 值本身就代表了显著性水平。我们也可以使用P值，按照所需要的显著性水平进行判断和决策，具体做法就是用P值和需要的显著性水平进行比较。</p>
<p>例题</p>
<p>某批发商欲从厂家购进一批灯泡，根据合同规定灯泡的使用寿命平均不能低于1 000小时。已知灯泡燃烧寿命服从正态分布，标准差为200小时。在总体中随机抽取了100个灯泡，得知样本均值为960小时，批发商是否应该购买这批灯泡?</p>
<p>这是一个单侧检验问题。显然，如果灯泡的燃烧寿命超过了1000小时，批发商是欢迎的，因为他用已定的价格(灯泡寿命为1000小时的价格)购进了更高质量的产品。因此，如果样本均值超过1000小时，他会购进这批灯泡。问题在于样本均值为960小时他是否应当购进。因为即便总体均值为1000小时，由于抽样的随机性，样本均值略小于1000小时的情况也是会经常出现的。在这种场合下，批发商更为关注可以容忍的下限，即当灯泡寿命低于什么水平时拒绝。于是检验的形式为:<br>$$<br>\begin{equation}\begin{array}{l}<br>H_{0}: \mu \geqslant 1000 \<br>H_{1}: \mu&lt;1000<br>\end{array}\end{equation}<br>$$</p>
<p>左单侧检验如下图所示($\alpha=0.5$) , 也可以把左单侧检验称为下限检验。</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200924002359.png" alt="image-20200924000137151" style="zoom:80%;">

<p>解答：根据分析，采用左单侧检验。</p>
<p>在该例中已知 $\mu_0$=100，$\bar{x}$=960，$\sigma$=200，n=100，并假定显著性水平 $\alpha$=0.05.由上图可知拒绝域在左侧，所以临界值为负，即$z_{\alpha} = -1.645$. z的下标$\alpha$表示单侧检验。</p>
<p>进行检验的过程为：<br>$$<br>\begin{equation}\begin{array}{l}<br>H_{0}: \mu \geqslant 1000 \<br>H_{1: \mu}&lt;1000 \<br>z=\frac{\bar{x}-\mu_{0}}{\sigma / \sqrt{n}}=\frac{960-1000}{200 / \sqrt{100}}=-2<br>\end{array}\end{equation}<br>$$<br>由于 $|z|&gt;\left|z_{a}\right|$ ，即 $z$ 的值位于拒绝域内，所以拒绝 $H0$ , 即这批灯泡的使用寿命低于1000小时，批发商不应购买。</p>
<p>如果用 P 值进行检验，查表可得，统计量 $z$  的绝对值 2，与之对应 的函数值为 0.97725，由于这是单侧检验，故 P 值为：<br>$$<br>P=1-0.97725=0.02275<br>$$<br>在单侧检验中，用 P 值直接与 $\alpha$ 进行比较，由于 $P(0.02275)&lt;\alpha(0.05)$  ，故拒绝 $H0$。</p>
<p>如果在此例的假设检验中，显著性水平 $\alpha = 0.02$ , 则有 P&gt; $\alpha$ ,这时就不能拒绝$H0$。</p>
<h1 id="假设检验的步骤"><a href="#假设检验的步骤" class="headerlink" title="假设检验的步骤"></a>假设检验的步骤</h1><p>(一)、根据研究需要提出原假设 H0 和备择假设 H1</p>
<p>(二)、确定适当的检验统计量</p>
<p>(三)、确定显著性水平 α 和临界值及拒绝域</p>
<p>(四)、根据样本数据计算检验统计量的值(或 p值)</p>
<p>(五)、做出决策：(两种方法)</p>
<p>a. 将检验统计量的值和临界值比较，做出拒绝或接受原假设的决策。</p>
<p>b. 由步骤五的检验统计量计算 p 值，利用 p值确定时候拒绝原假设。</p>
<h1 id="样本均值和方差检验的场景"><a href="#样本均值和方差检验的场景" class="headerlink" title="样本均值和方差检验的场景"></a>样本均值和方差检验的场景</h1><p><strong>均值检验</strong>：适用于均值是否存在差别的问题，<u>反应的是集中趋势</u>。</p>
<p>单样本均值检验：测试某批产品是否正常，或者某个部件是否正常，以及评价风险是否在可控范围内等。视总体方差已知和未知分为z检验和t检验。api: stats.ttest_1samp</p>
<p>双样本均值检验：测试两个总体的均值是否有差别。<code>api: stats.ttest_ind</code>和<code>ttest_ind_from_stats</code></p>
<p>两条数据相减得到一列数据，再用单样本均值检验看其均值是否为0</p>
<p><strong>方差检验</strong>：适用方差是否存在差别的问题，<u>反应的离中趋势</u>。</p>
<p>这里要说明因素及其水平。假如收入是目标变量，它受学历的影响。那么学历是一个因素，学历的等级是水平。试验的目的是查看不同学历水平下的收入是否存在显著差别，或者说收入是否受学历的影响。</p>
<p>单因素方差分析：连续变量是否受某分类变量不同水平的影响。</p>
<p>多因素方差分析：已经过渡为一般线性模型，连续变量是否受某些分类变量的影响，以及分量变量对连续变量的影响是否受到别的分类变量的影响[交互项]。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Statistics</category>
      </categories>
      <tags>
        <tag>p-value</tag>
      </tags>
  </entry>
  <entry>
    <title>『Graphics』QQ图(分位数图)&#39;</title>
    <url>/posts/36d720f0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>分位数图示法（Quantile Quantile Plot，简称 Q-Q 图）</p>
<a id="more"></a>

<h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h1><p>分位数图示法（Quantile Quantile Plot，简称 Q-Q 图）</p>
<p> 统计学里Q-Q图（Q代表分位数）是一个概率图，用图形的方式<strong>比较两个概率分布</strong>，把他们的两个分位数放在一起比较。首先选好分位数间隔。图上的点（x,y）反映出其中一个第二个分布（y坐标）的分位数和与之对应的第一分布（x坐标）的相同分位数。因此，这条线是一条以分位数间隔为参数的曲线。如果两个分布相似，则该Q-Q图趋近于落在y=x线上。如果两分布线性相关，则点在Q-Q图上趋近于落在一条直线上，但不一定在y=x线上。Q-Q图可以用来可在分布的位置-尺度范畴上可视化的评估参数。</p>
<p>从定义中可以看出Q-Q图主要用于<strong>检验数据分布的相似性</strong>，如果要利用Q-Q图来对数据进行正态分布的检验，则可以令x轴为正态分布的分位数，y轴为样本分位数，如果这两者构成的点分布在一条直线上，就证明样本数据与正态分布存在线性相关性，即服从正态分布。</p>
<p>(自己的理解：qq图就是理论值和实际值的关系图，x=理论值，y=实际值。)</p>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>检验一序列值是否服从正态分布，序列为：$X=(x_1, x_2, , x_i , x_N),(N&gt;0)$</p>
<p>1、将原序列按升序从新排列</p>
<p>$$x_1 \leq x_2 ,\leq ,\leq x_i,\leq , \leq x_N$$</p>
<p>2、计算QQ序列</p>
<p>样本均值：$\bar{x}=\frac{\sum_{i=1}^{N} x i}{N}$</p>
<p>样本标准差：$\sigma=\sqrt{\frac{\sum(x_i-\bar{x})^{2}}{N-1}}$</p>
<p>分位数 :$Q_{i}=\frac{x_i-\bar{x}}{\sigma}, \quad t_{i}=\frac{i-0.5}{N}$ ,  通过查正太分布表可以得到 $t_i$ 对应的分位数 $P_{i}^{\prime}$</p>
<p>计算如下表所示：</p>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212405.png" alt="image-20200922202518466" style="zoom: 50%;">

<p>3、画出 QQ 图 ，分布呈直线，就是正态分布，如果这条线是y=x，则是标准正态分布。</p>
<h1 id="gofplots-ProbPlot"><a href="#gofplots-ProbPlot" class="headerlink" title="gofplots.ProbPlot"></a>gofplots.ProbPlot</h1><p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">statsmodels</span><span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>data<span class="token punctuation">,</span> 
                                             dist<span class="token operator">=</span><span class="token operator">&lt;</span>scipy<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>_continuous_distns<span class="token punctuation">.</span>norm_gen object<span class="token operator">></span><span class="token punctuation">,</span> 
                                             fit<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> 
                                             distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>Q-Q and P-P Probability Plots</p>
<p>可以接受指定dist参数的参数，也可以自动将其拟合。</p>
<p>参数：</p>
<ul>
<li><code>data</code> : <a href="https://numpy.org/doc/stable/glossary.html#term-array-like">array_like</a>  A 1d data array</li>
<li><code>dist</code> : callable, Compare x against dist. A scipy.stats or statsmodels distribution. The default is scipy.stats.distributions.norm (a standard normal). Can be a SciPy frozen distribution.</li>
<li><code>fit</code> : bool,  If fit is false, loc, scale, and distargs are passed to the distribution. If fit is True then the parameters for dist are fit automatically using dist.fit. The quantiles are formed from the standardized data, after subtracting the fitted loc and dividing by the fitted scale. fit cannot be used if dist is a SciPy frozen distribution.</li>
<li><code>distargs</code> : tuple,  A tuple of arguments passed to dist to specify it fully so dist.ppf may be called. distargs must not contain loc or scale. These values must be passed using the loc or scale inputs. distargs cannot be used if dist is a SciPy frozen distribution.</li>
<li><code>a</code> : float ,  Offset for the plotting position of an expected order statistic, for example. The plotting positions are given by (i - a)/(nobs - 2*a + 1) for i in range(0,nobs+1)</li>
<li><code>loc</code> : float, Location parameter for dist. Cannot be used if dist is a SciPy frozen distribution.</li>
<li><code>scale</code> : Scale parameter for dist. Cannot be used if dist is a SciPy frozen distribution.</li>
</ul>
<h2 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h2><table>
<thead>
<tr>
<th><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.ppplot.html#statsmodels.graphics.gofplots.ProbPlot.ppplot"><code>ppplot</code></a>([xlabel, ylabel, line, other, ax])</th>
<th>Plot of the percentiles of x versus the percentiles of a distribution.</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.probplot.html#statsmodels.graphics.gofplots.ProbPlot.probplot"><code>probplot</code></a>([xlabel, ylabel, line, exceed, ax])</td>
<td>Plot of unscaled quantiles of x against the prob of a distribution.</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.qqplot.html#statsmodels.graphics.gofplots.ProbPlot.qqplot"><code>qqplot</code></a>([xlabel, ylabel, line, other, ax])</td>
<td>Plot of the quantiles of x versus the quantiles/ppf of a distribution.</td>
</tr>
</tbody></table>
<blockquote>
<p>The three plotting methods are summarized below:</p>
<ul>
<li><p>ppplotProbability-Probability plot</p>
<p>Compares the sample and theoretical probabilities (percentiles).</p>
</li>
<li><p>qqplotQuantile-Quantile plot</p>
<p>Compares the sample and theoretical quantiles</p>
</li>
<li><p>probplotProbability plot</p>
<p>Same as a Q-Q plot, however probabilities are shown in the scale of the theoretical distribution (x-axis) and the y-axis contains unscaled quantiles of the sample data.</p>
</li>
</ul>
</blockquote>
<h2 id="Properties"><a href="#Properties" class="headerlink" title="Properties"></a>Properties</h2><table>
<thead>
<tr>
<th><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.sample_percentiles.html#statsmodels.graphics.gofplots.ProbPlot.sample_percentiles"><code>sample_percentiles</code></a></th>
<th>Sample percentiles(样本百分位数)</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.sample_quantiles.html#statsmodels.graphics.gofplots.ProbPlot.sample_quantiles"><code>sample_quantiles</code></a></td>
<td>sample quantiles(样本分位数)</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.sorted_data.html#statsmodels.graphics.gofplots.ProbPlot.sorted_data"><code>sorted_data</code></a></td>
<td>sorted data</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.theoretical_percentiles.html#statsmodels.graphics.gofplots.ProbPlot.theoretical_percentiles"><code>theoretical_percentiles</code></a></td>
<td>Theoretical percentiles (理论百分位数)</td>
</tr>
<tr>
<td><a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.theoretical_quantiles.html#statsmodels.graphics.gofplots.ProbPlot.theoretical_quantiles"><code>theoretical_quantiles</code></a></td>
<td>Theoretical quantiles(理论分位数)</td>
</tr>
</tbody></table>
<h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>The first example shows a Q-Q plot for regression residuals</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt

data <span class="token operator">=</span> sm<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>longley<span class="token punctuation">.</span>load<span class="token punctuation">(</span>as_pandas<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
data<span class="token punctuation">.</span>exog <span class="token operator">=</span> sm<span class="token punctuation">.</span>add_constant<span class="token punctuation">(</span>data<span class="token punctuation">.</span>exog<span class="token punctuation">)</span>
model <span class="token operator">=</span> sm<span class="token punctuation">.</span>OLS<span class="token punctuation">(</span>data<span class="token punctuation">.</span>endog<span class="token punctuation">,</span> data<span class="token punctuation">.</span>exog<span class="token punctuation">)</span>
mod_fit <span class="token operator">=</span> model<span class="token punctuation">.</span>fit<span class="token punctuation">(</span><span class="token punctuation">)</span>
res <span class="token operator">=</span> mod_fit<span class="token punctuation">.</span>resid<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre><code># res

array([ 267.34002979,  -94.01394237,   46.28716779, -410.1146219 ,
        309.71459079, -249.3112153 , -164.04895636,  -13.18035684,
         14.30477263,  455.39409458,  -17.26892708,  -39.05504249,
       -155.54997356,  -85.67130801,  341.93151399, -206.75782516])</code></pre>
<pre class="line-numbers language-python"><code class="language-python">pplot<span class="token punctuation">.</span>theoretical_quantiles

<span class="token triple-quoted-string string">'''
array([-1.56472647, -1.18683143, -0.92889949, -0.72152228, -0.54139509,
       -0.37739194, -0.22300783, -0.07379127,  0.07379127,  0.22300783,
        0.37739194,  0.54139509,  0.72152228,  0.92889949,  1.18683143,
        1.56472647])
'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python">pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">)</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 1 - qqplot - residuals of OLS fit"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/img/20200923190101.png" alt="下载 (7)" style="zoom:80%;">

<p>qqplot of the residuals against quantiles of t-distribution with 4 degrees of freedom:</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">as</span> stats

pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">'''
pplot.theoretical_quantiles
array([-1.98853847, -1.39569844, -1.05006478, -0.79602407, -0.58782183,
       -0.40547071, -0.23806378, -0.07853211,  0.07853211,  0.23806378,
        0.40547071,  0.58782183,  0.79602407,  1.05006478,  1.39569844,
        1.98853847])
'''</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 2 - qqplot - residuals against quantiles of t-dist"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212417.png" alt="下载 (8)" style="zoom:80%;">

<p>qqplot against same as above, but with mean 3 and std 10:</p>
<pre class="line-numbers language-python"><code class="language-python">pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">'''
pplot.theoretical_quantiles
array([-16.88538475, -10.95698438,  -7.50064777,  -4.96024066,
        -2.87821833,  -1.05470709,   0.61936217,   2.21467888,
         3.78532112,   5.38063783,   7.05470709,   8.87821833,
        10.96024066,  13.50064777,  16.95698438,  22.88538475])
'''</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span><span class="token punctuation">)</span>
h <span class="token operator">=</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 3 - qqplot - resids vs quantiles of t-dist"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212423.png" alt="下载 (9)" style="zoom:80%;">

<p>Automatically determine parameters for t distribution including the loc and scale:</p>
<pre class="line-numbers language-python"><code class="language-python">pplot <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
fig <span class="token operator">=</span> pplot<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">)</span>
h <span class="token operator">=</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 4 - qqplot - resids vs. quantiles of fitted t-dist"</span><span class="token punctuation">)</span>

<span class="token triple-quoted-string string">'''
pplot.sample_quantiles
array([-1.79364223, -1.09036424, -0.90425585, -0.71746747, -0.68029695,
       -0.41116747, -0.37468074, -0.17080326, -0.0755211 , -0.05763963,
        0.06256732,  0.20244318,  1.16922377,  1.35455004,  1.49545161,
        1.99168324])

pplot.theoretical_quantiles
array([-1.56472676, -1.18683159, -0.92889958, -0.72152234, -0.54139512,
       -0.37739197, -0.22300784, -0.07379128,  0.07379128,  0.22300784,
        0.37739197,  0.54139512,  0.72152234,  0.92889958,  1.18683159,
        1.56472676])
'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212429.png" alt="下载 (10)" style="zoom:80%;">

<p>A second ProbPlot object can be used to compare two separate sample sets by using the other kwarg in the qqplot and ppplot methods.</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.25</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.75</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.75</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.25</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>

pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token triple-quoted-string string">'''
用的都是样本的分位数
pp_x.sample_quantiles.min()
-2.254490936888067
pp_y.sample_quantiles.min()
-1.89620626452838
'''</span>

fig <span class="token operator">=</span> pp_x<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">'45'</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 5 - qqplot - compare two sample sets"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>In qqplot, sample size of other can be equal or larger than the first. In case of larger, size of other samples will be reduced to match the size of the first by interpolation</p>
<pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.25</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.75</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.75</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.25</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">57</span><span class="token punctuation">)</span>
pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
fig <span class="token operator">=</span> pp_x<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_y<span class="token punctuation">)</span>
title <span class="token operator">=</span> <span class="token string">"Ex. 6 - qqplot - compare different sample sizes"</span>
h <span class="token operator">=</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>title<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212444.png" alt="下载 (12)" style="zoom:80%;">



<p>在ppplot中，其他样本和第一个样本的大小可以不同。 其他将用于估计经验累积分布函数（ECDF）。ECDF(x) will be plotted against p(x)=0.5/n, 1.5/n, …, (n-0.5)/n where x are sorted samples from the first.</p>
<pre class="line-numbers language-python"><code class="language-python">x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.25</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.75</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.75</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.25</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">57</span><span class="token punctuation">)</span>
pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
pp_y<span class="token punctuation">.</span>ppplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_x<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 7A- ppplot - compare two sample sets, other=pp_x"</span><span class="token punctuation">)</span>
pp_x<span class="token punctuation">.</span>ppplot<span class="token punctuation">(</span>line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">,</span> other<span class="token operator">=</span>pp_y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">"Ex. 7B- ppplot - compare two sample sets, other=pp_y"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212452.png" alt="下载 (13)" style="zoom:80%;">

<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212457.png" alt="下载 (14)" style="zoom:80%;">





<h1 id="gofplots-qqline"><a href="#gofplots-qqline" class="headerlink" title="gofplots.qqline"></a>gofplots.qqline</h1><p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python">statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>qqline<span class="token punctuation">(</span>ax<span class="token punctuation">,</span> line<span class="token punctuation">,</span> 
                                     x<span class="token operator">=</span>None<span class="token punctuation">,</span> y<span class="token operator">=</span>None<span class="token punctuation">,</span> 
                                     dist<span class="token operator">=</span>None<span class="token punctuation">,</span> fmt<span class="token operator">=</span><span class="token string">'r-'</span><span class="token punctuation">,</span> <span class="token operator">**</span>lineoptions<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>为qqplot绘制参考线。</p>
<p>参数： </p>
<ul>
<li><p><code>ax</code> : matplotlib轴实例, The axes on which to plot the line</p>
</li>
<li><p><code>line</code> : <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a> {“45”,”r”,”s”,”q”} , 与数据进行比较的参考线的选项。</p>
<ul>
<li>“45” - 45-degree line</li>
<li>“s”- standardized line, the expected order statistics are scaled by the standard deviation of the given sample and have the mean added to them</li>
<li>“r” - A regression line is fit</li>
<li>“q” - A line is fit through the quartiles.</li>
<li>None - By default no reference line is added to the plot.</li>
</ul>
</li>
<li><p><code>X </code> : <a href="https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray"><code>ndarray</code></a> </p>
<p>X data for plot. Not needed if line is “45”.</p>
</li>
<li><p><code>y</code><a href="https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html#numpy.ndarray"><code>ndarray</code></a> </p>
<p>Y data for plot. Not needed if line is “45”.</p>
</li>
<li><p><code>dist</code> : <strong>scipy.stats.distribution</strong></p>
<p>A scipy.stats distribution, needed if line is “q”.</p>
</li>
<li><p><code>fmt</code> : <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a>, <code>optional</code> </p>
<p>Line format string passed to plot.</p>
</li>
</ul>
<ul>
<li><p><strong><em>\</em>lineoptions</strong></p>
<p>Additional arguments to be passed to the plot command.</p>
</li>
</ul>
<blockquote>
<p>There is no return value. The line is plotted on the given ax.</p>
</blockquote>
<h2 id="Examples-1"><a href="#Examples-1" class="headerlink" title="Examples"></a>Examples</h2><p>导入食品支出数据集。 在x轴上绘制年度食品支出，在y轴上绘制家庭收入。 使用qqline将回归线添加到绘图中。</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqline

foodexp <span class="token operator">=</span> sm<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>engel<span class="token punctuation">.</span>load<span class="token punctuation">(</span>as_pandas<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
x <span class="token operator">=</span> foodexp<span class="token punctuation">.</span>exog
y <span class="token operator">=</span> foodexp<span class="token punctuation">.</span>endog

<span class="token comment" spellcheck="true">#x.shape  #(235, 1)</span>
<span class="token comment" spellcheck="true"># y.shape #(235,)</span>

ax <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_xlabel<span class="token punctuation">(</span>foodexp<span class="token punctuation">.</span>exog_name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
ax<span class="token punctuation">.</span>set_ylabel<span class="token punctuation">(</span>foodexp<span class="token punctuation">.</span>endog_name<span class="token punctuation">)</span>
qqline<span class="token punctuation">(</span>ax<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212534.png" alt="下载" style="zoom:80%;">

<h1 id="gofplots-qqplot"><a href="#gofplots-qqplot" class="headerlink" title="gofplots.qqplot"></a>gofplots.qqplot</h1><p>与 <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.probplot.html#scipy.stats.probplot"><code>scipy.stats.probplot</code></a> 类似。</p>
<p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python">statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>data<span class="token punctuation">,</span> 
                                     dist<span class="token operator">=</span><span class="token operator">&lt;</span>scipy<span class="token punctuation">.</span>stats<span class="token punctuation">.</span>_continuous_distns<span class="token punctuation">.</span>norm_gen object<span class="token operator">></span><span class="token punctuation">,</span> 
                                     distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 
                                     a<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> 
                                     fit<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> line<span class="token operator">=</span>None<span class="token punctuation">,</span> 
                                     ax<span class="token operator">=</span>None<span class="token punctuation">,</span> <span class="token operator">**</span>plotkwargs<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Q-Q plot of the quantiles of x versus the quantiles/ppf of a distribution.</p>
<p>可以接受指定dist参数，也可以自动将其拟合。</p>
<p>参数：</p>
<ul>
<li><p><code>data</code> : A 1d data array.</p>
</li>
<li><p><code>dist</code> : <a href="https://docs.python.org/3/library/functions.html#callable"><code>callable</code></a> , Comparison distribution. The default is scipy.stats.distributions.norm (a standard normal).</p>
</li>
<li><p><code>distargs</code> :  元组，传递给 <code>dist</code> 分布的参数，让它能够调用 <code>ppf</code> 函数。</p>
</li>
<li><p><code>a</code> : float , Offset for the plotting position of an expected order statistic, for example. The plotting positions are given by (i - a)/(nobs - 2*a + 1) for i in range(0,nobs+1)</p>
</li>
<li><p><code>loc</code> : float , Location parameter for dist</p>
</li>
<li><p><code>scale</code> : float , Scale parameter for dist</p>
</li>
<li><p><code>fit</code> : bool, 如果fit为false，则将loc，scale和distargs传递到分布。 如果fit为True，则使用dist.fit自动拟合dist的参数。The quantiles are formed from the standardized data, after subtracting the fitted loc and dividing by the fitted scale.</p>
</li>
<li><p><code>line</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, “45”, “s”, “r”, “q”},  </p>
<p>Options for the reference line to which the data is compared:</p>
<ul>
<li>“45” - 45-degree line</li>
<li>“s” - standardized line, the expected order statistics are scaled by the standard deviation of the given sample and have the mean added to them</li>
<li>“r” - A regression line is fit</li>
<li>“q” - A line is fit through the quartiles.</li>
<li>None - by default no reference line is added to the plot.</li>
</ul>
</li>
<li><p><code>ax</code> : <a href="https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes"><code>AxesSubplot</code></a>, <code>optional</code> </p>
<p>If given, this subplot is used to plot in instead of a new figure being created.</p>
</li>
<li><p><strong><em>\</em>plotkwargs</strong></p>
<p>Additional matplotlib arguments to be passed to the plot command.</p>
</li>
</ul>
<p>返回值：</p>
<p><a href="https://matplotlib.org/api/_as_gen/matplotlib.figure.Figure.html#matplotlib.figure.Figure"><code>Figure</code></a></p>
<p>If ax is None, the created figure. Otherwise the figure to which ax is connected.</p>
<h2 id="Examples-2"><a href="#Examples-2" class="headerlink" title="Examples"></a>Examples</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt 
<span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqplot

data <span class="token operator">=</span> sm<span class="token punctuation">.</span>datasets<span class="token punctuation">.</span>longley<span class="token punctuation">.</span>load<span class="token punctuation">(</span>as_pandas<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

exog <span class="token operator">=</span> sm<span class="token punctuation">.</span>add_constant<span class="token punctuation">(</span>data<span class="token punctuation">.</span>exog<span class="token punctuation">)</span>
mod_fit <span class="token operator">=</span> sm<span class="token punctuation">.</span>OLS<span class="token punctuation">(</span>data<span class="token punctuation">.</span>endog<span class="token punctuation">,</span>exog<span class="token punctuation">)</span><span class="token punctuation">.</span>fit<span class="token punctuation">(</span><span class="token punctuation">)</span>
res <span class="token operator">=</span> mod_fit<span class="token punctuation">.</span>resid <span class="token comment" spellcheck="true"># residuals</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true">#res</span>
array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">267.34002979</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">94.01394237</span><span class="token punctuation">,</span>   <span class="token number">46.28716779</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">410.1146219</span> <span class="token punctuation">,</span>
        <span class="token number">309.71459079</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">249.3112153</span> <span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">164.04895636</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">13.18035684</span><span class="token punctuation">,</span>
         <span class="token number">14.30477263</span><span class="token punctuation">,</span>  <span class="token number">455.39409458</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">17.26892708</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">39.05504249</span><span class="token punctuation">,</span>
       <span class="token operator">-</span><span class="token number">155.54997356</span><span class="token punctuation">,</span>  <span class="token operator">-</span><span class="token number">85.67130801</span><span class="token punctuation">,</span>  <span class="token number">341.93151399</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">206.75782516</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<pre class="line-numbers language-python"><code class="language-python">fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212544.png" alt="下载 (1)" style="zoom:80%;">

<p>qqplot of the residuals against quantiles of t-distribution with 4 degrees of freedom:</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> scipy<span class="token punctuation">.</span>stats <span class="token keyword">as</span> stats
fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923213122.png" alt="下载 (2)" style="zoom:80%;">

<p>qqplot against same as above, but with mean 3 and std 10:</p>
<pre class="line-numbers language-python"><code class="language-python">fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> distargs<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> loc<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923213116.png" alt="下载 (3)" style="zoom:80%;">



<p>Automatically determine parameters for t distribution including the loc and scale:</p>
<pre class="line-numbers language-python"><code class="language-python">fig <span class="token operator">=</span> sm<span class="token punctuation">.</span>qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> line<span class="token operator">=</span><span class="token string">"45"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212650.png" alt="下载 (4)" style="zoom:80%;">

<p>得到残差之后，也可以直接用 <code>qqplot</code> 进行绘制：</p>
<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqplot

fig <span class="token operator">=</span> qqplot<span class="token punctuation">(</span>res<span class="token punctuation">,</span> stats<span class="token punctuation">.</span>t<span class="token punctuation">,</span> fit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>line<span class="token operator">=</span><span class="token string">'45'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212641.png" alt="下载 (5)" style="zoom:80%;">







<h1 id="gofplots-qqplot-2samples"><a href="#gofplots-qqplot-2samples" class="headerlink" title="gofplots.qqplot_2samples"></a>gofplots.qqplot_2samples</h1><p>Q-Q Plot of two samples’ quantiles</p>
<p>Can take either two ProbPlot instances or two array-like objects, In the case of the latter, both inputs will be converted to ProbPlot instances using only the default values - so use ProbPlot instances if finer-grained control of the quantile</p>
<p>函数：</p>
<pre class="line-numbers language-python"><code class="language-python">statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots<span class="token punctuation">.</span>qqplot_2samples<span class="token punctuation">(</span>data1<span class="token punctuation">,</span> data2<span class="token punctuation">,</span> 
                                              xlabel<span class="token operator">=</span>None<span class="token punctuation">,</span> ylabel<span class="token operator">=</span>None<span class="token punctuation">,</span> 
                                              line<span class="token operator">=</span>None<span class="token punctuation">,</span> ax<span class="token operator">=</span>None<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>参数：</p>
<ul>
<li><p><code>data1</code> : {<a href="https://numpy.org/doc/stable/glossary.html#term-array-like">array_like</a>, <a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.html#statsmodels.graphics.gofplots.ProbPlot"><code>ProbPlot</code></a>}   Data to plot along x axis.</p>
</li>
<li><p><code>data2</code> : {<a href="https://numpy.org/doc/stable/glossary.html#term-array-like">array_like</a>, <a href="https://www.statsmodels.org/stable/generated/statsmodels.graphics.gofplots.ProbPlot.html#statsmodels.graphics.gofplots.ProbPlot"><code>ProbPlot</code></a>}  Data to plot along y axis. Does not need to have the same number of observations as data 1.</p>
</li>
<li><p><code>xlabel</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a>} User-provided labels for the x-axis. If None (default), other values are used.</p>
</li>
<li><p><code>y</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str"><code>str</code></a>} User-provided labels for the y-axis. If None (default), other values are used.</p>
</li>
<li><p><code>line</code> : {<a href="https://docs.python.org/3/library/constants.html#None"><code>None</code></a>, “45”, “s”, “r”, q”}</p>
<p>Options for the reference line to which the data is compared:</p>
<ul>
<li>“45” - 45-degree line</li>
<li>“s” - standardized line, the expected order statistics are scaled by the standard deviation of the given sample and have the mean added to them</li>
<li>“r” - A regression line is fit</li>
<li>“q” - A line is fit through the quartiles.</li>
<li>None - by default no reference line is added to the plot.</li>
</ul>
</li>
<li><p><code>ax</code> : <a href="https://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes"><code>AxesSubplot</code></a>, <code>optional</code></p>
<p>If given, this subplot is used to plot in instead of a new figure being created.</p>
</li>
</ul>
<p>返回值：</p>
<ul>
<li><code>figure</code> : If ax is None, the created figure. Otherwise the figure to which ax is connected.</li>
</ul>
<blockquote>
<ol>
<li>Depends on matplotlib.</li>
<li>If data1 and data2 are not ProbPlot instances, instances will be created using the default parameters. Therefore, it is recommended to use ProbPlot instance if fine-grained control is needed in the computation of the quantiles.</li>
</ol>
</blockquote>
<h2 id="Examples-3"><a href="#Examples-3" class="headerlink" title="Examples"></a>Examples</h2><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> statsmodels<span class="token punctuation">.</span>api <span class="token keyword">as</span> sm
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt
<span class="token keyword">from</span> statsmodels<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>gofplots <span class="token keyword">import</span> qqplot_2samples

x <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.5</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">2.5</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>
y <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>normal<span class="token punctuation">(</span>loc<span class="token operator">=</span><span class="token number">8.0</span><span class="token punctuation">,</span> scale<span class="token operator">=</span><span class="token number">3.0</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">37</span><span class="token punctuation">)</span>

pp_x <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
pp_y <span class="token operator">=</span> sm<span class="token punctuation">.</span>ProbPlot<span class="token punctuation">(</span>y<span class="token punctuation">)</span>
qqplot_2samples<span class="token punctuation">(</span>pp_x<span class="token punctuation">,</span> pp_y<span class="token punctuation">)</span>
plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG95/image/master/20200923213106.png" alt="下载 (6)" style="zoom:80%;">



<img src="https://raw.githubusercontent.com/HG95/image/master/20200923212928.png" alt="下载 (13)" style="zoom:80%;"><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Graphics</category>
      </categories>
      <tags>
        <tag>QQ图</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel:LOOKUP函数用法！</title>
    <url>/posts/5d5b464a/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>使用VLOOKUP函数的时候，经常都会遇到一些麻烦事，那就是VLOOKUP查找只找到满足条件的第一个值就不找了，并且还只能从左往右查找，太多限制了。LOOKUP函数，可以完美的解决这两个问题，太好用了！</p>
<p>LOOKUP函数非常强大，有引用函数之王的称号。要想完全掌握它，必须了解它的5种常见用法和它的二分法查找原理。</p>
<a id="more"></a>

<h1 id="常规引用"><a href="#常规引用" class="headerlink" title="常规引用"></a>常规引用</h1><p>格式：LOOKUP（查找值，查找区域）</p>
<p>例1：根据姓名查找语文成绩，公式为<code>=LOOKUP(H2,C2:D19)</code></p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141614.png" alt="20180706113315661001" style="zoom:80%;">

<p>例2：根据姓名查找英语成绩，公式为：<code>=LOOKUP(H2,C2:F19)</code></p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141621.png" alt="20180706113316770002" style="zoom:80%;">

<p>通过这两个例子我们可以发现，LOOKUP在进行查找时公式的结构非常简单，<strong>查找值和要找的结果分别位于查找区域的首列和末列。</strong></p>
<p>但是仅仅了解这个用法是远远不够的，如果我们再试一个数据的话，有可能就会发现问题：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141626.png" alt="20180706113316228003" style="zoom:80%;">

<p>当查找姓名变成赵永福的时候，结果就不对了，这是因为<strong>LOOKUP**</strong>函数使用的是二分法查找**，也就是模糊匹配。</p>
<p>因此，在使用LOOKUP进行常规查找的时候，有一个非常重要的步骤，就是按照查找内容（姓名所在的c列）<strong>升序排序</strong>。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142058.png" alt="20180706113317304004" style="zoom:80%;">

<p>当我们排序以后，公式的结果立刻变成了正确的，是不是很神奇！</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142053.png" alt="20180706113317822005" style="zoom:80%;">

<p>这又引出了一个新的问题，如果数据不能排序的话，LOOKUP函数还能用吗？</p>
<p>肯定能用啊，下面来看看LOOKUP函数的第二种用法。</p>
<h1 id="精确查找的套路"><a href="#精确查找的套路" class="headerlink" title="精确查找的套路"></a><strong>精确查找的套路</strong></h1><p>格式：=LOOKUP（1,0/(查找范围=查找值),结果范围）</p>
<p>在I2单元格输入公式：<code>=LOOKUP(1,0/(C2:C19=H2)，D2:D19)</code>,</p>
<p>回车，可看到正确结果。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142046.png" alt="20180706113318909006" style="zoom:80%;">

<p>关于这个套路的1和0/到底是什么意思，也是提问率最高的问题之一，在未讲解二分法原理之前，简单来说一下公式的意思。1就是要查找的值，但是条件变了，不是直接查找姓名，而是根据姓名得到的一组逻辑值：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142040.png" alt="20180706113319722007" style="zoom:80%;">

<p>注意这里只有一个TRUE，也就是我们要找的姓名。</p>
<p>接下来用0除以这些逻辑值，在进行计算的时候逻辑值TRUE代表1，FALSE代表0，当分母为0也就是FALSE的时候，计算结果是错误值：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142034.jpg" alt="20180706113319379008" style="zoom:80%;">

<p>因此，LOOKUP的工作就变成了在一组数据中找1。由于这组数据只有一个0，其他都是错误值，<strong>二分法使得</strong> <strong>LOOKUP</strong> <strong>只能找到不大于查找值的最后一个数字</strong>，因此只能找到0，最后根据0的行位置（第2行）得到第三参数对应位置的数据，即D2就是我们需要的结果。</p>
<p>当对数组和逻辑值这两大要点掌握比较熟练的时候，这些内容就很好理解了。目前如果不能完全理解，记住这个套路就行：**<code>=LOOKUP（1,0/(查找范围=查找值),结果范围）</code>**。同时这个套路还能延伸出多条件精确查找用法：</p>
<p><code>=LOOKUP（1,0/((查找范围1=查找值1)* (查找范围2=查找值2)* (查找范围3=查找值3)),结果范围）</code></p>
<p>就是在每个查找范围内找到要找的值，得到的逻辑值相乘后同时符合多个条件的位置就是1，原理与单条件的一样。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142025.png" alt="20180706113319291009" style="zoom:80%;">

<h1 id="反向查找的套路"><a href="#反向查找的套路" class="headerlink" title="反向查找的套路"></a>反向查找的套路</h1><p>与我们熟知的VLOOKUP不同，使用LOOKUP函数进行反向查找时非常简单，</p>
<p>公式结构为：**<code>=LOOKUP（查找值，查找列，结果列）</code>**，</p>
<p>下面这个例子是按照姓名排序后再反向查找的效果：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142020.png" alt="20180706113319479010" style="zoom:80%;">



<p>如果数据不能排序的话，使用精确查找的套路：<code>=LOOKUP(1,0/(C2:C19=H8),B2:B19)</code></p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142014.png" alt="20180706113320897011" style="zoom:80%;">

<h1 id="按区间查找的套路"><a href="#按区间查找的套路" class="headerlink" title="按区间查找的套路"></a>按区间查找的套路</h1><p>据学生的总分给出相应的评语。50分以下的为“很差”，50-100分的为“差”，100-150分的为“一般”，150-200分的为“较好”，200-250分的为“优秀”，250分及以上的为“能手”。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142009.png" alt="20180706113320113012" style="zoom:80%;">

<p>这里用的公式为：</p>
<p><code>=LOOKUP(G2,{0,50,100,150,200,250;"很差","差","一般","较好","优秀","能手"})</code></p>
<p>按照评语的要求分成了六个等级，如果用if函数去做就很啰嗦，使用LOOKUP处理这类问题非常方便，公式结构也很简单：</p>
<p><code>=LOOKUP（分数值，{下限1, 下限2……;评语1,评语2……}）</code></p>
<p>在写这个公式的时候注意两点：</p>
<ol>
<li>LOOKUP的第二参数使用了常量<u>数组</u>，这里的大括号是手动输入的，括号内用一个分号分开，左边是每个等级的下限，例如50分以下这个表述里下限就是0，50-100的下限就是50，以此类推，每个数字之间用逗号分开；分号右边是对应的评语，评语应当使用引号，同时用逗号分开（公式里的所有符号都是英文状态下的）；</li>
<li>数字区间应当遵循升序的排列顺序，否则结果就会错误。</li>
</ol>
<h1 id="关于数据排序的重要性"><a href="#关于数据排序的重要性" class="headerlink" title="关于数据排序的重要性"></a>关于数据排序的重要性</h1><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914142003.png" alt="20180706113320685013" style="zoom:67%;">

<p>当我们按照学号查找姓名的时候，发现会出现错误，学号也是按升序排列的啊，怎么会错？</p>
<p>这是一种最常见的错误，这里的学号升序排列只是我们感觉如此而已，实际上升序的效果是这样的：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141958.png" alt="20180706113321188014" style="zoom:67%;">

<p>在使用LOOKUP的时候，如果不使用精确查找的套路，切记一定要排序才能保证公式结果的正确性。</p>
<h1 id="二分法原理"><a href="#二分法原理" class="headerlink" title="二分法原理"></a>二分法原理</h1><p>按序号查找成绩，序号是升序排列的，公式<code>=LOOKUP(J2,A2:D19)</code>的结果正确。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141952.png" alt="20180707144605964001" style="zoom:67%;">

<h2 id="二分法查找原理"><a href="#二分法查找原理" class="headerlink" title="二分法查找原理"></a>二分法查找原理</h2><p>二分法查找是把查找范围中的数据按照个数一分为二找到位于中间位置的一个数据，中间值，然后用我们的查找值和中间值做比较。当中间值等于查找值时，直接去获取结果；当中间值小于查找值时，则向下继续进行二分法查找比较（也就是在不含中间值在内的下方的那一半数据中继续进行二分法查找）；当中间值大于查找值时，则向上继续进行二分法查找比较（也就是在不含中间值在内的上方的那一半数据中继续进行二分法查找）。如果如此二分到最后一个数据都未找到等于查找值的数据：最后一个数据小于查找值的，那就以最后一个数据的位置去获取结果值；最后一个数据大于查找值的，那就再向上找一个位置最靠近最后一个数据的小于或等于查找值的数据，再以这个数据的位置去获取结果。</p>
<p>结合上面的例子，具体看看如何通过序号5，找到语文成绩79的。</p>
<p>第一次比较：查找范围<code>A2~A19一共18个数据，中间位置是18÷2=9，即中间值是A10单元格的9。显然查找值5小于9，所以继续向上在A2~A9</code>中查找；</p>
<p>提示：*如果查找范围数据个数是单数，中间位置就是（个数+1）÷2，例如11行的话，中间位置就是（11+1）÷2=6；如果数据个数是偶数，中间位置就是（个数）÷2。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141945.png" alt="20180707144605830002 (1)" style="zoom:80%;">

<p>第二次比较：只有8个数据，中间位置是8÷2=4，中间值是A5单元格的4，查找值5大于4，所以继续向下在A6~A9中找。注意此时下面只有四个数，第一次查找时直接将9下面的数据都排除了。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141941.png" alt="20180707144605971003" style="zoom:67%;">

<p>第三次比较：4个数据，中间值是A7的6，查找值5小于6，所以向上找。此时只剩下一个数据A6单元格的5，与查找值一致，因此就得到5所对应的D列数据79。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141934.png" alt="20180707144605130004" style="zoom:67%;">



<h1 id="LOOKUP实现数据的四舍五入"><a href="#LOOKUP实现数据的四舍五入" class="headerlink" title="LOOKUP实现数据的四舍五入"></a>LOOKUP实现数据的四舍五入</h1><p>用LOOKUP解决了一个四舍五入的问题</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141929.png" alt="20180707144607014010" style="zoom:67%;">

<p>原来这个公式是用LOOKUP函数将一个数字百位以下全部舍去，实现了百分位取整。</p>
<p>在了解过二分法原理以后，是时候让LOOKUP还大家一个解释了。首先说明<code>ROW（A:A）*100</code>这部分。它其实就是得到了一组数字。为了让大家看明白，把 A:A 范围给小一点，用<code>=ROW(A1:A31)*100</code>作说明：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141924.jpg" alt="20180707144607494011" style="zoom:80%;">

<p>虽然单元格中只能看到一个100，实际上是31个数字，我们可以用f9功能键来看看具体内容：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141920.jpg" alt="20180707144607259012" style="zoom: 80%;">

<p>ROW函数用于获取单元格的行号，<code>ROW(A1:A31)*100</code>就是用A1到A31单元格的行号分别乘以100，得到一组百位取整的数据{100;200;300;……3000;3100}。</p>
<p>然后LOOKUP上场了。它要在上述得到的已经百位取整的数组中查找A1。因为数组是按升序排列的，所以查找A1的实质就是在数组中找**<u>小于等于A1的最大值</u>**。</p>
<p>以2517.32为例，唯有2500是小于它的最大值，因此结果就是2500。有兴趣的朋友可以自己用二分法原理去试试，看看对不对。</p>
<p>其他数字的查找方式都是如此。这个公式之所以巧妙，就是把一个四舍五入的问题变成了查找引用的问题，真是妙！</p>
<h1 id="LOOKUP进行数据提取"><a href="#LOOKUP进行数据提取" class="headerlink" title="LOOKUP进行数据提取"></a>LOOKUP进行数据提取</h1><p>原题如图所示提取学号：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141855.png" alt="20180707144608427014" style="zoom:67%;">

<p>用上图的第一个数据来解释。在N1单元格中输入“10张勇a”，然后在O1单元格中输入公式<code>=-LOOKUP(1,-LEFT(N1,ROW(1:9)))</code>提取学号。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141850.jpg" alt="20180707144608499015" style="zoom:67%;">

<p>LOOKUP不是引用函数吗，怎么又可以提取数字了？</p>
<p>LEFT函数的第二个参数使用了一个数组，ROW(1:9)相当于{1;2;3;4;5;6;7;8;9}。LEFT是把第一参数指定的数据从左边开始提取，提取的长度由第二参数来确定。 LEFT按照数组{1;2;3;4;5;6;7;8;9}提取，得到9个结果：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141845.jpg" alt="20180707144608966016" style="zoom:67%;">

<p>也就是从左边开始提取1位，2位……一直到9位。因为LEFT提取的结果都是文本类型，在LEFT前面加上负号，就可以把其中的文本型数字转为数值，文字变成错误值：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141840.jpg" alt="20180707144608831017" style="zoom:67%;">

<p>错误值被LOOKUP忽略，现在就变成了在{-1; -10}中找1。1比这组数据都大，<u><strong>根据二分法查找原理，二分后只能向下找，直到最后一位小于1的数据</strong></u>。因此，我们可以简单理解成：<u>当查找值大于查找范围中所有数据（不管是否是升序排列）时，LOOKUP的实质就是在找最后一个数据。</u></p>
<p>其实将公式中的1变成0也是可以的，因为0也比所有的负数大：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141835.jpg" alt="20180707144608301018" style="zoom:67%;">

<p>当前最后一个数是-10，所以我们在LOOKUP前面再加个负号，就变成10了，也就是我们需要提取的数字。</p>
<h1 id="LOOKUP-与合并单元格"><a href="#LOOKUP-与合并单元格" class="headerlink" title="LOOKUP()与合并单元格"></a>LOOKUP()与合并单元格</h1><p>原始格式</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141828.png" alt="image-20200914140801692" style="zoom:67%;">

<p>在 C 列分别显示对应的第一列的名称：</p>
<p>公式：<code>=LOOKUP("座",$A$1:A1)</code></p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141823.png" alt="image-20200914141031170" style="zoom:67%;">

<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul>
<li><a href="http://www.itblw.com/graphic/139fcf04c051737b903bf13d4fbd1e8f.html" target="">LOOKUP函数用法全解</a></li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Excel</category>
      </categories>
  </entry>
  <entry>
    <title>Excel:VLOOKUP函数常用方法集合！</title>
    <url>/posts/9061c292/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>VLOOKUP函数是工作中最常用的一种查找函数，掌握好VLOOKUP函数能够极大提高工作的效率。</p>
<a id="more"></a>

<h1 id="函数解析"><a href="#函数解析" class="headerlink" title="函数解析"></a>函数解析</h1><p>VLOOKUP函数用于首列查找并返回指定列的值，字母“V”表示垂直方向。</p>
<p>VLOOKUP函数的语法如下：</p>
<pre class="line-numbers language-tex"><code class="language-tex">VLOOKUP（lookup_value，table_array，col_index_num，[range_lookup]）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>其中，第1参数<code>lookup_value</code>为要搜索的值，第2参数<code>table_array</code>为首列可能包含查找值的单元格区域或数组，第3参数<code>col_index_num</code>为需要从table_array中返回的匹配值的列号，第4参数<code>range_lookup</code>用于指定精确匹配或近似匹配模式。</p>
<p>当 <code>range_lookup</code>为TRUE、被省略或使用非零数值时，表示近似匹配模式，要求table_array第一列中的值必须按升序排列，并返回小于等于lookup_value的最大值对应列的数据。当参数为FALSE时（常用数字0或保留参数前的逗号代替），表示只查找精确匹配值，返回table_array的第一列中第一个找到的值，精确匹配模式不必对table_array第一列中的值进行排序。</p>
<p>如果使用精确匹配模式且第1参数为文本，则可以在第1参数中使用通配符问号（？）和星号（*）。VLOOKUP函数不区分字母大小写。</p>
<h1 id="基本查找"><a href="#基本查找" class="headerlink" title="基本查找"></a>基本查找</h1><p>A3:B7单元格区域为字母等级查询表，表示60分以下为E级、60<del>69分为D级、70</del>79分为C级、80~89分为B级、90分以上为A级。D:G列为初二年级1班语文测验成绩表，如何根据语文成绩返回其字母等级？</p>
<p>在H3:H13单元格区域中输入<code>=VLOOKUP（G3，$A$3:$B$7,2）</code></p>
<p>返回第二列</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141158.png" alt="image-20200914082729751" style="zoom: 67%;">

<h1 id="返回多列-一"><a href="#返回多列-一" class="headerlink" title="返回多列(一)"></a>返回多列(一)</h1><img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141204.png" alt="image-20200914083539515" style="zoom:67%;">

<p>按照上面的方式输入公式</p>
<pre class="line-numbers language-tex"><code class="language-tex">=VLOOKUP(G4,$A$2:$E$13,2,0)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这里将数据源区域进行绝对引用。</p>
<p>然后下拉，得到查询结果：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141209.png" alt="image-20200914084423147" style="zoom: 50%;">

<p>但是将其向右,向下拉的时候，此时会匹配错误！</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141214.png" alt="image-20200914091057439" style="zoom: 50%;">

<p>解决方案：</p>
<p>姓名，语文，数学，英语，四列是挨着的，可以用<code>COLUMN()</code> 函数 返回要查找的列号：</p>
<p>完整公式：</p>
<pre class="line-numbers language-tex"><code class="language-tex">=VLOOKUP($G4,$A$3:$E$13,COLUMN(B2),0)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141220.png" alt="image-20200914091436040" style="zoom: 50%;">

<p>解释：</p>
<p><code>COLUMN(B2)</code> 返回的是列号，此时返回的是2，当向右侧拖动的时候，依次是 C2,D2,E2, <code>COLUMN</code> 返回的值依次是3，4，5，分别对应我们数据源中的语文，数学，英语列。</p>
<p>还有一点是对索引值的列号进行了绝对引用，因为当我们向右拖动公式的时候，要索引的列是不变的，需要将其进行绝对引用。</p>
<h1 id="返回多列-二"><a href="#返回多列-二" class="headerlink" title="返回多列(二)"></a>返回多列(二)</h1><p>上面的数据中，要查找的列和数据源中的列，都是挨着并且顺序是相同的，但是如果顺序不相同，该如何匹配呢？</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141224.png" alt="image-20200914094019765" style="zoom:67%;">

<p>此时再用 <code>COLUMN()</code> 函数就不太行了，此时可以用 <code>MATCH()</code> 函数，函数返回匹配值的列号。</p>
<p>例如要查找的英语在源数据中是第几列。</p>
<pre class="line-numbers language-tex"><code class="language-tex">=MATCH(K4,2:2,0)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>结果返回为5：</p>
<p>查询我们想要的结果：</p>
<pre class="line-numbers language-tex"><code class="language-tex">=VLOOKUP($J5,$A:$H,MATCH(K4,2:2,0))<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141230.png" alt="image-20200914095704733" style="zoom:67%;">

<h1 id="关键字为多列-多条件-查询"><a href="#关键字为多列-多条件-查询" class="headerlink" title="关键字为多列(多条件)查询"></a>关键字为多列(多条件)查询</h1><p><code>VLOOKUP</code> 是以第一列为关键字进行查询的。当条件为多个时，该如何查询呢？</p>
<p>例如, 根据右侧的条件进行查询</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141236.png" alt="image-20200914102128243" style="zoom: 50%;">

<p><strong>方法一: 辅助列</strong></p>
<p>将要查超的关键字进行合并:</p>
<pre class="line-numbers language-tex"><code class="language-tex">=B2&C2&D2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141242.png" alt="image-20200914102552194" style="zoom: 67%;">

<p>在进行查询：</p>
<pre class="line-numbers language-tex"><code class="language-tex">=VLOOKUP(K3&L3&M3,A:H,7,0)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141247.png" alt="image-20200914103052904" style="zoom:67%;">

<p><strong>方法二:</strong> index+match</p>
<p>数组公式：</p>
<pre><code>=INDEX($G$2:$G$585,MATCH(K3&amp;L3&amp;M3,$B$2:$B$600&amp;$C$2:$C$600&amp;$D$2:$D$600,0))</code></pre>
<p>输入完公式后，<code>ctrl</code> + <code>shift</code> + <code>enter</code></p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141251.png" alt="image-20200914105857485" style="zoom:67%;">

<h1 id="表有合并单元格"><a href="#表有合并单元格" class="headerlink" title="表有合并单元格"></a>表有合并单元格</h1><p>查找函数VLOOKUP这个函数,大家喜闻乐见, 很多表中使用了合并单元格,这样就会导致正常的查找函数无法返回正确结果。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141256.png" alt="image-20200914111903406" style="zoom:67%;">

<p>使用一般的查找方式进行查找:</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141302.png" alt="image-20200914112134697" style="zoom: 67%;">

<p>解决：</p>
<p>使用 <code>LOOKUP()</code> 函数，</p>
<pre class="line-numbers language-tex"><code class="language-tex">=LOOKUP("座", $D$3:D3)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141308.png" alt="image-20200914112542483" style="zoom: 67%;">

<p>在要查找的地方进行公式输入：</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141314.png" alt="image-20200914112810041" style="zoom:67%;">



<h1 id="LOOKUP-COLUMN快速填充做工资条"><a href="#LOOKUP-COLUMN快速填充做工资条" class="headerlink" title="LOOKUP+COLUMN快速填充做工资条"></a>LOOKUP+COLUMN快速填充做工资条</h1><p>Vlookup与COLUMN函数的嵌套也可以应用在制作工资条上，并且员工数越多，使用该法越方便。下表是某公司部分员工的工资表，现在要将其制作成工资条，如何完成呢？</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141412.png" alt="20190114174727555008" style="zoom:80%;">

<p>（1）可以将表格列表标题复制在H1:M1区域。</p>
<p>（2）9名员工，每名工资条3行，共需27行。选中G1:G27，输入任何一个输入数字后按Ctrl+Enter键填充。这一列是为双击向下填充准备的，避免员工人数多向下拖动填充的不便。</p>
<p>（3）在H2单元格输入序号1，然后在I2单元格中输入公式：</p>
<p>=VLOOKUP($H2,$A$2:$F$10, COLUMN(B2),)</p>
<p>（4）右拉填充公式。</p>
<p>（5）选中H1：M3区域，双击右下角填充句柄（小方块）向下填充即可完成工资条的制作。</p>
<p>操作演示请看↓↓↓</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141421.gif" alt="20190114174728818009" style="zoom: 67%;">

<h1 id="补充知识"><a href="#补充知识" class="headerlink" title="补充知识"></a>补充知识</h1><h2 id="1、MATCH-函数"><a href="#1、MATCH-函数" class="headerlink" title="1、MATCH()函数"></a>1、MATCH()函数</h2><p>Match函数是Excel中使用较为广泛的一个函数。其主要作用是：在“范围”单元格中搜索特定的项，然后返回该项在此区域中的相对位置。</p>
<p>通俗的将：MATCH函数返回指定值在数组中的位置，如果在数组中没有找到该值则返回#N/A。</p>
<p>例如：如果A1：A3区域中包含值5,15和28，那么公式=MATCH(15,A1:A3,0)返回数字2，因为15是该区域中的第二项。</p>
<p>MATCH函数返回指定值在数组中的位置，通常和其它函数配合使用，如INDEX函数、VLOOKUP函数等。</p>
<p><strong>语法</strong>：</p>
<pre class="line-numbers language-tex"><code class="language-tex">MATCH(lookup_value, lookup_array, [match_type])。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<ul>
<li><p><strong><code>lookup_value</code></strong> 必需。要在 <strong><em>lookup_array\</em></strong> 中匹配的值。<br>*<strong>lookup_value*</strong> 参数可以为值（数字、文本或逻辑值）或对数字、文本或逻辑值的单元格引用。</p>
</li>
<li><p><strong><code>lookup_array</code></strong> 必需。要搜索的单元格区域。</p>
</li>
<li><p><strong><code>match_type</code></strong> 可选。数字 -1、0 或 1。<strong>match_type</strong> 参数指定 Excel 如何将<em>lookup_value</em> 与 <strong>lookup_array</strong> 中的值匹配。此参数的默认值为 1。</p>
<blockquote>
<p><strong>1 或省略</strong></p>
<p><strong>MATCH</strong> 查找小于或等于 <strong>lookup_value</strong> 的最大值。<strong>lookup_array</strong> 参数中的值必须以<strong>升序排序</strong>，例如：…-2, -1, 0, 1, 2, …, A-Z, FALSE, TRUE。</p>
<p><strong>0</strong></p>
<p><strong>MATCH</strong> 查找完全等于 <strong>lookup_value</strong> 的第一个值。<strong>lookup_array</strong> 参数中的值可按任何顺序排列。</p>
<p><strong>-1</strong></p>
<p><strong>MATCH</strong> 查找大于或等于 <strong>lookup_value</strong> *<em>的最小值。</em>lookup_array* **参数中的值必须按降序排列，例如：TRUE, FALSE, Z-A, …2, 1, 0, -1, -2, … 等等。</p>
</blockquote>
</li>
</ul>
<p><strong>注意事项：</strong></p>
<p>1、MATCH函数返回查找项的<strong>位置</strong>，而不是值本身。如果需要获取值本身，则需要和其它函数一起使用，如INDEX、VLOOKUP。</p>
<p>2、匹配文本值时，<strong>MATCH</strong> 函数不区分大小写字母。</p>
<p>3、如果 <strong>match_type</strong>为 0 且 <strong>lookup_value</strong> 为文本字符串，您可在<strong>lookup_value</strong> 参数中使用通配符 - 问号 (<strong>?</strong>) 和星号 (*<strong>**) 。问号匹配任意单个字符；星号匹配任意一串字符。如果要查找实际的问号或星号，请在字符前键入波形符 (</strong>~**)。</p>
<p>4、如果 <strong>MATCH</strong> 函数查找匹配项不成功，它会返回错误值 #N/A。</p>
<h2 id="2、INDEX-函数"><a href="#2、INDEX-函数" class="headerlink" title="2、INDEX() 函数"></a>2、INDEX() 函数</h2><p><strong>作用：</strong>返回表格或区域中的值或值的应用。</p>
<p><strong>语法</strong>：</p>
<pre class="line-numbers language-tex"><code class="language-tex">INDEX(array, row_num,[column_num])。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><strong>解释：</strong>INDEX（数组或区域，行号，列号）。</p>
<p>1、如果数组只包含一行或一列，则对应的参数Row_num或Column_num为可选参数。</p>
<p>2、如果数组有多行或多列，但只使用参数Row_num或Column_num，函数INDEX返回数组中的整行或整列，且返回值也为数组。</p>
<p>3、如果同时使用参数Row_num或Column_num，函数INDEX返回Row_num和Column_num交叉处的单元格中的值。</p>
<p>4、如果将Row_num或Column_num设置为（零），函数INDEX则分段返回真个列或行的数组数值。</p>
<p>5、若要使用以数组形式返回的值，请将INDEX函数以数组公式形式输入，对于行以水平单元格区域的形式输入，对于列以垂直单元格区域的形式输入。若要输入数组公式，请按Ctrl+Shift+Enter。</p>
<h2 id="3、LOOKUP-函数"><a href="#3、LOOKUP-函数" class="headerlink" title="3、LOOKUP()函数"></a>3、LOOKUP()函数</h2><h2 id="3、COLUMN-函数"><a href="#3、COLUMN-函数" class="headerlink" title="3、COLUMN()函数"></a>3、COLUMN()函数</h2><p>简单说下COLUMN函数的含义和用法。</p>
<p>COLUMN函数用于获取列号，使用格式<code>COLUMN(reference)</code>，当中Reference为需要得到其列标的单元格或单元格区域。典型用法有三种。</p>
<p>1.COLUMN()</p>
<p>参数为空，COLUMN()返回公式所在单元格的列坐标值，如下公式位于B7单元格，所以返回值为2。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141441.png" alt="20190114174726994004" style="zoom:80%;">



<p>2、COLUMN(C4)</p>
<p>参数为具体的某个单元格，如COLUMN(C4)，返回C4所在列号3，如下。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141542.png" alt="20190114174726805005" style="zoom:80%;">

<p>COLUMN(A2:E6)</p>
<p>参数为单元格区域，如COLUMN(A2:E6)，返回区域中第1列（A2所在列）的列号值1，如下。</p>
<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200914141548.png" alt="20190114174726232006" style="zoom:80%;">



<p>用COLUMN取代VLOOKUP第三参数</p>
<p>参考：</p>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/31985290" target="">Excel函数公式：掌握Match函数，如虎添翼</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/32935992" target="">Excel函数公式：你真的了解INDEX函数吗</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/31202670" target="">Excel函数公式：Lookup函数，查找引用之王！！！</a> </li>
</ul>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Excel</category>
      </categories>
      <tags>
        <tag>VLOOKUP</tag>
        <tag>COLUMN，INDEX</tag>
        <tag>MATCH</tag>
        <tag>LOOPUP</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇博客</title>
    <url>/posts/ff05b5bf/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>记录第一篇博客</p>
<a id="more"></a>

<img src="https://raw.githubusercontent.com/HG1227/image/master/img_tuchuang/20200912224352.jpg" alt="wallhaven-wy751x" style="zoom:80%;"><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
</search>
